{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24","program":"C:\\Users\\gabri\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tracing","--edition=2018","C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=223b041c1546f812","-C","extra-filename=-223b041c1546f812","--out-dir","c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libcfg_if-74a1687b4a183cd9.rmeta","--extern","pin_project_lite=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libpin_project_lite-012c5347fd28e0f8.rmeta","--extern","tracing_core=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libtracing_core-f922c0747eda48f4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\gabri\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libtracing-223b041c1546f812.rmeta"},"prelude":{"crate_id":{"name":"tracing","disambiguator":[8169620378528557052,333875749063402945]},"crate_root":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src","external_crates":[{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7607668859873757532,1781785219377684392]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[13611023294341355437,10043691270023661894]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[101447838822452173,8618322888261503379]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13475896778791491548,12248248351844131012]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4016777027723060150,6575819384461205726]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2651865965395105447,1277636433429132291]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6625204696738865430,3777009149181587391]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2466389407038385562,16922006968362962921]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7691805749014262489,8411562063720114408]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10977525908131958733,15669095950081001892]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14600121526287085947,8078689161172856885]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[15875267039736385556,9614836444850963760]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":13,"id":{"name":"cfg_if","disambiguator":[15246054710812832144,12522391214617896906]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":14,"id":{"name":"tracing_core","disambiguator":[12769659734395235062,18350492861146262921]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[11460403503056708153,1798944185232093101]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[6153343985636253266,15041629645710339115]}}],"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":0,"byte_end":42191,"line_start":1,"line_end":1038,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":36958,"byte_end":36968,"line_start":888,"line_end":888,"column_start":27,"column_end":37},"alias_span":null,"name":"Instrument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":607},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":36997,"byte_end":37005,"line_start":889,"line_end":889,"column_start":28,"column_end":36},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":624},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37014,"byte_end":37019,"line_start":889,"line_end":889,"column_start":45,"column_end":50},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":213},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37028,"byte_end":37033,"line_start":889,"line_end":889,"column_start":59,"column_end":64},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":548},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37047,"byte_end":37057,"line_start":889,"line_end":889,"column_start":78,"column_end":88},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":967},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37096,"byte_end":37098,"line_start":892,"line_end":892,"column_start":21,"column_end":23},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":7},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37144,"byte_end":37152,"line_start":896,"line_end":896,"column_start":5,"column_end":13},"alias_span":null,"name":"callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":32},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37161,"byte_end":37169,"line_start":896,"line_end":896,"column_start":22,"column_end":30},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":354},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37176,"byte_end":37184,"line_start":897,"line_end":897,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":4},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37176,"byte_end":37184,"line_start":897,"line_end":897,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":14,"index":166},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37212,"byte_end":37217,"line_start":899,"line_end":899,"column_start":24,"column_end":29},"alias_span":null,"name":"event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":873},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37219,"byte_end":37224,"line_start":899,"line_end":899,"column_start":31,"column_end":36},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":365},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37226,"byte_end":37234,"line_start":899,"line_end":899,"column_start":38,"column_end":46},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37273,"byte_end":37277,"line_start":902,"line_end":902,"column_start":21,"column_end":25},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":88},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121307,"byte_end":121318,"line_start":135,"line_end":135,"column_start":35,"column_end":46},"alias_span":null,"name":"set_default","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":14,"index":85},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121425,"byte_end":121437,"line_start":138,"line_end":138,"column_start":35,"column_end":47},"alias_span":null,"name":"with_default","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":14,"index":615},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121544,"byte_end":121556,"line_start":141,"line_end":141,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":14,"index":94},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121598,"byte_end":121609,"line_start":143,"line_end":143,"column_start":5,"column_end":16},"alias_span":null,"name":"get_default","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":14,"index":89},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121611,"byte_end":121629,"line_start":143,"line_end":143,"column_start":18,"column_end":36},"alias_span":null,"name":"set_global_default","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":14,"index":607},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121631,"byte_end":121639,"line_start":143,"line_end":143,"column_start":38,"column_end":46},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":14,"index":620},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121641,"byte_end":121662,"line_start":143,"line_end":143,"column_start":48,"column_end":69},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":14,"index":90},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121970,"byte_end":121982,"line_start":152,"line_end":152,"column_start":35,"column_end":47},"alias_span":null,"name":"has_been_set","value":"","parent":{"krate":0,"index":43}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122072,"byte_end":122073,"line_start":2,"line_end":2,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"Value, ValueSet, Field","parent":{"krate":0,"index":53}},{"kind":"Use","ref_id":{"krate":14,"index":901},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132135,"byte_end":132156,"line_start":53,"line_end":53,"column_start":34,"column_end":55},"alias_span":null,"name":"ParseLevelFilterError","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":14,"index":888},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132158,"byte_end":132169,"line_start":53,"line_end":53,"column_start":57,"column_end":68},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":14,"index":984},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147552,"byte_end":147562,"line_start":316,"line_end":316,"column_start":30,"column_end":40},"alias_span":null,"name":"Attributes","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":14,"index":967},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147564,"byte_end":147566,"line_start":316,"line_end":316,"column_start":42,"column_end":44},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":14,"index":992},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147568,"byte_end":147574,"line_start":316,"line_end":316,"column_start":46,"column_end":52},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":110}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182365,"byte_end":182366,"line_start":2,"line_end":2,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"Subscriber, Interest","parent":{"krate":0,"index":204}},{"kind":"Use","ref_id":{"krate":14,"index":615},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182474,"byte_end":182486,"line_start":6,"line_end":6,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":204}},{"kind":"Use","ref_id":{"krate":14,"index":620},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184946,"byte_end":184967,"line_start":68,"line_end":68,"column_start":35,"column_end":56},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":204}},{"kind":"Use","ref_id":{"krate":14,"index":32},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37698,"byte_end":37706,"line_start":922,"line_end":922,"column_start":30,"column_end":38},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":216}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":0,"byte_end":42191,"line_start":1,"line_end":1038,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":363},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":43},{"krate":0,"index":53},{"krate":0,"index":69},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":216},{"krate":0,"index":236}],"decl_id":null,"docs":" A scoped, structured logging and diagnostics system.","sig":null,"attributes":[{"value":"/ A scoped, structured logging and diagnostics system.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":0,"byte_end":56,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":57,"byte_end":60,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":61,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":76,"byte_end":79,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `tracing` is a framework for instrumenting Rust programs to collect","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":80,"byte_end":151,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ structured, event-based diagnostic information.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":152,"byte_end":203,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":204,"byte_end":207,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ In asynchronous systems like Tokio, interpreting traditional log messages can","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":208,"byte_end":289,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ often be quite challenging. Since individual tasks are multiplexed on the same","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":290,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ thread, associated events and log lines are intermixed making it difficult to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":373,"byte_end":454,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ trace the logic flow. `tracing` expands upon logging-style diagnostics by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":455,"byte_end":532,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ allowing libraries and applications to record structured events with additional","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":533,"byte_end":616,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/ information about *temporality* and *causality* — unlike a log message, a span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":617,"byte_end":701,"line_start":13,"line_end":13,"column_start":1,"column_end":83}},{"value":"/ in `tracing` has a beginning and end time, may be entered and exited by the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":702,"byte_end":781,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ flow of execution, and may exist within a nested tree of similar spans. In","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":782,"byte_end":860,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ addition, `tracing` spans are *structured*, with the ability to record typed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":861,"byte_end":941,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ data as well as textual messages.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":942,"byte_end":979,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":980,"byte_end":983,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `tracing` crate provides the APIs necessary for instrumenting libraries","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":984,"byte_end":1063,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and applications to emit trace data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1064,"byte_end":1104,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1105,"byte_end":1108,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.42+][msrv]*","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1109,"byte_end":1163,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1164,"byte_end":1167,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1168,"byte_end":1204,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ # Core Concepts","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1205,"byte_end":1224,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1225,"byte_end":1228,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The core of `tracing`'s API is composed of _spans_, _events_ and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1229,"byte_end":1297,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ _subscribers_. We'll cover these in turn.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1298,"byte_end":1343,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1344,"byte_end":1347,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1348,"byte_end":1360,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1361,"byte_end":1364,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To record the flow of execution through a program, `tracing` introduces the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1365,"byte_end":1444,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ concept of [spans]. Unlike a log line that represents a _moment in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1445,"byte_end":1515,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ time_, a span represents a _period of time_ with a beginning and an end. When a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1516,"byte_end":1599,"line_start":34,"line_end":34,"column_start":1,"column_end":84}},{"value":"/ program begins executing in a context or performing a unit of work, it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1600,"byte_end":1674,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ _enters_ that context's span, and when it stops executing in that context,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1675,"byte_end":1753,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ it _exits_ the span. The span in which a thread is currently executing is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1754,"byte_end":1831,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ referred to as that thread's _current_ span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1832,"byte_end":1880,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1881,"byte_end":1884,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1885,"byte_end":1901,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1902,"byte_end":1909,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1910,"byte_end":1941,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1942,"byte_end":1959,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":1960,"byte_end":2006,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ // `enter` returns a RAII guard which, when dropped, exits the span. this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2007,"byte_end":2084,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ // indicates that we are in the span for the current lexical scope.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2085,"byte_end":2156,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ let _enter = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2157,"byte_end":2187,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ // perform some work in the context of `my_span`...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2188,"byte_end":2243,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2244,"byte_end":2251,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2252,"byte_end":2258,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2259,"byte_end":2262,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The [`span` module][span]'s documentation provides further details on how to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2263,"byte_end":2343,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ use spans.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2344,"byte_end":2358,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2359,"byte_end":2362,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2363,"byte_end":2392,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip compile_fail\" style=\"\">&#x26a0; &#xfe0f;<span class=\"tooltiptext\">Warning</span></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2393,"byte_end":2507,"line_start":56,"line_end":56,"column_start":1,"column_end":115}},{"value":"/ </div><div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2508,"byte_end":2640,"line_start":57,"line_end":57,"column_start":1,"column_end":133}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2641,"byte_end":2725,"line_start":58,"line_end":58,"column_start":1,"column_end":85}},{"value":"/     <code>Span::enter</code> may produce incorrect traces if the returned drop","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2726,"byte_end":2808,"line_start":59,"line_end":59,"column_start":1,"column_end":83}},{"value":"/     guard is held across an await point. See","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2809,"byte_end":2857,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/     <a href=\"span/struct.Span.html#in-asynchronous-code\">the method documentation</a>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2858,"byte_end":2947,"line_start":61,"line_end":61,"column_start":1,"column_end":90}},{"value":"/     for details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2948,"byte_end":2968,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2969,"byte_end":2985,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2986,"byte_end":2989,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Events","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":2990,"byte_end":3003,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3004,"byte_end":3007,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ An [`Event`] represents a _moment_ in time. It signifies something that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3008,"byte_end":3083,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ happened while a trace was being recorded. `Event`s are comparable to the log","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3084,"byte_end":3165,"line_start":68,"line_end":68,"column_start":1,"column_end":82}},{"value":"/ records emitted by unstructured logging code, but unlike a typical log line,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3166,"byte_end":3246,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ an `Event` may occur within the context of a span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3247,"byte_end":3301,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3302,"byte_end":3305,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3306,"byte_end":3322,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3323,"byte_end":3330,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tracing::{event, span, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3331,"byte_end":3369,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3370,"byte_end":3373,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3374,"byte_end":3391,"line_start":76,"line_end":76,"column_start":1,"column_end":18}},{"value":"/ // records an event outside of any span context:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3392,"byte_end":3444,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/ event!(Level::INFO, \"something happened\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3445,"byte_end":3491,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3492,"byte_end":3495,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3496,"byte_end":3541,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/ let _guard = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3542,"byte_end":3572,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3573,"byte_end":3576,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // records an event within \"my_span\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3577,"byte_end":3618,"line_start":83,"line_end":83,"column_start":1,"column_end":42}},{"value":"/ event!(Level::DEBUG, \"something happened inside my_span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3619,"byte_end":3681,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3682,"byte_end":3689,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3690,"byte_end":3696,"line_start":86,"line_end":86,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3697,"byte_end":3700,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ In general, events should be used to represent points in time _within_ a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3701,"byte_end":3777,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ span — a request returned with a given status code, _n_ new items were","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3778,"byte_end":3854,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ taken from a queue, and so on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3855,"byte_end":3889,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3890,"byte_end":3893,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The [`Event` struct][`Event`] documentation provides further details on using","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3894,"byte_end":3975,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"/ events.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3976,"byte_end":3987,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3988,"byte_end":3991,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ## Subscribers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":3992,"byte_end":4010,"line_start":95,"line_end":95,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4011,"byte_end":4014,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ As `Span`s and `Event`s occur, they are recorded or aggregated by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4015,"byte_end":4084,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/ implementations of the [`Subscriber`] trait. `Subscriber`s are notified","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4085,"byte_end":4160,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ when an `Event` takes place and when a `Span` is entered or exited. These","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4161,"byte_end":4238,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ notifications are represented by the following `Subscriber` trait methods:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4239,"byte_end":4317,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4318,"byte_end":4321,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ + [`event`][Subscriber::event], called when an `Event` takes place,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4322,"byte_end":4393,"line_start":102,"line_end":102,"column_start":1,"column_end":72}},{"value":"/ + [`enter`], called when execution enters a `Span`,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4394,"byte_end":4449,"line_start":103,"line_end":103,"column_start":1,"column_end":56}},{"value":"/ + [`exit`], called when execution exits a `Span`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4450,"byte_end":4502,"line_start":104,"line_end":104,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4503,"byte_end":4506,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ In addition, subscribers may implement the [`enabled`] function to _filter_","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4507,"byte_end":4586,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ the notifications they receive based on [metadata] describing each `Span`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4587,"byte_end":4664,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/ or `Event`. If a call to `Subscriber::enabled` returns `false` for a given","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4665,"byte_end":4743,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/ set of metadata, that `Subscriber` will *not* be notified about the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4744,"byte_end":4815,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ corresponding `Span` or `Event`. For performance reasons, if no currently","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4816,"byte_end":4893,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ active subscribers express interest in a given set of metadata by returning","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4894,"byte_end":4973,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/ `true`, then the corresponding `Span` or `Event` will never be constructed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":4974,"byte_end":5053,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5054,"byte_end":5057,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5058,"byte_end":5069,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5070,"byte_end":5073,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ First, add this to your `Cargo.toml`:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5074,"byte_end":5115,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5116,"byte_end":5119,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5120,"byte_end":5131,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5132,"byte_end":5150,"line_start":119,"line_end":119,"column_start":1,"column_end":19}},{"value":"/ tracing = \"0.1\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5151,"byte_end":5170,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5171,"byte_end":5178,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5179,"byte_end":5182,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: requires rustc 1.39+*","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5183,"byte_end":5227,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5228,"byte_end":5231,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Recording Spans and Events","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5232,"byte_end":5265,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5266,"byte_end":5269,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Spans and events are recorded using macros.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5270,"byte_end":5317,"line_start":127,"line_end":127,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5318,"byte_end":5321,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ### Spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5322,"byte_end":5335,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5336,"byte_end":5339,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] macro expands to a [`Span` struct][`Span`] which is used to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5340,"byte_end":5417,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ record a span. The [`Span::enter`] method on that struct records that the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5418,"byte_end":5495,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ span has been entered, and returns a [RAII] guard object, which will exit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5496,"byte_end":5573,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ the span when dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5574,"byte_end":5600,"line_start":134,"line_end":134,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5601,"byte_end":5604,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5605,"byte_end":5621,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5622,"byte_end":5625,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5626,"byte_end":5637,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5638,"byte_end":5669,"line_start":139,"line_end":139,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5670,"byte_end":5687,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ // Construct a new span named \"my span\" with trace log level.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5688,"byte_end":5753,"line_start":141,"line_end":141,"column_start":1,"column_end":66}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5754,"byte_end":5800,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5801,"byte_end":5804,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ // Enter the span, returning a guard object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5805,"byte_end":5853,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/ let _enter = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5854,"byte_end":5884,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5885,"byte_end":5888,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ // Any trace events that occur before the guard is dropped will occur","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5889,"byte_end":5962,"line_start":147,"line_end":147,"column_start":1,"column_end":74}},{"value":"/ // within the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5963,"byte_end":5986,"line_start":148,"line_end":148,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5987,"byte_end":5990,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ // Dropping the guard will exit the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":5991,"byte_end":6036,"line_start":150,"line_end":150,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6037,"byte_end":6044,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6045,"byte_end":6052,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6053,"byte_end":6056,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ The [`#[instrument]`][instrument] attribute provides an easy way to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6057,"byte_end":6128,"line_start":154,"line_end":154,"column_start":1,"column_end":72}},{"value":"/ add `tracing` spans to functions. A function annotated with `#[instrument]`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6129,"byte_end":6208,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ will create and enter a span with that function's name every time the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6209,"byte_end":6282,"line_start":156,"line_end":156,"column_start":1,"column_end":74}},{"value":"/ function is called, with arguments to that function will be recorded as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6283,"byte_end":6358,"line_start":157,"line_end":157,"column_start":1,"column_end":76}},{"value":"/ fields using `fmt::Debug`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6359,"byte_end":6389,"line_start":158,"line_end":158,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6390,"byte_end":6393,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6394,"byte_end":6410,"line_start":160,"line_end":160,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6411,"byte_end":6424,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/ # // this doctest is ignored because we don't have a way to say","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6425,"byte_end":6492,"line_start":162,"line_end":162,"column_start":1,"column_end":68}},{"value":"/ # // that it should only be run with cfg(feature = \"attributes\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6493,"byte_end":6561,"line_start":163,"line_end":163,"column_start":1,"column_end":69}},{"value":"/ use tracing::{Level, event, instrument};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6562,"byte_end":6606,"line_start":164,"line_end":164,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6607,"byte_end":6610,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ #[instrument]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6611,"byte_end":6628,"line_start":166,"line_end":166,"column_start":1,"column_end":18}},{"value":"/ pub fn my_function(my_arg: usize) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6629,"byte_end":6668,"line_start":167,"line_end":167,"column_start":1,"column_end":40}},{"value":"/     // This event will be recorded inside a span named `my_function` with the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6669,"byte_end":6750,"line_start":168,"line_end":168,"column_start":1,"column_end":82}},{"value":"/     // field `my_arg`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6751,"byte_end":6777,"line_start":169,"line_end":169,"column_start":1,"column_end":27}},{"value":"/     event!(Level::INFO, \"inside my_function!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6778,"byte_end":6829,"line_start":170,"line_end":170,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6830,"byte_end":6844,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6845,"byte_end":6850,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6851,"byte_end":6869,"line_start":173,"line_end":173,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6870,"byte_end":6877,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6878,"byte_end":6881,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6882,"byte_end":6885,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ You can find more examples showing how to use this crate [here][examples].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6886,"byte_end":6964,"line_start":177,"line_end":177,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6965,"byte_end":6968,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [RAII]: https://github.com/rust-unofficial/patterns/blob/master/patterns/RAII.md","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":6969,"byte_end":7053,"line_start":179,"line_end":179,"column_start":1,"column_end":85}},{"value":"/ [examples]: https://github.com/tokio-rs/tracing/tree/master/examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7054,"byte_end":7126,"line_start":180,"line_end":180,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7127,"byte_end":7130,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ### Events","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7131,"byte_end":7145,"line_start":182,"line_end":182,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7146,"byte_end":7149,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`Event`]s are recorded using the [`event!`] macro:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7150,"byte_end":7205,"line_start":184,"line_end":184,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7206,"byte_end":7209,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7210,"byte_end":7221,"line_start":186,"line_end":186,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7222,"byte_end":7239,"line_start":187,"line_end":187,"column_start":1,"column_end":18}},{"value":"/ use tracing::{event, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7240,"byte_end":7272,"line_start":188,"line_end":188,"column_start":1,"column_end":33}},{"value":"/ event!(Level::INFO, \"something has happened!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7273,"byte_end":7324,"line_start":189,"line_end":189,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7325,"byte_end":7332,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7333,"byte_end":7340,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7341,"byte_end":7344,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ## Using the Macros","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7345,"byte_end":7368,"line_start":193,"line_end":193,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7369,"byte_end":7372,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] and [`event!`] macros as well as the `#[instrument]` attribute","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7373,"byte_end":7453,"line_start":195,"line_end":195,"column_start":1,"column_end":81}},{"value":"/ use fairly similar syntax, with some exceptions.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7454,"byte_end":7506,"line_start":196,"line_end":196,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7507,"byte_end":7510,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ### Configuring Attributes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7511,"byte_end":7541,"line_start":198,"line_end":198,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7542,"byte_end":7545,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ Both macros require a [`Level`] specifying the verbosity of the span or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7546,"byte_end":7621,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/ event. Optionally, the [target] and [parent span] may be overridden. If the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7622,"byte_end":7701,"line_start":201,"line_end":201,"column_start":1,"column_end":80}},{"value":"/ target and parent span are not overridden, they will default to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7702,"byte_end":7773,"line_start":202,"line_end":202,"column_start":1,"column_end":72}},{"value":"/ module path where the macro was invoked and the current span (as determined","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7774,"byte_end":7853,"line_start":203,"line_end":203,"column_start":1,"column_end":80}},{"value":"/ by the subscriber), respectively.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7854,"byte_end":7891,"line_start":204,"line_end":204,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7892,"byte_end":7895,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7896,"byte_end":7912,"line_start":206,"line_end":206,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7913,"byte_end":7916,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7917,"byte_end":7924,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7925,"byte_end":7965,"line_start":209,"line_end":209,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7966,"byte_end":7983,"line_start":210,"line_end":210,"column_start":1,"column_end":18}},{"value":"/ span!(target: \"app_spans\", Level::TRACE, \"my span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":7984,"byte_end":8040,"line_start":211,"line_end":211,"column_start":1,"column_end":57}},{"value":"/ event!(target: \"app_events\", Level::INFO, \"something has happened!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8041,"byte_end":8114,"line_start":212,"line_end":212,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8115,"byte_end":8122,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8123,"byte_end":8130,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8131,"byte_end":8138,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8139,"byte_end":8179,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8180,"byte_end":8197,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8198,"byte_end":8244,"line_start":218,"line_end":218,"column_start":1,"column_end":47}},{"value":"/ event!(parent: &span, Level::INFO, \"something has happened!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8245,"byte_end":8311,"line_start":219,"line_end":219,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8312,"byte_end":8319,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8320,"byte_end":8327,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8328,"byte_end":8331,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ The span macros also take a string literal after the level, to set the name","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8332,"byte_end":8411,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ of the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8412,"byte_end":8428,"line_start":224,"line_end":224,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8429,"byte_end":8432,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ### Recording Fields","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8433,"byte_end":8457,"line_start":226,"line_end":226,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8458,"byte_end":8461,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Structured fields on spans and events are specified using the syntax","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8462,"byte_end":8534,"line_start":228,"line_end":228,"column_start":1,"column_end":73}},{"value":"/ `field_name = field_value`. Fields are separated by commas.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8535,"byte_end":8598,"line_start":229,"line_end":229,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8599,"byte_end":8602,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8603,"byte_end":8610,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8611,"byte_end":8645,"line_start":232,"line_end":232,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8646,"byte_end":8663,"line_start":233,"line_end":233,"column_start":1,"column_end":18}},{"value":"/ // records an event with two fields:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8664,"byte_end":8704,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/ //  - \"answer\", with the value 42","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8705,"byte_end":8742,"line_start":235,"line_end":235,"column_start":1,"column_end":38}},{"value":"/ //  - \"question\", with the value \"life, the universe and everything\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8743,"byte_end":8815,"line_start":236,"line_end":236,"column_start":1,"column_end":73}},{"value":"/ event!(Level::INFO, answer = 42, question = \"life, the universe, and everything\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8816,"byte_end":8902,"line_start":237,"line_end":237,"column_start":1,"column_end":87}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8903,"byte_end":8910,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8911,"byte_end":8918,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8919,"byte_end":8922,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ As shorthand, local variables may be used as field values without an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8923,"byte_end":8995,"line_start":241,"line_end":241,"column_start":1,"column_end":73}},{"value":"/ assignment, similar to [struct initializers]. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":8996,"byte_end":9058,"line_start":242,"line_end":242,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9059,"byte_end":9062,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9063,"byte_end":9070,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9071,"byte_end":9104,"line_start":245,"line_end":245,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9105,"byte_end":9122,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9123,"byte_end":9147,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9148,"byte_end":9151,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ span!(Level::TRACE, \"login\", user);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9152,"byte_end":9191,"line_start":249,"line_end":249,"column_start":1,"column_end":40}},{"value":"/ // is equivalent to:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9192,"byte_end":9216,"line_start":250,"line_end":250,"column_start":1,"column_end":25}},{"value":"/ span!(Level::TRACE, \"login\", user = user);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9217,"byte_end":9263,"line_start":251,"line_end":251,"column_start":1,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9264,"byte_end":9271,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9272,"byte_end":9278,"line_start":253,"line_end":253,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9279,"byte_end":9282,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ Field names can include dots, but should not be terminated by them:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9283,"byte_end":9354,"line_start":255,"line_end":255,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9355,"byte_end":9362,"line_start":256,"line_end":256,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9363,"byte_end":9396,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9397,"byte_end":9414,"line_start":258,"line_end":258,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9415,"byte_end":9439,"line_start":259,"line_end":259,"column_start":1,"column_end":25}},{"value":"/ let email = \"ferris@rust-lang.org\";","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9440,"byte_end":9479,"line_start":260,"line_end":260,"column_start":1,"column_end":40}},{"value":"/ span!(Level::TRACE, \"login\", user, user.email = email);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9480,"byte_end":9539,"line_start":261,"line_end":261,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9540,"byte_end":9547,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9548,"byte_end":9554,"line_start":263,"line_end":263,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9555,"byte_end":9558,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Since field names can include dots, fields on local structs can be used","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9559,"byte_end":9634,"line_start":265,"line_end":265,"column_start":1,"column_end":76}},{"value":"/ using the local variable shorthand:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9635,"byte_end":9674,"line_start":266,"line_end":266,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9675,"byte_end":9682,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9683,"byte_end":9716,"line_start":268,"line_end":268,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9717,"byte_end":9734,"line_start":269,"line_end":269,"column_start":1,"column_end":18}},{"value":"/ # struct User {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9735,"byte_end":9754,"line_start":270,"line_end":270,"column_start":1,"column_end":20}},{"value":"/ #    name: &'static str,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9755,"byte_end":9783,"line_start":271,"line_end":271,"column_start":1,"column_end":29}},{"value":"/ #    email: &'static str,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9784,"byte_end":9813,"line_start":272,"line_end":272,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9814,"byte_end":9821,"line_start":273,"line_end":273,"column_start":1,"column_end":8}},{"value":"/ let user = User {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9822,"byte_end":9843,"line_start":274,"line_end":274,"column_start":1,"column_end":22}},{"value":"/     name: \"ferris\",","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9844,"byte_end":9867,"line_start":275,"line_end":275,"column_start":1,"column_end":24}},{"value":"/     email: \"ferris@rust-lang.org\",","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9868,"byte_end":9906,"line_start":276,"line_end":276,"column_start":1,"column_end":39}},{"value":"/ };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9907,"byte_end":9913,"line_start":277,"line_end":277,"column_start":1,"column_end":7}},{"value":"/ // the span will have the fields `user.name = \"ferris\"` and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9914,"byte_end":9977,"line_start":278,"line_end":278,"column_start":1,"column_end":64}},{"value":"/ // `user.email = \"ferris@rust-lang.org\"`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":9978,"byte_end":10023,"line_start":279,"line_end":279,"column_start":1,"column_end":46}},{"value":"/ span!(Level::TRACE, \"login\", user.name, user.email);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10024,"byte_end":10080,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10081,"byte_end":10088,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10089,"byte_end":10095,"line_start":282,"line_end":282,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10096,"byte_end":10099,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ Fields with names that are not Rust identifiers, or with names that are Rust reserved words,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10100,"byte_end":10196,"line_start":284,"line_end":284,"column_start":1,"column_end":97}},{"value":"/ may be created using quoted string literals. However, this may not be used with the local","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10197,"byte_end":10290,"line_start":285,"line_end":285,"column_start":1,"column_end":94}},{"value":"/ variable shorthand.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10291,"byte_end":10314,"line_start":286,"line_end":286,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10315,"byte_end":10322,"line_start":287,"line_end":287,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10323,"byte_end":10356,"line_start":288,"line_end":288,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10357,"byte_end":10374,"line_start":289,"line_end":289,"column_start":1,"column_end":18}},{"value":"/ // records an event with fields whose names are not Rust identifiers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10375,"byte_end":10447,"line_start":290,"line_end":290,"column_start":1,"column_end":73}},{"value":"/ //  - \"guid:x-request-id\", containing a `:`, with the value \"abcdef\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10448,"byte_end":10520,"line_start":291,"line_end":291,"column_start":1,"column_end":73}},{"value":"/ //  - \"type\", which is a reserved word, with the value \"request\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10521,"byte_end":10589,"line_start":292,"line_end":292,"column_start":1,"column_end":69}},{"value":"/ span!(Level::TRACE, \"api\", \"guid:x-request-id\" = \"abcdef\", \"type\" = \"request\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10590,"byte_end":10673,"line_start":293,"line_end":293,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10674,"byte_end":10681,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10682,"byte_end":10688,"line_start":295,"line_end":295,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10689,"byte_end":10692,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ The `?` sigil is shorthand that specifies a field should be recorded using","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10693,"byte_end":10771,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ its [`fmt::Debug`] implementation:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10772,"byte_end":10810,"line_start":298,"line_end":298,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10811,"byte_end":10818,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10819,"byte_end":10853,"line_start":300,"line_end":300,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10854,"byte_end":10871,"line_start":301,"line_end":301,"column_start":1,"column_end":18}},{"value":"/ #[derive(Debug)]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10872,"byte_end":10892,"line_start":302,"line_end":302,"column_start":1,"column_end":21}},{"value":"/ struct MyStruct {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10893,"byte_end":10914,"line_start":303,"line_end":303,"column_start":1,"column_end":22}},{"value":"/     field: &'static str,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10915,"byte_end":10943,"line_start":304,"line_end":304,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10944,"byte_end":10949,"line_start":305,"line_end":305,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10950,"byte_end":10953,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10954,"byte_end":10984,"line_start":307,"line_end":307,"column_start":1,"column_end":31}},{"value":"/     field: \"Hello world!\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":10985,"byte_end":11014,"line_start":308,"line_end":308,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11015,"byte_end":11021,"line_start":309,"line_end":309,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11022,"byte_end":11025,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ // `my_struct` will be recorded using its `fmt::Debug` implementation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11026,"byte_end":11100,"line_start":311,"line_end":311,"column_start":1,"column_end":75}},{"value":"/ event!(Level::TRACE, greeting = ?my_struct);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11101,"byte_end":11149,"line_start":312,"line_end":312,"column_start":1,"column_end":49}},{"value":"/ // is equivalent to:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11150,"byte_end":11174,"line_start":313,"line_end":313,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::debug(&my_struct));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11175,"byte_end":11246,"line_start":314,"line_end":314,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11247,"byte_end":11254,"line_start":315,"line_end":315,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11255,"byte_end":11262,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11263,"byte_end":11266,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ The `%` sigil operates similarly, but indicates that the value should be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11267,"byte_end":11343,"line_start":318,"line_end":318,"column_start":1,"column_end":77}},{"value":"/ recorded using its [`fmt::Display`] implementation:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11344,"byte_end":11399,"line_start":319,"line_end":319,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11400,"byte_end":11407,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11408,"byte_end":11442,"line_start":321,"line_end":321,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11443,"byte_end":11460,"line_start":322,"line_end":322,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11461,"byte_end":11483,"line_start":323,"line_end":323,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11484,"byte_end":11507,"line_start":324,"line_end":324,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11508,"byte_end":11538,"line_start":325,"line_end":325,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11539,"byte_end":11546,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11547,"byte_end":11552,"line_start":327,"line_end":327,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11553,"byte_end":11585,"line_start":328,"line_end":328,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11586,"byte_end":11617,"line_start":329,"line_end":329,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11618,"byte_end":11626,"line_start":330,"line_end":330,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11627,"byte_end":11709,"line_start":331,"line_end":331,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, greeting = %my_struct.field);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11710,"byte_end":11764,"line_start":332,"line_end":332,"column_start":1,"column_end":55}},{"value":"/ // is equivalent to:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11765,"byte_end":11789,"line_start":333,"line_end":333,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::display(&my_struct.field));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11790,"byte_end":11869,"line_start":334,"line_end":334,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11870,"byte_end":11877,"line_start":335,"line_end":335,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11878,"byte_end":11885,"line_start":336,"line_end":336,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11886,"byte_end":11889,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ The `%` and `?` sigils may also be used with local variable shorthand:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11890,"byte_end":11964,"line_start":338,"line_end":338,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11965,"byte_end":11968,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11969,"byte_end":11976,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":11977,"byte_end":12011,"line_start":341,"line_end":341,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12012,"byte_end":12029,"line_start":342,"line_end":342,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12030,"byte_end":12052,"line_start":343,"line_end":343,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12053,"byte_end":12076,"line_start":344,"line_end":344,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12077,"byte_end":12107,"line_start":345,"line_end":345,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12108,"byte_end":12115,"line_start":346,"line_end":346,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12116,"byte_end":12121,"line_start":347,"line_end":347,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12122,"byte_end":12154,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12155,"byte_end":12186,"line_start":349,"line_end":349,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12187,"byte_end":12195,"line_start":350,"line_end":350,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12196,"byte_end":12278,"line_start":351,"line_end":351,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, %my_struct.field);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12279,"byte_end":12322,"line_start":352,"line_end":352,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12323,"byte_end":12330,"line_start":353,"line_end":353,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12331,"byte_end":12338,"line_start":354,"line_end":354,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12339,"byte_end":12342,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ Additionally, a span may declare fields with the special value [`Empty`],","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12343,"byte_end":12420,"line_start":356,"line_end":356,"column_start":1,"column_end":78}},{"value":"/ which indicates that that the value for that field does not currently exist","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12421,"byte_end":12500,"line_start":357,"line_end":357,"column_start":1,"column_end":80}},{"value":"/ but may be recorded later. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12501,"byte_end":12544,"line_start":358,"line_end":358,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12545,"byte_end":12548,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12549,"byte_end":12556,"line_start":360,"line_end":360,"column_start":1,"column_end":8}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12557,"byte_end":12594,"line_start":361,"line_end":361,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12595,"byte_end":12598,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12599,"byte_end":12682,"line_start":363,"line_end":363,"column_start":1,"column_end":84}},{"value":"/ // `parting`, without a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12683,"byte_end":12717,"line_start":364,"line_end":364,"column_start":1,"column_end":35}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12718,"byte_end":12806,"line_start":365,"line_end":365,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12807,"byte_end":12810,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12811,"byte_end":12821,"line_start":367,"line_end":367,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12822,"byte_end":12825,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12826,"byte_end":12873,"line_start":369,"line_end":369,"column_start":1,"column_end":48}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12874,"byte_end":12920,"line_start":370,"line_end":370,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12921,"byte_end":12928,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12929,"byte_end":12932,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ Note that a span may have up to 32 fields. The following will not compile:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":12933,"byte_end":13011,"line_start":373,"line_end":373,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13012,"byte_end":13015,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13016,"byte_end":13040,"line_start":375,"line_end":375,"column_start":1,"column_end":25}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13041,"byte_end":13066,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13067,"byte_end":13084,"line_start":377,"line_end":377,"column_start":1,"column_end":18}},{"value":"/ let bad_span = span!(","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13085,"byte_end":13110,"line_start":378,"line_end":378,"column_start":1,"column_end":26}},{"value":"/     Level::TRACE,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13111,"byte_end":13132,"line_start":379,"line_end":379,"column_start":1,"column_end":22}},{"value":"/     \"too many fields!\",","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13133,"byte_end":13160,"line_start":380,"line_end":380,"column_start":1,"column_end":28}},{"value":"/     a = 1, b = 2, c = 3, d = 4, e = 5, f = 6, g = 7, h = 8, i = 9,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13161,"byte_end":13231,"line_start":381,"line_end":381,"column_start":1,"column_end":71}},{"value":"/     j = 10, k = 11, l = 12, m = 13, n = 14, o = 15, p = 16, q = 17,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13232,"byte_end":13303,"line_start":382,"line_end":382,"column_start":1,"column_end":72}},{"value":"/     r = 18, s = 19, t = 20, u = 21, v = 22, w = 23, x = 24, y = 25,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13304,"byte_end":13375,"line_start":383,"line_end":383,"column_start":1,"column_end":72}},{"value":"/     z = 26, aa = 27, bb = 28, cc = 29, dd = 30, ee = 31, ff = 32, gg = 33","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13376,"byte_end":13453,"line_start":384,"line_end":384,"column_start":1,"column_end":78}},{"value":"/ );","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13454,"byte_end":13460,"line_start":385,"line_end":385,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13461,"byte_end":13468,"line_start":386,"line_end":386,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13469,"byte_end":13476,"line_start":387,"line_end":387,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13477,"byte_end":13480,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ Finally, events may also include human-readable messages, in the form of a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13481,"byte_end":13559,"line_start":389,"line_end":389,"column_start":1,"column_end":79}},{"value":"/ [format string][fmt] and (optional) arguments, **after** the event's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13560,"byte_end":13632,"line_start":390,"line_end":390,"column_start":1,"column_end":73}},{"value":"/ key-value fields. If a format string and arguments are provided,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13633,"byte_end":13701,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/ they will implicitly create a new field named `message` whose value is the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13702,"byte_end":13780,"line_start":392,"line_end":392,"column_start":1,"column_end":79}},{"value":"/ provided set of format arguments.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13781,"byte_end":13818,"line_start":393,"line_end":393,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13819,"byte_end":13822,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13823,"byte_end":13839,"line_start":395,"line_end":395,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13840,"byte_end":13843,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13844,"byte_end":13851,"line_start":397,"line_end":397,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13852,"byte_end":13886,"line_start":398,"line_end":398,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13887,"byte_end":13904,"line_start":399,"line_end":399,"column_start":1,"column_end":18}},{"value":"/ let question = \"the answer to the ultimate question of life, the universe, and everything\";","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":13905,"byte_end":14000,"line_start":400,"line_end":400,"column_start":1,"column_end":96}},{"value":"/ let answer = 42;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14001,"byte_end":14021,"line_start":401,"line_end":401,"column_start":1,"column_end":21}},{"value":"/ // records an event with the following fields:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14022,"byte_end":14072,"line_start":402,"line_end":402,"column_start":1,"column_end":51}},{"value":"/ // - `question.answer` with the value 42,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14073,"byte_end":14118,"line_start":403,"line_end":403,"column_start":1,"column_end":46}},{"value":"/ // - `question.tricky` with the value `true`,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14119,"byte_end":14168,"line_start":404,"line_end":404,"column_start":1,"column_end":50}},{"value":"/ // - \"message\", with the value \"the answer to the ultimate question of life, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14169,"byte_end":14253,"line_start":405,"line_end":405,"column_start":1,"column_end":85}},{"value":"/ //    universe, and everything is 42.\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14254,"byte_end":14296,"line_start":406,"line_end":406,"column_start":1,"column_end":43}},{"value":"/ event!(","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14297,"byte_end":14308,"line_start":407,"line_end":407,"column_start":1,"column_end":12}},{"value":"/     Level::DEBUG,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14309,"byte_end":14330,"line_start":408,"line_end":408,"column_start":1,"column_end":22}},{"value":"/     question.answer = answer,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14331,"byte_end":14364,"line_start":409,"line_end":409,"column_start":1,"column_end":34}},{"value":"/     question.tricky = true,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14365,"byte_end":14396,"line_start":410,"line_end":410,"column_start":1,"column_end":32}},{"value":"/     \"the answer to {} is {}.\", question, answer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14397,"byte_end":14448,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14449,"byte_end":14455,"line_start":412,"line_end":412,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14456,"byte_end":14463,"line_start":413,"line_end":413,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14464,"byte_end":14471,"line_start":414,"line_end":414,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14472,"byte_end":14475,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ Specifying a formatted message in this manner does not allocate by default.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14476,"byte_end":14555,"line_start":416,"line_end":416,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14556,"byte_end":14559,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ [struct initializers]: https://doc.rust-lang.org/book/ch05-01-defining-structs.html#using-the-field-init-shorthand-when-variables-and-fields-have-the-same-name","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14560,"byte_end":14723,"line_start":418,"line_end":418,"column_start":1,"column_end":164}},{"value":"/ [target]: struct.Metadata.html#method.target","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14724,"byte_end":14772,"line_start":419,"line_end":419,"column_start":1,"column_end":49}},{"value":"/ [parent span]: span/struct.Attributes.html#method.parent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14773,"byte_end":14833,"line_start":420,"line_end":420,"column_start":1,"column_end":61}},{"value":"/ [determined contextually]: span/struct.Attributes.html#method.is_contextual","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14834,"byte_end":14913,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/ [`fmt::Debug`]: https://doc.rust-lang.org/std/fmt/trait.Debug.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14914,"byte_end":14984,"line_start":422,"line_end":422,"column_start":1,"column_end":71}},{"value":"/ [`fmt::Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":14985,"byte_end":15059,"line_start":423,"line_end":423,"column_start":1,"column_end":75}},{"value":"/ [fmt]: https://doc.rust-lang.org/std/fmt/#usage","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15060,"byte_end":15111,"line_start":424,"line_end":424,"column_start":1,"column_end":52}},{"value":"/ [`Empty`]: field/struct.Empty.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15112,"byte_end":15150,"line_start":425,"line_end":425,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15151,"byte_end":15154,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ ### Shorthand Macros","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15155,"byte_end":15179,"line_start":427,"line_end":427,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15180,"byte_end":15183,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ `tracing` also offers a number of macros with preset verbosity levels.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15184,"byte_end":15258,"line_start":429,"line_end":429,"column_start":1,"column_end":75}},{"value":"/ The [`trace!`], [`debug!`], [`info!`], [`warn!`], and [`error!`] behave","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15259,"byte_end":15334,"line_start":430,"line_end":430,"column_start":1,"column_end":76}},{"value":"/ similarly to the [`event!`] macro, but with the [`Level`] argument already","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15335,"byte_end":15413,"line_start":431,"line_end":431,"column_start":1,"column_end":79}},{"value":"/ specified, while the corresponding [`trace_span!`], [`debug_span!`],","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15414,"byte_end":15486,"line_start":432,"line_end":432,"column_start":1,"column_end":73}},{"value":"/ [`info_span!`], [`warn_span!`], and [`error_span!`] macros are the same,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15487,"byte_end":15563,"line_start":433,"line_end":433,"column_start":1,"column_end":77}},{"value":"/ but for the [`span!`] macro.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15564,"byte_end":15596,"line_start":434,"line_end":434,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15597,"byte_end":15600,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ These are intended both as a shorthand, and for compatibility with the [`log`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15601,"byte_end":15683,"line_start":436,"line_end":436,"column_start":1,"column_end":83}},{"value":"/ crate (see the next section).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15684,"byte_end":15717,"line_start":437,"line_end":437,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15718,"byte_end":15721,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ [`span!`]: macro.span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15722,"byte_end":15752,"line_start":439,"line_end":439,"column_start":1,"column_end":31}},{"value":"/ [`event!`]: macro.event.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15753,"byte_end":15785,"line_start":440,"line_end":440,"column_start":1,"column_end":33}},{"value":"/ [`trace!`]: macro.trace.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15786,"byte_end":15818,"line_start":441,"line_end":441,"column_start":1,"column_end":33}},{"value":"/ [`debug!`]: macro.debug.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15819,"byte_end":15851,"line_start":442,"line_end":442,"column_start":1,"column_end":33}},{"value":"/ [`info!`]: macro.info.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15852,"byte_end":15882,"line_start":443,"line_end":443,"column_start":1,"column_end":31}},{"value":"/ [`warn!`]: macro.warn.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15883,"byte_end":15913,"line_start":444,"line_end":444,"column_start":1,"column_end":31}},{"value":"/ [`error!`]: macro.error.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15914,"byte_end":15946,"line_start":445,"line_end":445,"column_start":1,"column_end":33}},{"value":"/ [`trace_span!`]: macro.trace_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15947,"byte_end":15989,"line_start":446,"line_end":446,"column_start":1,"column_end":43}},{"value":"/ [`debug_span!`]: macro.debug_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":15990,"byte_end":16032,"line_start":447,"line_end":447,"column_start":1,"column_end":43}},{"value":"/ [`info_span!`]: macro.info_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16033,"byte_end":16073,"line_start":448,"line_end":448,"column_start":1,"column_end":41}},{"value":"/ [`warn_span!`]: macro.warn_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16074,"byte_end":16114,"line_start":449,"line_end":449,"column_start":1,"column_end":41}},{"value":"/ [`error_span!`]: macro.error_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16115,"byte_end":16157,"line_start":450,"line_end":450,"column_start":1,"column_end":43}},{"value":"/ [`Level`]: struct.Level.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16158,"byte_end":16190,"line_start":451,"line_end":451,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16191,"byte_end":16194,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ ### For `log` Users","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16195,"byte_end":16218,"line_start":453,"line_end":453,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16219,"byte_end":16222,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ Users of the [`log`] crate should note that `tracing` exposes a set of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16223,"byte_end":16297,"line_start":455,"line_end":455,"column_start":1,"column_end":75}},{"value":"/ macros for creating `Event`s (`trace!`, `debug!`, `info!`, `warn!`, and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16298,"byte_end":16373,"line_start":456,"line_end":456,"column_start":1,"column_end":76}},{"value":"/ `error!`) which may be invoked with the same syntax as the similarly-named","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16374,"byte_end":16452,"line_start":457,"line_end":457,"column_start":1,"column_end":79}},{"value":"/ macros from the `log` crate. Often, the process of converting a project to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16453,"byte_end":16531,"line_start":458,"line_end":458,"column_start":1,"column_end":79}},{"value":"/ use `tracing` can begin with a simple drop-in replacement.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16532,"byte_end":16594,"line_start":459,"line_end":459,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16595,"byte_end":16598,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ Let's consider the `log` crate's yak-shaving example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16599,"byte_end":16656,"line_start":461,"line_end":461,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16657,"byte_end":16660,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16661,"byte_end":16679,"line_start":463,"line_end":463,"column_start":1,"column_end":19}},{"value":"/ use std::{error::Error, io};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16680,"byte_end":16712,"line_start":464,"line_end":464,"column_start":1,"column_end":33}},{"value":"/ use tracing::{debug, error, info, span, warn, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16713,"byte_end":16770,"line_start":465,"line_end":465,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16771,"byte_end":16774,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ // the `#[tracing::instrument]` attribute creates and enters a span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16775,"byte_end":16846,"line_start":467,"line_end":467,"column_start":1,"column_end":72}},{"value":"/ // every time the instrumented function is called. The span is named after the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16847,"byte_end":16929,"line_start":468,"line_end":468,"column_start":1,"column_end":83}},{"value":"/ // the function or method. Parameters passed to the function are recorded as fields.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":16930,"byte_end":17018,"line_start":469,"line_end":469,"column_start":1,"column_end":89}},{"value":"/ #[tracing::instrument]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17019,"byte_end":17045,"line_start":470,"line_end":470,"column_start":1,"column_end":27}},{"value":"/ pub fn shave(yak: usize) -> Result<(), Box<dyn Error + 'static>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17046,"byte_end":17116,"line_start":471,"line_end":471,"column_start":1,"column_end":71}},{"value":"/     // this creates an event at the DEBUG level with two fields:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17117,"byte_end":17185,"line_start":472,"line_end":472,"column_start":1,"column_end":69}},{"value":"/     // - `excitement`, with the key \"excitement\" and the value \"yay!\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17186,"byte_end":17259,"line_start":473,"line_end":473,"column_start":1,"column_end":74}},{"value":"/     // - `message`, with the key \"message\" and the value \"hello! I'm gonna shave a yak.\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17260,"byte_end":17352,"line_start":474,"line_end":474,"column_start":1,"column_end":93}},{"value":"/     //","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17353,"byte_end":17363,"line_start":475,"line_end":475,"column_start":1,"column_end":11}},{"value":"/     // unlike other fields, `message`'s shorthand initialization is just the string itself.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17364,"byte_end":17459,"line_start":476,"line_end":476,"column_start":1,"column_end":96}},{"value":"/     debug!(excitement = \"yay!\", \"hello! I'm gonna shave a yak.\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17460,"byte_end":17529,"line_start":477,"line_end":477,"column_start":1,"column_end":70}},{"value":"/     if yak == 3 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17530,"byte_end":17551,"line_start":478,"line_end":478,"column_start":1,"column_end":22}},{"value":"/         warn!(\"could not locate yak!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17552,"byte_end":17595,"line_start":479,"line_end":479,"column_start":1,"column_end":44}},{"value":"/         // note that this is intended to demonstrate `tracing`'s features, not idiomatic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17596,"byte_end":17688,"line_start":480,"line_end":480,"column_start":1,"column_end":93}},{"value":"/         // error handling! in a library or application, you should consider returning","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17689,"byte_end":17778,"line_start":481,"line_end":481,"column_start":1,"column_end":90}},{"value":"/         // a dedicated `YakError`. libraries like snafu or thiserror make this easy.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17779,"byte_end":17867,"line_start":482,"line_end":482,"column_start":1,"column_end":89}},{"value":"/         return Err(io::Error::new(io::ErrorKind::Other, \"shaving yak failed!\").into());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17868,"byte_end":17959,"line_start":483,"line_end":483,"column_start":1,"column_end":92}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17960,"byte_end":17976,"line_start":484,"line_end":484,"column_start":1,"column_end":17}},{"value":"/         debug!(\"yak shaved successfully\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":17977,"byte_end":18023,"line_start":485,"line_end":485,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18024,"byte_end":18033,"line_start":486,"line_end":486,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18034,"byte_end":18048,"line_start":487,"line_end":487,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18049,"byte_end":18054,"line_start":488,"line_end":488,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18055,"byte_end":18058,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ pub fn shave_all(yaks: usize) -> usize {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18059,"byte_end":18103,"line_start":490,"line_end":490,"column_start":1,"column_end":45}},{"value":"/     // Constructs a new span named \"shaving_yaks\" at the TRACE level,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18104,"byte_end":18177,"line_start":491,"line_end":491,"column_start":1,"column_end":74}},{"value":"/     // and a field whose key is \"yaks\". This is equivalent to writing:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18178,"byte_end":18252,"line_start":492,"line_end":492,"column_start":1,"column_end":75}},{"value":"/     //","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18253,"byte_end":18263,"line_start":493,"line_end":493,"column_start":1,"column_end":11}},{"value":"/     // let span = span!(Level::TRACE, \"shaving_yaks\", yaks = yaks);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18264,"byte_end":18335,"line_start":494,"line_end":494,"column_start":1,"column_end":72}},{"value":"/     //","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18336,"byte_end":18346,"line_start":495,"line_end":495,"column_start":1,"column_end":11}},{"value":"/     // local variables (`yaks`) can be used as field values","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18347,"byte_end":18410,"line_start":496,"line_end":496,"column_start":1,"column_end":64}},{"value":"/     // without an assignment, similar to struct initializers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18411,"byte_end":18476,"line_start":497,"line_end":497,"column_start":1,"column_end":66}},{"value":"/     let span = span!(Level::TRACE, \"shaving_yaks\", yaks);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18477,"byte_end":18538,"line_start":498,"line_end":498,"column_start":1,"column_end":62}},{"value":"/     let _enter = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18539,"byte_end":18573,"line_start":499,"line_end":499,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18574,"byte_end":18577,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/     info!(\"shaving yaks\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18578,"byte_end":18608,"line_start":501,"line_end":501,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18609,"byte_end":18612,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/     let mut yaks_shaved = 0;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18613,"byte_end":18645,"line_start":503,"line_end":503,"column_start":1,"column_end":33}},{"value":"/     for yak in 1..=yaks {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18646,"byte_end":18675,"line_start":504,"line_end":504,"column_start":1,"column_end":30}},{"value":"/         let res = shave(yak);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18676,"byte_end":18709,"line_start":505,"line_end":505,"column_start":1,"column_end":34}},{"value":"/         debug!(yak, shaved = res.is_ok());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18710,"byte_end":18756,"line_start":506,"line_end":506,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18757,"byte_end":18760,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/         if let Err(ref error) = res {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18761,"byte_end":18802,"line_start":508,"line_end":508,"column_start":1,"column_end":42}},{"value":"/             // Like spans, events can also use the field initialization shorthand.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18803,"byte_end":18889,"line_start":509,"line_end":509,"column_start":1,"column_end":87}},{"value":"/             // In this instance, `yak` is the field being initalized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18890,"byte_end":18963,"line_start":510,"line_end":510,"column_start":1,"column_end":74}},{"value":"/             error!(yak, error = error.as_ref(), \"failed to shave yak!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":18964,"byte_end":19040,"line_start":511,"line_end":511,"column_start":1,"column_end":77}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19041,"byte_end":19061,"line_start":512,"line_end":512,"column_start":1,"column_end":21}},{"value":"/             yaks_shaved += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19062,"byte_end":19095,"line_start":513,"line_end":513,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19096,"byte_end":19109,"line_start":514,"line_end":514,"column_start":1,"column_end":14}},{"value":"/         debug!(yaks_shaved);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19110,"byte_end":19142,"line_start":515,"line_end":515,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19143,"byte_end":19152,"line_start":516,"line_end":516,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19153,"byte_end":19156,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/     yaks_shaved","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19157,"byte_end":19176,"line_start":518,"line_end":518,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19177,"byte_end":19182,"line_start":519,"line_end":519,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19183,"byte_end":19190,"line_start":520,"line_end":520,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19191,"byte_end":19194,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ ## In libraries","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19195,"byte_end":19214,"line_start":522,"line_end":522,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19215,"byte_end":19218,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ Libraries should link only to the `tracing` crate, and use the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19219,"byte_end":19294,"line_start":524,"line_end":524,"column_start":1,"column_end":76}},{"value":"/ macros to record whatever information will be useful to downstream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19295,"byte_end":19365,"line_start":525,"line_end":525,"column_start":1,"column_end":71}},{"value":"/ consumers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19366,"byte_end":19380,"line_start":526,"line_end":526,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19381,"byte_end":19384,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ ## In executables","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19385,"byte_end":19406,"line_start":528,"line_end":528,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19407,"byte_end":19410,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ In order to record trace events, executables have to use a `Subscriber`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19411,"byte_end":19486,"line_start":530,"line_end":530,"column_start":1,"column_end":76}},{"value":"/ implementation compatible with `tracing`. A `Subscriber` implements a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19487,"byte_end":19560,"line_start":531,"line_end":531,"column_start":1,"column_end":74}},{"value":"/ way of collecting trace data, such as by logging it to standard output.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19561,"byte_end":19636,"line_start":532,"line_end":532,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19637,"byte_end":19640,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ This library does not contain any `Subscriber` implementations; these are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19641,"byte_end":19718,"line_start":534,"line_end":534,"column_start":1,"column_end":78}},{"value":"/ provided by [other crates](#related-crates).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19719,"byte_end":19767,"line_start":535,"line_end":535,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19768,"byte_end":19771,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ The simplest way to use a subscriber is to call the [`set_global_default`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19772,"byte_end":19850,"line_start":537,"line_end":537,"column_start":1,"column_end":79}},{"value":"/ function:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19851,"byte_end":19864,"line_start":538,"line_end":538,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19865,"byte_end":19868,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19869,"byte_end":19876,"line_start":540,"line_end":540,"column_start":1,"column_end":8}},{"value":"/ extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19877,"byte_end":19902,"line_start":541,"line_end":541,"column_start":1,"column_end":26}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19903,"byte_end":19934,"line_start":542,"line_end":542,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19935,"byte_end":19997,"line_start":543,"line_end":543,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":19998,"byte_end":20048,"line_start":544,"line_end":544,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20049,"byte_end":20117,"line_start":545,"line_end":545,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20118,"byte_end":20165,"line_start":546,"line_end":546,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20166,"byte_end":20212,"line_start":547,"line_end":547,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20213,"byte_end":20269,"line_start":548,"line_end":548,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20270,"byte_end":20327,"line_start":549,"line_end":549,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20328,"byte_end":20362,"line_start":550,"line_end":550,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20363,"byte_end":20396,"line_start":551,"line_end":551,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20397,"byte_end":20404,"line_start":552,"line_end":552,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20405,"byte_end":20431,"line_start":553,"line_end":553,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20432,"byte_end":20474,"line_start":554,"line_end":554,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20475,"byte_end":20482,"line_start":555,"line_end":555,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20483,"byte_end":20500,"line_start":556,"line_end":556,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20501,"byte_end":20504,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20505,"byte_end":20550,"line_start":558,"line_end":558,"column_start":1,"column_end":46}},{"value":"/ tracing::subscriber::set_global_default(my_subscriber)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20551,"byte_end":20609,"line_start":559,"line_end":559,"column_start":1,"column_end":59}},{"value":"/     .expect(\"setting tracing default failed\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20610,"byte_end":20660,"line_start":560,"line_end":560,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20661,"byte_end":20668,"line_start":561,"line_end":561,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20669,"byte_end":20676,"line_start":562,"line_end":562,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20677,"byte_end":20680,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20681,"byte_end":20710,"line_start":564,"line_end":564,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip compile_fail\" style=\"\">&#x26a0; &#xfe0f;<span class=\"tooltiptext\">Warning</span></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20711,"byte_end":20825,"line_start":565,"line_end":565,"column_start":1,"column_end":115}},{"value":"/ </div><div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20826,"byte_end":20958,"line_start":566,"line_end":566,"column_start":1,"column_end":133}},{"value":"/ <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":20959,"byte_end":21035,"line_start":567,"line_end":567,"column_start":1,"column_end":77}},{"value":"/ <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21036,"byte_end":21109,"line_start":568,"line_end":568,"column_start":1,"column_end":74}},{"value":"/ executables that depend on the library try to set the default later.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21110,"byte_end":21182,"line_start":569,"line_end":569,"column_start":1,"column_end":73}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21183,"byte_end":21199,"line_start":570,"line_end":570,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21200,"byte_end":21203,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ This subscriber will be used as the default in all threads for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21204,"byte_end":21274,"line_start":572,"line_end":572,"column_start":1,"column_end":71}},{"value":"/ remainder of the duration of the program, similar to setting the logger","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21275,"byte_end":21350,"line_start":573,"line_end":573,"column_start":1,"column_end":76}},{"value":"/ in the `log` crate.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21351,"byte_end":21374,"line_start":574,"line_end":574,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21375,"byte_end":21378,"line_start":575,"line_end":575,"column_start":1,"column_end":4}},{"value":"/ In addition, the default subscriber can be set through using the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21379,"byte_end":21447,"line_start":576,"line_end":576,"column_start":1,"column_end":69}},{"value":"/ [`with_default`] function. This follows the `tokio` pattern of using","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21448,"byte_end":21520,"line_start":577,"line_end":577,"column_start":1,"column_end":73}},{"value":"/ closures to represent executing code in a context that is exited at the end","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21521,"byte_end":21600,"line_start":578,"line_end":578,"column_start":1,"column_end":80}},{"value":"/ of the closure. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21601,"byte_end":21633,"line_start":579,"line_end":579,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21634,"byte_end":21637,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21638,"byte_end":21649,"line_start":581,"line_end":581,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21650,"byte_end":21681,"line_start":582,"line_end":582,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21682,"byte_end":21744,"line_start":583,"line_end":583,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21745,"byte_end":21795,"line_start":584,"line_end":584,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21796,"byte_end":21864,"line_start":585,"line_end":585,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21865,"byte_end":21912,"line_start":586,"line_end":586,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21913,"byte_end":21959,"line_start":587,"line_end":587,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":21960,"byte_end":22016,"line_start":588,"line_end":588,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22017,"byte_end":22074,"line_start":589,"line_end":589,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22075,"byte_end":22109,"line_start":590,"line_end":590,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22110,"byte_end":22143,"line_start":591,"line_end":591,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22144,"byte_end":22151,"line_start":592,"line_end":592,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22152,"byte_end":22178,"line_start":593,"line_end":593,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22179,"byte_end":22221,"line_start":594,"line_end":594,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22222,"byte_end":22229,"line_start":595,"line_end":595,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22230,"byte_end":22247,"line_start":596,"line_end":596,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22248,"byte_end":22251,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22252,"byte_end":22297,"line_start":598,"line_end":598,"column_start":1,"column_end":46}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22298,"byte_end":22327,"line_start":599,"line_end":599,"column_start":1,"column_end":30}},{"value":"/ tracing::subscriber::with_default(my_subscriber, || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22328,"byte_end":22385,"line_start":600,"line_end":600,"column_start":1,"column_end":58}},{"value":"/     // Any trace events generated in this closure or by functions it calls","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22386,"byte_end":22464,"line_start":601,"line_end":601,"column_start":1,"column_end":79}},{"value":"/     // will be collected by `my_subscriber`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22465,"byte_end":22513,"line_start":602,"line_end":602,"column_start":1,"column_end":49}},{"value":"/ })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22514,"byte_end":22520,"line_start":603,"line_end":603,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22521,"byte_end":22528,"line_start":604,"line_end":604,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22529,"byte_end":22536,"line_start":605,"line_end":605,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22537,"byte_end":22540,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ This approach allows trace data to be collected by multiple subscribers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22541,"byte_end":22616,"line_start":607,"line_end":607,"column_start":1,"column_end":76}},{"value":"/ within different contexts in the program. Note that the override only applies to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22617,"byte_end":22705,"line_start":608,"line_end":608,"column_start":1,"column_end":89}},{"value":"/ currently executing thread; other threads will not see the change from with_default.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22706,"byte_end":22794,"line_start":609,"line_end":609,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22795,"byte_end":22798,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ Any trace events generated outside the context of a subscriber will not be collected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22799,"byte_end":22888,"line_start":611,"line_end":611,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22889,"byte_end":22892,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ Once a subscriber has been set, instrumentation points may be added to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22893,"byte_end":22971,"line_start":613,"line_end":613,"column_start":1,"column_end":79}},{"value":"/ executable using the `tracing` crate's macros.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":22972,"byte_end":23022,"line_start":614,"line_end":614,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23023,"byte_end":23026,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ ## `log` Compatibility","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23027,"byte_end":23053,"line_start":616,"line_end":616,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23054,"byte_end":23057,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ The [`log`] crate provides a simple, lightweight logging facade for Rust.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23058,"byte_end":23135,"line_start":618,"line_end":618,"column_start":1,"column_end":78}},{"value":"/ While `tracing` builds upon `log`'s foundation with richer structured","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23136,"byte_end":23209,"line_start":619,"line_end":619,"column_start":1,"column_end":74}},{"value":"/ diagnostic data, `log`'s simplicity and ubiquity make it the \"lowest common","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23210,"byte_end":23289,"line_start":620,"line_end":620,"column_start":1,"column_end":80}},{"value":"/ denominator\" for text-based logging in Rust — a vast majority of Rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23290,"byte_end":23365,"line_start":621,"line_end":621,"column_start":1,"column_end":74}},{"value":"/ libraries and applications either emit or consume `log` records. Therefore,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23366,"byte_end":23445,"line_start":622,"line_end":622,"column_start":1,"column_end":80}},{"value":"/ `tracing` provides multiple forms of interoperability with `log`: `tracing`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23446,"byte_end":23525,"line_start":623,"line_end":623,"column_start":1,"column_end":80}},{"value":"/ instrumentation can emit `log` records, and a compatibility layer enables","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23526,"byte_end":23603,"line_start":624,"line_end":624,"column_start":1,"column_end":78}},{"value":"/ `tracing` [`Subscriber`]s to consume `log` records as `tracing` [`Event`]s.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23604,"byte_end":23683,"line_start":625,"line_end":625,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23684,"byte_end":23687,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ ### Emitting `log` Records","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23688,"byte_end":23718,"line_start":627,"line_end":627,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23719,"byte_end":23722,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ This crate provides two feature flags, \"log\" and \"log-always\", which will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23723,"byte_end":23800,"line_start":629,"line_end":629,"column_start":1,"column_end":78}},{"value":"/ cause [spans] and [events] to emit `log` records. When the \"log\" feature is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23801,"byte_end":23880,"line_start":630,"line_end":630,"column_start":1,"column_end":80}},{"value":"/ enabled, if no `tracing` `Subscriber` is active, invoking an event macro or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23881,"byte_end":23960,"line_start":631,"line_end":631,"column_start":1,"column_end":80}},{"value":"/ creating a span with fields will emit a `log` record. This is intended","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":23961,"byte_end":24035,"line_start":632,"line_end":632,"column_start":1,"column_end":75}},{"value":"/ primarily for use in libraries which wish to emit diagnostics that can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24036,"byte_end":24113,"line_start":633,"line_end":633,"column_start":1,"column_end":78}},{"value":"/ consumed by applications using `tracing` *or* `log`, without paying the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24114,"byte_end":24189,"line_start":634,"line_end":634,"column_start":1,"column_end":76}},{"value":"/ additional overhead of emitting both forms of diagnostics when `tracing` is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24190,"byte_end":24269,"line_start":635,"line_end":635,"column_start":1,"column_end":80}},{"value":"/ in use.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24270,"byte_end":24281,"line_start":636,"line_end":636,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24282,"byte_end":24285,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ Enabling the \"log-always\" feature will cause `log` records to be emitted","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24286,"byte_end":24362,"line_start":638,"line_end":638,"column_start":1,"column_end":77}},{"value":"/ even if a `tracing` `Subscriber` _is_ set. This is intended to be used in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24363,"byte_end":24440,"line_start":639,"line_end":639,"column_start":1,"column_end":78}},{"value":"/ applications where a `log` `Logger` is being used to record a textual log,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24441,"byte_end":24519,"line_start":640,"line_end":640,"column_start":1,"column_end":79}},{"value":"/ and `tracing` is used only to record other forms of diagnostics (such as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24520,"byte_end":24596,"line_start":641,"line_end":641,"column_start":1,"column_end":77}},{"value":"/ metrics, profiling, or distributed tracing data). Unlike the \"log\" feature,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24597,"byte_end":24676,"line_start":642,"line_end":642,"column_start":1,"column_end":80}},{"value":"/ libraries generally should **not** enable the \"log-always\" feature, as doing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24677,"byte_end":24757,"line_start":643,"line_end":643,"column_start":1,"column_end":81}},{"value":"/ so will prevent applications from being able to opt out of the `log` records.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24758,"byte_end":24839,"line_start":644,"line_end":644,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24840,"byte_end":24843,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ See [here][flags] for more details on this crate's feature flags.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24844,"byte_end":24913,"line_start":646,"line_end":646,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24914,"byte_end":24917,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ The generated `log` records' messages will be a string representation of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24918,"byte_end":24998,"line_start":648,"line_end":648,"column_start":1,"column_end":81}},{"value":"/ span or event's fields, and all additional information recorded by `log`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":24999,"byte_end":25075,"line_start":649,"line_end":649,"column_start":1,"column_end":77}},{"value":"/ (target, verbosity level, module path, file, and line number) will also be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25076,"byte_end":25154,"line_start":650,"line_end":650,"column_start":1,"column_end":79}},{"value":"/ populated. Additionally, `log` records are also generated when spans are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25155,"byte_end":25231,"line_start":651,"line_end":651,"column_start":1,"column_end":77}},{"value":"/ entered, exited, and closed. Since these additional span lifecycle logs have","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25232,"byte_end":25312,"line_start":652,"line_end":652,"column_start":1,"column_end":81}},{"value":"/ the potential to be very verbose, and don't include additional fields, they","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25313,"byte_end":25392,"line_start":653,"line_end":653,"column_start":1,"column_end":80}},{"value":"/ will always be emitted at the `Trace` level, rather than inheriting the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25393,"byte_end":25468,"line_start":654,"line_end":654,"column_start":1,"column_end":76}},{"value":"/ level of the span that generated them. Furthermore, they are are categorized","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25469,"byte_end":25549,"line_start":655,"line_end":655,"column_start":1,"column_end":81}},{"value":"/ under a separate `log` target, \"tracing::span\" (and its sub-target,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25550,"byte_end":25621,"line_start":656,"line_end":656,"column_start":1,"column_end":72}},{"value":"/ \"tracing::span::active\", for the logs on entering and exiting a span), which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25622,"byte_end":25702,"line_start":657,"line_end":657,"column_start":1,"column_end":81}},{"value":"/ may be enabled or disabled separately from other `log` records emitted by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25703,"byte_end":25780,"line_start":658,"line_end":658,"column_start":1,"column_end":78}},{"value":"/ `tracing`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25781,"byte_end":25795,"line_start":659,"line_end":659,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25796,"byte_end":25799,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ ### Consuming `log` Records","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25800,"byte_end":25831,"line_start":661,"line_end":661,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25832,"byte_end":25835,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ The [`tracing-log`] crate provides a compatibility layer which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25836,"byte_end":25902,"line_start":663,"line_end":663,"column_start":1,"column_end":67}},{"value":"/ allows a `tracing` [`Subscriber`] to consume `log` records as though they","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25903,"byte_end":25980,"line_start":664,"line_end":664,"column_start":1,"column_end":78}},{"value":"/ were `tracing` [events]. This allows applications using `tracing` to record","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":25981,"byte_end":26060,"line_start":665,"line_end":665,"column_start":1,"column_end":80}},{"value":"/ the logs emitted by dependencies using `log` as events within the context of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26061,"byte_end":26141,"line_start":666,"line_end":666,"column_start":1,"column_end":81}},{"value":"/ the application's trace tree. See [that crate's documentation][log-tracer]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26142,"byte_end":26220,"line_start":667,"line_end":667,"column_start":1,"column_end":79}},{"value":"/ for details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26221,"byte_end":26237,"line_start":668,"line_end":668,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26238,"byte_end":26241,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ [log-tracer]: https://docs.rs/tracing-log/latest/tracing_log/#convert-log-records-to-tracing-events","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26242,"byte_end":26345,"line_start":670,"line_end":670,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26346,"byte_end":26349,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ ## Related Crates","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26350,"byte_end":26371,"line_start":672,"line_end":672,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26372,"byte_end":26375,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ In addition to `tracing` and `tracing-core`, the [`tokio-rs/tracing`] repository","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26376,"byte_end":26460,"line_start":674,"line_end":674,"column_start":1,"column_end":85}},{"value":"/ contains several additional crates designed to be used with the `tracing` ecosystem.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26461,"byte_end":26549,"line_start":675,"line_end":675,"column_start":1,"column_end":89}},{"value":"/ This includes a collection of `Subscriber` implementations, as well as utility","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26550,"byte_end":26632,"line_start":676,"line_end":676,"column_start":1,"column_end":83}},{"value":"/ and adapter crates to assist in writing `Subscriber`s and instrumenting","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26633,"byte_end":26708,"line_start":677,"line_end":677,"column_start":1,"column_end":76}},{"value":"/ applications.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26709,"byte_end":26726,"line_start":678,"line_end":678,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26727,"byte_end":26730,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ In particular, the following crates are likely to be of interest:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26731,"byte_end":26800,"line_start":680,"line_end":680,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26801,"byte_end":26804,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-futures`] provides a compatibility layer with the `futures`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26805,"byte_end":26881,"line_start":682,"line_end":682,"column_start":1,"column_end":77}},{"value":"/    crate, allowing spans to be attached to `Future`s, `Stream`s, and `Executor`s.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26882,"byte_end":26967,"line_start":683,"line_end":683,"column_start":1,"column_end":86}},{"value":"/  - [`tracing-subscriber`] provides `Subscriber` implementations and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":26968,"byte_end":27039,"line_start":684,"line_end":684,"column_start":1,"column_end":72}},{"value":"/    utilities for working with `Subscriber`s. This includes a [`FmtSubscriber`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27040,"byte_end":27122,"line_start":685,"line_end":685,"column_start":1,"column_end":83}},{"value":"/    `FmtSubscriber` for logging formatted trace data to stdout, with similar","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27123,"byte_end":27202,"line_start":686,"line_end":686,"column_start":1,"column_end":80}},{"value":"/    filtering and formatting to the [`env_logger`] crate.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27203,"byte_end":27263,"line_start":687,"line_end":687,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-log`] provides a compatibility layer with the [`log`] crate,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27264,"byte_end":27341,"line_start":688,"line_end":688,"column_start":1,"column_end":78}},{"value":"/    allowing log messages to be recorded as `tracing` `Event`s within the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27342,"byte_end":27418,"line_start":689,"line_end":689,"column_start":1,"column_end":77}},{"value":"/    trace tree. This is useful when a project using `tracing` have","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27419,"byte_end":27488,"line_start":690,"line_end":690,"column_start":1,"column_end":70}},{"value":"/    dependencies which use `log`. Note that if you're using","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27489,"byte_end":27551,"line_start":691,"line_end":691,"column_start":1,"column_end":63}},{"value":"/    `tracing-subscriber`'s `FmtSubscriber`, you don't need to depend on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27552,"byte_end":27626,"line_start":692,"line_end":692,"column_start":1,"column_end":75}},{"value":"/    `tracing-log` directly.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27627,"byte_end":27657,"line_start":693,"line_end":693,"column_start":1,"column_end":31}},{"value":"/  - [`tracing-appender`] provides utilities for outputting tracing data,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27658,"byte_end":27733,"line_start":694,"line_end":694,"column_start":1,"column_end":76}},{"value":"/     including a file appender and non blocking writer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27734,"byte_end":27792,"line_start":695,"line_end":695,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27793,"byte_end":27796,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/ Additionally, there are also several third-party crates which are not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27797,"byte_end":27870,"line_start":697,"line_end":697,"column_start":1,"column_end":74}},{"value":"/ maintained by the `tokio` project. These include:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27871,"byte_end":27924,"line_start":698,"line_end":698,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27925,"byte_end":27928,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-timing`] implements inter-event timing metrics on top of `tracing`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":27929,"byte_end":28013,"line_start":700,"line_end":700,"column_start":1,"column_end":85}},{"value":"/    It provides a subscriber that records the time elapsed between pairs of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28014,"byte_end":28092,"line_start":701,"line_end":701,"column_start":1,"column_end":79}},{"value":"/    `tracing` events and generates histograms.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28093,"byte_end":28142,"line_start":702,"line_end":702,"column_start":1,"column_end":50}},{"value":"/  - [`tracing-opentelemetry`] provides a subscriber for emitting traces to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28143,"byte_end":28220,"line_start":703,"line_end":703,"column_start":1,"column_end":78}},{"value":"/    [OpenTelemetry]-compatible distributed tracing systems.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28221,"byte_end":28283,"line_start":704,"line_end":704,"column_start":1,"column_end":63}},{"value":"/  - [`tracing-honeycomb`] Provides a layer that reports traces spanning multiple machines to [honeycomb.io]. Backed by [`tracing-distributed`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28284,"byte_end":28430,"line_start":705,"line_end":705,"column_start":1,"column_end":147}},{"value":"/  - [`tracing-distributed`] Provides a generic implementation of a layer that reports traces spanning multiple machines to some backend.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28431,"byte_end":28570,"line_start":706,"line_end":706,"column_start":1,"column_end":140}},{"value":"/  - [`tracing-actix`] provides `tracing` integration for the `actix` actor","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28571,"byte_end":28648,"line_start":707,"line_end":707,"column_start":1,"column_end":78}},{"value":"/    framework.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28649,"byte_end":28666,"line_start":708,"line_end":708,"column_start":1,"column_end":18}},{"value":"/  - [`tracing-gelf`] implements a subscriber for exporting traces in Greylog","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28667,"byte_end":28746,"line_start":709,"line_end":709,"column_start":1,"column_end":80}},{"value":"/    GELF format.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28747,"byte_end":28766,"line_start":710,"line_end":710,"column_start":1,"column_end":20}},{"value":"/  - [`tracing-coz`] provides integration with the [coz] causal profiler","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28767,"byte_end":28841,"line_start":711,"line_end":711,"column_start":1,"column_end":75}},{"value":"/    (Linux-only).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28842,"byte_end":28862,"line_start":712,"line_end":712,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-bunyan-formatter`] provides a layer implementation that reports events and spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28863,"byte_end":28960,"line_start":713,"line_end":713,"column_start":1,"column_end":98}},{"value":"/    in [bunyan] format, enriched with timing information.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":28961,"byte_end":29021,"line_start":714,"line_end":714,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-wasm`] provides a `Subscriber`/`Layer` implementation that reports","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29022,"byte_end":29105,"line_start":715,"line_end":715,"column_start":1,"column_end":84}},{"value":"/    events and spans via browser `console.log` and [User Timing API (`window.performance`)].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29106,"byte_end":29201,"line_start":716,"line_end":716,"column_start":1,"column_end":96}},{"value":"/  - [`tide-tracing`] provides a [tide] middleware to trace all incoming requests and responses.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29202,"byte_end":29300,"line_start":717,"line_end":717,"column_start":1,"column_end":99}},{"value":"/  - [`test-env-log`] takes care of initializing `tracing` for tests, based on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29301,"byte_end":29381,"line_start":718,"line_end":718,"column_start":1,"column_end":81}},{"value":"/    environment variables with an `env_logger` compatible syntax.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29382,"byte_end":29450,"line_start":719,"line_end":719,"column_start":1,"column_end":69}},{"value":"/  - [`tracing-unwrap`] provides convenience methods to report failed unwraps","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29451,"byte_end":29530,"line_start":720,"line_end":720,"column_start":1,"column_end":80}},{"value":"/    on `Result` or `Option` types to a `Subscriber`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29531,"byte_end":29586,"line_start":721,"line_end":721,"column_start":1,"column_end":56}},{"value":"/  - [`diesel-tracing`] provides integration with [`diesel`] database connections.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29587,"byte_end":29671,"line_start":722,"line_end":722,"column_start":1,"column_end":85}},{"value":"/  - [`tracing-tracy`] provides a way to collect [Tracy] profiles in instrumented","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29672,"byte_end":29755,"line_start":723,"line_end":723,"column_start":1,"column_end":84}},{"value":"/    applications.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29756,"byte_end":29776,"line_start":724,"line_end":724,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-elastic-apm`] provides a layer for reporting traces to [Elastic APM].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29777,"byte_end":29863,"line_start":725,"line_end":725,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29864,"byte_end":29867,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ If you're the maintainer of a `tracing` ecosystem crate not listed above,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29868,"byte_end":29945,"line_start":727,"line_end":727,"column_start":1,"column_end":78}},{"value":"/ please let us know! We'd love to add your project to the list!","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":29946,"byte_end":30012,"line_start":728,"line_end":728,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30013,"byte_end":30016,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ [`tracing-opentelemetry`]: https://crates.io/crates/tracing-opentelemetry","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30017,"byte_end":30094,"line_start":730,"line_end":730,"column_start":1,"column_end":78}},{"value":"/ [OpenTelemetry]: https://opentelemetry.io/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30095,"byte_end":30141,"line_start":731,"line_end":731,"column_start":1,"column_end":47}},{"value":"/ [`tracing-honeycomb`]: https://crates.io/crates/tracing-honeycomb","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30142,"byte_end":30211,"line_start":732,"line_end":732,"column_start":1,"column_end":70}},{"value":"/ [`tracing-distributed`]: https://crates.io/crates/tracing-distributed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30212,"byte_end":30285,"line_start":733,"line_end":733,"column_start":1,"column_end":74}},{"value":"/ [honeycomb.io]: https://www.honeycomb.io/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30286,"byte_end":30331,"line_start":734,"line_end":734,"column_start":1,"column_end":46}},{"value":"/ [`tracing-actix`]: https://crates.io/crates/tracing-actix","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30332,"byte_end":30393,"line_start":735,"line_end":735,"column_start":1,"column_end":62}},{"value":"/ [`tracing-gelf`]: https://crates.io/crates/tracing-gelf","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30394,"byte_end":30453,"line_start":736,"line_end":736,"column_start":1,"column_end":60}},{"value":"/ [`tracing-coz`]: https://crates.io/crates/tracing-coz","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30454,"byte_end":30511,"line_start":737,"line_end":737,"column_start":1,"column_end":58}},{"value":"/ [coz]: https://github.com/plasma-umass/coz","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30512,"byte_end":30558,"line_start":738,"line_end":738,"column_start":1,"column_end":47}},{"value":"/ [`tracing-bunyan-formatter`]: https://crates.io/crates/tracing-bunyan-formatter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30559,"byte_end":30642,"line_start":739,"line_end":739,"column_start":1,"column_end":84}},{"value":"/ [bunyan]: https://github.com/trentm/node-bunyan","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30643,"byte_end":30694,"line_start":740,"line_end":740,"column_start":1,"column_end":52}},{"value":"/ [`tracing-wasm`]: https://docs.rs/tracing-wasm","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30695,"byte_end":30745,"line_start":741,"line_end":741,"column_start":1,"column_end":51}},{"value":"/ [User Timing API (`window.performance`)]: https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30746,"byte_end":30856,"line_start":742,"line_end":742,"column_start":1,"column_end":111}},{"value":"/ [`tide-tracing`]: https://crates.io/crates/tide-tracing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30857,"byte_end":30916,"line_start":743,"line_end":743,"column_start":1,"column_end":60}},{"value":"/ [tide]: https://crates.io/crates/tide","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30917,"byte_end":30958,"line_start":744,"line_end":744,"column_start":1,"column_end":42}},{"value":"/ [`test-env-log`]: https://crates.io/crates/test-env-log","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":30959,"byte_end":31018,"line_start":745,"line_end":745,"column_start":1,"column_end":60}},{"value":"/ [`tracing-unwrap`]: https://docs.rs/tracing-unwrap","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31019,"byte_end":31073,"line_start":746,"line_end":746,"column_start":1,"column_end":55}},{"value":"/ [`diesel`]: https://crates.io/crates/diesel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31074,"byte_end":31121,"line_start":747,"line_end":747,"column_start":1,"column_end":48}},{"value":"/ [`diesel-tracing`]: https://crates.io/crates/diesel-tracing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31122,"byte_end":31185,"line_start":748,"line_end":748,"column_start":1,"column_end":64}},{"value":"/ [`tracing-tracy`]: https://crates.io/crates/tracing-tracy","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31186,"byte_end":31247,"line_start":749,"line_end":749,"column_start":1,"column_end":62}},{"value":"/ [Tracy]: https://github.com/wolfpld/tracy","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31248,"byte_end":31293,"line_start":750,"line_end":750,"column_start":1,"column_end":46}},{"value":"/ [`tracing-elastic-apm`]: https://crates.io/crates/tracing-elastic-apm","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31294,"byte_end":31367,"line_start":751,"line_end":751,"column_start":1,"column_end":74}},{"value":"/ [Elastic APM]: https://www.elastic.co/apm","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31368,"byte_end":31413,"line_start":752,"line_end":752,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31414,"byte_end":31417,"line_start":753,"line_end":753,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31418,"byte_end":31447,"line_start":754,"line_end":754,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31448,"byte_end":31539,"line_start":755,"line_end":755,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31540,"byte_end":31550,"line_start":756,"line_end":756,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31551,"byte_end":31610,"line_start":757,"line_end":757,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31611,"byte_end":31676,"line_start":758,"line_end":758,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Some of these ecosystem crates are currently","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31677,"byte_end":31748,"line_start":759,"line_end":759,"column_start":1,"column_end":72}},{"value":"/ unreleased and/or in earlier stages of development. They may be less stable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31749,"byte_end":31828,"line_start":760,"line_end":760,"column_start":1,"column_end":80}},{"value":"/ than <code>tracing</code> and <code>tracing-core</code>.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31829,"byte_end":31889,"line_start":761,"line_end":761,"column_start":1,"column_end":61}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31890,"byte_end":31906,"line_start":762,"line_end":762,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31907,"byte_end":31910,"line_start":763,"line_end":763,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31911,"byte_end":31937,"line_start":764,"line_end":764,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31938,"byte_end":31941,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ The following crate feature flags are available:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31942,"byte_end":31994,"line_start":766,"line_end":766,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31995,"byte_end":31998,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ * A set of features controlling the [static verbosity level].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":31999,"byte_end":32064,"line_start":768,"line_end":768,"column_start":1,"column_end":66}},{"value":"/ * `log`: causes trace instrumentation points to emit [`log`] records as well","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32065,"byte_end":32145,"line_start":769,"line_end":769,"column_start":1,"column_end":81}},{"value":"/   as trace events, if a default `tracing` subscriber has not been set. This","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32146,"byte_end":32225,"line_start":770,"line_end":770,"column_start":1,"column_end":80}},{"value":"/   is intended for use in libraries whose users may be using either `tracing`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32226,"byte_end":32306,"line_start":771,"line_end":771,"column_start":1,"column_end":81}},{"value":"/   or `log`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32307,"byte_end":32322,"line_start":772,"line_end":772,"column_start":1,"column_end":16}},{"value":"/ * `log-always`: Emit `log` records from all `tracing` spans and events, even","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32323,"byte_end":32403,"line_start":773,"line_end":773,"column_start":1,"column_end":81}},{"value":"/   if a `tracing` subscriber has been set. This should be set only by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32404,"byte_end":32476,"line_start":774,"line_end":774,"column_start":1,"column_end":73}},{"value":"/   applications which intend to collect traces and logs separately; if an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32477,"byte_end":32553,"line_start":775,"line_end":775,"column_start":1,"column_end":77}},{"value":"/   adapter is used to convert `log` records into `tracing` events, this will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32554,"byte_end":32633,"line_start":776,"line_end":776,"column_start":1,"column_end":80}},{"value":"/   cause duplicate events to occur.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32634,"byte_end":32672,"line_start":777,"line_end":777,"column_start":1,"column_end":39}},{"value":"/ * `attributes`: Includes support for the `#[instrument]` attribute.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32673,"byte_end":32744,"line_start":778,"line_end":778,"column_start":1,"column_end":72}},{"value":"/   This is on by default, but does bring in the `syn` crate as a dependency,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32745,"byte_end":32824,"line_start":779,"line_end":779,"column_start":1,"column_end":80}},{"value":"/   which may add to the compile time of crates that do not already use it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32825,"byte_end":32902,"line_start":780,"line_end":780,"column_start":1,"column_end":78}},{"value":"/ * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32903,"byte_end":32973,"line_start":781,"line_end":781,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32974,"byte_end":32977,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":32978,"byte_end":33056,"line_start":783,"line_end":783,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33057,"byte_end":33060,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33061,"byte_end":33074,"line_start":785,"line_end":785,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33075,"byte_end":33095,"line_start":786,"line_end":786,"column_start":1,"column_end":21}},{"value":"/   tracing = { version = \"0.1.24\", default-features = false }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33096,"byte_end":33160,"line_start":787,"line_end":787,"column_start":1,"column_end":65}},{"value":"/   ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33161,"byte_end":33170,"line_start":788,"line_end":788,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33171,"byte_end":33174,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33175,"byte_end":33204,"line_start":790,"line_end":790,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33205,"byte_end":33296,"line_start":791,"line_end":791,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33297,"byte_end":33307,"line_start":792,"line_end":792,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33308,"byte_end":33367,"line_start":793,"line_end":793,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33368,"byte_end":33433,"line_start":794,"line_end":794,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: <code>tracing</code>'s <code>no_std</code> support","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33434,"byte_end":33511,"line_start":795,"line_end":795,"column_start":1,"column_end":78}},{"value":"/ requires <code>liballoc</code>.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33512,"byte_end":33547,"line_start":796,"line_end":796,"column_start":1,"column_end":36}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33548,"byte_end":33564,"line_start":797,"line_end":797,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33565,"byte_end":33568,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33569,"byte_end":33599,"line_start":799,"line_end":799,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33600,"byte_end":33603,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33604,"byte_end":33681,"line_start":801,"line_end":801,"column_start":1,"column_end":78}},{"value":"/ version is 1.42. The current Tracing version is not guaranteed to build on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33682,"byte_end":33760,"line_start":802,"line_end":802,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33761,"byte_end":33822,"line_start":803,"line_end":803,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33823,"byte_end":33826,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33827,"byte_end":33906,"line_start":805,"line_end":805,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33907,"byte_end":33984,"line_start":806,"line_end":806,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":33985,"byte_end":34061,"line_start":807,"line_end":807,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34062,"byte_end":34140,"line_start":808,"line_end":808,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34141,"byte_end":34216,"line_start":809,"line_end":809,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34217,"byte_end":34293,"line_start":810,"line_end":810,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34294,"byte_end":34341,"line_start":811,"line_end":811,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34342,"byte_end":34345,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/0.4.6/log/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34346,"byte_end":34389,"line_start":813,"line_end":813,"column_start":1,"column_end":44}},{"value":"/ [span]: mod@span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34390,"byte_end":34410,"line_start":814,"line_end":814,"column_start":1,"column_end":21}},{"value":"/ [spans]: mod@span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34411,"byte_end":34432,"line_start":815,"line_end":815,"column_start":1,"column_end":22}},{"value":"/ [`Span`]: span::Span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34433,"byte_end":34457,"line_start":816,"line_end":816,"column_start":1,"column_end":25}},{"value":"/ [`in_scope`]: span::Span::in_scope","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34458,"byte_end":34496,"line_start":817,"line_end":817,"column_start":1,"column_end":39}},{"value":"/ [event]: Event","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34497,"byte_end":34515,"line_start":818,"line_end":818,"column_start":1,"column_end":19}},{"value":"/ [events]: Event","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34516,"byte_end":34535,"line_start":819,"line_end":819,"column_start":1,"column_end":20}},{"value":"/ [`Subscriber`]: subscriber::Subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34536,"byte_end":34578,"line_start":820,"line_end":820,"column_start":1,"column_end":43}},{"value":"/ [Subscriber::event]: subscriber::Subscriber::event","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34579,"byte_end":34633,"line_start":821,"line_end":821,"column_start":1,"column_end":55}},{"value":"/ [`enter`]: subscriber::Subscriber::enter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34634,"byte_end":34678,"line_start":822,"line_end":822,"column_start":1,"column_end":45}},{"value":"/ [`exit`]: subscriber::Subscriber::exit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34679,"byte_end":34721,"line_start":823,"line_end":823,"column_start":1,"column_end":43}},{"value":"/ [`enabled`]: subscriber::Subscriber::enabled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34722,"byte_end":34770,"line_start":824,"line_end":824,"column_start":1,"column_end":49}},{"value":"/ [metadata]: Metadata","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34771,"byte_end":34795,"line_start":825,"line_end":825,"column_start":1,"column_end":25}},{"value":"/ [`field::display`]: field::display","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34796,"byte_end":34834,"line_start":826,"line_end":826,"column_start":1,"column_end":39}},{"value":"/ [`field::debug`]: field::debug","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34835,"byte_end":34869,"line_start":827,"line_end":827,"column_start":1,"column_end":35}},{"value":"/ [`set_global_default`]: subscriber::set_global_default","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34870,"byte_end":34928,"line_start":828,"line_end":828,"column_start":1,"column_end":59}},{"value":"/ [`with_default`]: subscriber::with_default","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34929,"byte_end":34975,"line_start":829,"line_end":829,"column_start":1,"column_end":47}},{"value":"/ [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":34976,"byte_end":35037,"line_start":830,"line_end":830,"column_start":1,"column_end":62}},{"value":"/ [`tracing-futures`]: https://crates.io/crates/tracing-futures","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35038,"byte_end":35103,"line_start":831,"line_end":831,"column_start":1,"column_end":66}},{"value":"/ [`tracing-subscriber`]: https://crates.io/crates/tracing-subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35104,"byte_end":35175,"line_start":832,"line_end":832,"column_start":1,"column_end":72}},{"value":"/ [`tracing-log`]: https://crates.io/crates/tracing-log","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35176,"byte_end":35233,"line_start":833,"line_end":833,"column_start":1,"column_end":58}},{"value":"/ [`tracing-timing`]: https://crates.io/crates/tracing-timing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35234,"byte_end":35297,"line_start":834,"line_end":834,"column_start":1,"column_end":64}},{"value":"/ [`tracing-appender`]: https://crates.io/crates/tracing-appender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35298,"byte_end":35365,"line_start":835,"line_end":835,"column_start":1,"column_end":68}},{"value":"/ [`env_logger`]: https://crates.io/crates/env_logger","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35366,"byte_end":35421,"line_start":836,"line_end":836,"column_start":1,"column_end":56}},{"value":"/ [`FmtSubscriber`]: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/struct.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35422,"byte_end":35532,"line_start":837,"line_end":837,"column_start":1,"column_end":111}},{"value":"/ [static verbosity level]: level_filters/index.html#compile-time-filters","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35533,"byte_end":35608,"line_start":838,"line_end":838,"column_start":1,"column_end":76}},{"value":"/ [instrument]: https://docs.rs/tracing-attributes/latest/tracing_attributes/attr.instrument.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35609,"byte_end":35708,"line_start":839,"line_end":839,"column_start":1,"column_end":100}},{"value":"/ [flags]: #crate-feature-flags","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":35709,"byte_end":35742,"line_start":840,"line_end":840,"column_start":1,"column_end":34}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":36101,"byte_end":36563,"line_start":848,"line_end":869,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":115729,"byte_end":115776,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":115777,"byte_end":115780,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":115781,"byte_end":115861,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":115862,"byte_end":115940,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to the subscriber that collects it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":115941,"byte_end":115980,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":115981,"byte_end":115984,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Using the Trace Dispatcher","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":115985,"byte_end":116017,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116018,"byte_end":116021,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116022,"byte_end":116100,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116101,"byte_end":116176,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ current subscriber.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116177,"byte_end":116200,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116201,"byte_end":116204,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Setting the Default Subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116205,"byte_end":116242,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116243,"byte_end":116246,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ By default, the current subscriber is an empty implementation that does","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116247,"byte_end":116322,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116323,"byte_end":116402,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ There are two methods for doing so: [`with_default`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116403,"byte_end":116463,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116464,"byte_end":116542,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116543,"byte_end":116620,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ for the entire process.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116621,"byte_end":116648,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116649,"byte_end":116652,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116653,"byte_end":116729,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116730,"byte_end":116803,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116804,"byte_end":116816,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116817,"byte_end":116828,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116829,"byte_end":116860,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116861,"byte_end":116886,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116887,"byte_end":116923,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116924,"byte_end":116962,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116963,"byte_end":116971,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":116972,"byte_end":117027,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117028,"byte_end":117096,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117097,"byte_end":117144,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117145,"byte_end":117182,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117183,"byte_end":117239,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117240,"byte_end":117297,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117298,"byte_end":117332,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117333,"byte_end":117366,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117367,"byte_end":117374,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117375,"byte_end":117438,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/ use dispatcher::Dispatch;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117439,"byte_end":117468,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117469,"byte_end":117472,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117473,"byte_end":117518,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117519,"byte_end":117570,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117571,"byte_end":117578,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117579,"byte_end":117657,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ the duration of a block:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117658,"byte_end":117686,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117687,"byte_end":117698,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117699,"byte_end":117730,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117731,"byte_end":117756,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117757,"byte_end":117793,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117794,"byte_end":117832,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117833,"byte_end":117841,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117842,"byte_end":117897,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117898,"byte_end":117966,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":117967,"byte_end":118014,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118015,"byte_end":118052,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118053,"byte_end":118109,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118110,"byte_end":118167,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118168,"byte_end":118202,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118203,"byte_end":118236,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118237,"byte_end":118244,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118245,"byte_end":118308,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118309,"byte_end":118356,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118357,"byte_end":118422,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118423,"byte_end":118451,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118452,"byte_end":118455,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118456,"byte_end":118485,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118486,"byte_end":118533,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/     // my_subscriber is the default","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118534,"byte_end":118573,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118574,"byte_end":118581,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118582,"byte_end":118585,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // no default subscriber again","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118586,"byte_end":118620,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118621,"byte_end":118628,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ It's important to note that `with_default` will not propagate the current","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118629,"byte_end":118706,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118707,"byte_end":118787,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ block. To propagate the default subscriber to new threads, either use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118788,"byte_end":118861,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118862,"byte_end":118930,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118931,"byte_end":118934,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":118935,"byte_end":119012,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119013,"byte_end":119089,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ program. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119090,"byte_end":119115,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119116,"byte_end":119127,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119128,"byte_end":119159,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119160,"byte_end":119185,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119186,"byte_end":119222,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119223,"byte_end":119261,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119262,"byte_end":119270,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119271,"byte_end":119326,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119327,"byte_end":119395,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119396,"byte_end":119443,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119444,"byte_end":119481,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119482,"byte_end":119538,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119539,"byte_end":119596,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119597,"byte_end":119631,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119632,"byte_end":119665,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119666,"byte_end":119673,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119674,"byte_end":119737,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119738,"byte_end":119785,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119786,"byte_end":119851,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119852,"byte_end":119880,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119881,"byte_end":119884,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ dispatcher::set_global_default(my_dispatch)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119885,"byte_end":119932,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     // `set_global_default` will return an error if the global default","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":119933,"byte_end":120007,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/     // subscriber has already been set.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120008,"byte_end":120051,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/     .expect(\"global default was already set!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120052,"byte_end":120103,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120104,"byte_end":120107,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `my_subscriber` is now the default","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120108,"byte_end":120149,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120150,"byte_end":120157,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120158,"byte_end":120187,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120188,"byte_end":120279,"line_start":111,"line_end":111,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120280,"byte_end":120290,"line_start":112,"line_end":112,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120291,"byte_end":120350,"line_start":113,"line_end":113,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120351,"byte_end":120416,"line_start":114,"line_end":114,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The thread-local scoped dispatcher (<code>with_default</code>)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120417,"byte_end":120506,"line_start":115,"line_end":115,"column_start":1,"column_end":90}},{"value":"/ requires the Rust standard library. <code>no_std</code> users should","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120507,"byte_end":120579,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ use <a href=\"fn.set_global_default.html\"><code>set_global_default</code></a>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120580,"byte_end":120660,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120661,"byte_end":120673,"line_start":118,"line_end":118,"column_start":1,"column_end":13}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120674,"byte_end":120690,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120691,"byte_end":120694,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the Default Subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120695,"byte_end":120734,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120735,"byte_end":120738,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ A thread's current default subscriber can be accessed using the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120739,"byte_end":120806,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120807,"byte_end":120885,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/ currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120886,"byte_end":120955,"line_start":125,"line_end":125,"column_start":1,"column_end":70}},{"value":"/ instrumentation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120956,"byte_end":120976,"line_start":126,"line_end":126,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120977,"byte_end":120980,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: struct.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":120981,"byte_end":121023,"line_start":128,"line_end":128,"column_start":1,"column_end":43}},{"value":"/ [`with_default`]: fn.with_default.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121024,"byte_end":121066,"line_start":129,"line_end":129,"column_start":1,"column_end":43}},{"value":"/ [`set_global_default`]: fn.set_global_default.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121067,"byte_end":121121,"line_start":130,"line_end":130,"column_start":1,"column_end":55}},{"value":"/ [`get_default`]: fn.get_default.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121122,"byte_end":121162,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"/ [`Dispatch`]: struct.Dispatch.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\dispatcher.rs","byte_start":121163,"byte_end":121201,"line_start":132,"line_end":132,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":68}],"decl_id":null,"docs":" Structured data associated with `Span`s and `Event`s.\n","sig":null,"attributes":[{"value":"/ Structured data associated with `Span`s and `Event`s.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":121985,"byte_end":122042,"line_start":1,"line_end":1,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122906,"byte_end":122913,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"AsField","qualname":"::field::AsField","value":"AsField: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":57}],"decl_id":null,"docs":" Trait implemented to allow a type to be used as a field key.","sig":null,"attributes":[{"value":"/ Trait implemented to allow a type to be used as a field key.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122098,"byte_end":122162,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122163,"byte_end":122166,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122167,"byte_end":122196,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122197,"byte_end":122288,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122289,"byte_end":122299,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122300,"byte_end":122359,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122360,"byte_end":122425,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Although this is implemented for both the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122426,"byte_end":122494,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ <a href=\"./struct.Field.html\"><code>Field</code></a> type <em>and</em> any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122495,"byte_end":122573,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ type that can be borrowed as an <code>&str</code>, only <code>Field</code>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122574,"byte_end":122652,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ allows <em>O</em>(1) access.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122653,"byte_end":122685,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ Indexing a field with a string results in an iterative search that performs","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122686,"byte_end":122765,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ string comparisons. Thus, if possible, once the key for a field is known, it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122766,"byte_end":122846,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ should be used whenever possible.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122847,"byte_end":122884,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122885,"byte_end":122895,"line_start":20,"line_end":20,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":123146,"byte_end":123154,"line_start":26,"line_end":26,"column_start":8,"column_end":16},"name":"as_field","qualname":"::field::AsField::as_field","value":"pub fn as_field(&Self, &Metadata) -> Option<Field>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Attempts to convert `&self` into a `Field` with the specified `metadata`.","sig":null,"attributes":[{"value":"/ Attempts to convert `&self` into a `Field` with the specified `metadata`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122943,"byte_end":123020,"line_start":22,"line_end":22,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":123025,"byte_end":123028,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If `metadata` defines this field, then the field is returned. Otherwise,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":123033,"byte_end":123109,"line_start":24,"line_end":24,"column_start":5,"column_end":81}},{"value":"/ this returns `None`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":123114,"byte_end":123138,"line_start":25,"line_end":25,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"instrument","qualname":"::instrument","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":243},{"krate":0,"index":250},{"krate":0,"index":247},{"krate":0,"index":238},{"krate":0,"index":286},{"krate":0,"index":293},{"krate":0,"index":290},{"krate":0,"index":281},{"krate":0,"index":90},{"krate":0,"index":94},{"krate":0,"index":96}],"decl_id":null,"docs":" Attach a span to a `std::future::Future`.\n","sig":null,"attributes":[{"value":"/ Attach a span to a `std::future::Future`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37481,"byte_end":37526,"line_start":913,"line_end":913,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124400,"byte_end":124410,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Instrument","qualname":"::instrument::Instrument","value":"Instrument: Sized","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":" Attaches spans to a `std::future::Future`.","sig":null,"attributes":[{"value":"/ Attaches spans to a `std::future::Future`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124217,"byte_end":124263,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124264,"byte_end":124267,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Extension trait allowing futures to be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124268,"byte_end":124310,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ instrumented with a `tracing` [span].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124311,"byte_end":124352,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124353,"byte_end":124356,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [span]:  ../struct.Span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124357,"byte_end":124389,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125038,"byte_end":125048,"line_start":38,"line_end":38,"column_start":8,"column_end":18},"name":"instrument","qualname":"::instrument::Instrument::instrument","value":"pub fn instrument(Self, Span) -> Instrumented<Self>","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Instruments this type with the provided `Span`, returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the provided `Span`, returning an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124424,"byte_end":124488,"line_start":14,"line_end":14,"column_start":5,"column_end":69}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124493,"byte_end":124520,"line_start":15,"line_end":15,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124525,"byte_end":124528,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ The attached `Span` will be [entered] every time the instrumented `Future` is polled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124533,"byte_end":124622,"line_start":17,"line_end":17,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124627,"byte_end":124630,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124635,"byte_end":124649,"line_start":19,"line_end":19,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124654,"byte_end":124657,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Instrumenting a future:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124662,"byte_end":124689,"line_start":21,"line_end":21,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124694,"byte_end":124697,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124702,"byte_end":124713,"line_start":23,"line_end":23,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124718,"byte_end":124746,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124751,"byte_end":124754,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124759,"byte_end":124781,"line_start":26,"line_end":26,"column_start":5,"column_end":27}},{"value":"/ let my_future = async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124786,"byte_end":124813,"line_start":27,"line_end":27,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124818,"byte_end":124832,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124837,"byte_end":124843,"line_start":29,"line_end":29,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124848,"byte_end":124851,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ my_future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124856,"byte_end":124869,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"/     .instrument(tracing::info_span!(\"my_future\"))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124874,"byte_end":124927,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/     .await","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124932,"byte_end":124946,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124951,"byte_end":124958,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124963,"byte_end":124970,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124975,"byte_end":124978,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [entered]: ../struct.Span.html#method.enter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124983,"byte_end":125030,"line_start":37,"line_end":37,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126195,"byte_end":126210,"line_start":74,"line_end":74,"column_start":8,"column_end":23},"name":"in_current_span","qualname":"::instrument::Instrument::in_current_span","value":"pub fn in_current_span(Self) -> Instrumented<Self>","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Instruments this type with the [current] `Span`, returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the [current] `Span`, returning an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125145,"byte_end":125210,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125215,"byte_end":125242,"line_start":43,"line_end":43,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125247,"byte_end":125250,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If the instrumented type is a future, stream, or sink, the attached `Span`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125255,"byte_end":125333,"line_start":45,"line_end":45,"column_start":5,"column_end":83}},{"value":"/ will be [entered] every time it is polled. If the instrumented type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125338,"byte_end":125409,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ is a future executor, every future spawned on that executor will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125414,"byte_end":125485,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ instrumented by the attached `Span`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125490,"byte_end":125530,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125535,"byte_end":125538,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current span when spawning a new future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125543,"byte_end":125621,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125626,"byte_end":125629,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125634,"byte_end":125648,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125653,"byte_end":125656,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125661,"byte_end":125672,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125677,"byte_end":125705,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125710,"byte_end":125713,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125718,"byte_end":125740,"line_start":57,"line_end":57,"column_start":5,"column_end":27}},{"value":"/ let span = tracing::info_span!(\"my_span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125745,"byte_end":125791,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/ let _enter = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125796,"byte_end":125826,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125831,"byte_end":125834,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125839,"byte_end":125849,"line_start":61,"line_end":61,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125854,"byte_end":125857,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let future = async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125862,"byte_end":125886,"line_start":63,"line_end":63,"column_start":5,"column_end":29}},{"value":"/     tracing::debug!(\"this event will occur inside `my_span`\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125891,"byte_end":125957,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125962,"byte_end":125976,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125981,"byte_end":125987,"line_start":66,"line_end":66,"column_start":5,"column_end":11}},{"value":"/ tokio::spawn(future.in_current_span());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":125992,"byte_end":126035,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126040,"byte_end":126047,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126052,"byte_end":126059,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126064,"byte_end":126067,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ [current]: ../struct.Span.html#method.current","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126072,"byte_end":126121,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/ [entered]: ../struct.Span.html#method.enter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126126,"byte_end":126173,"line_start":72,"line_end":72,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126178,"byte_end":126187,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126443,"byte_end":126457,"line_start":83,"line_end":83,"column_start":11,"column_end":25},"name":"WithSubscriber","qualname":"::instrument::WithSubscriber","value":"WithSubscriber: Sized","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88}],"decl_id":null,"docs":" Extension trait allowing futures to be instrumented with\n a `tracing` [`Subscriber`].","sig":null,"attributes":[{"value":"/ Extension trait allowing futures to be instrumented with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126291,"byte_end":126351,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"/ a `tracing` [`Subscriber`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126352,"byte_end":126383,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126384,"byte_end":126387,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126388,"byte_end":126432,"line_start":82,"line_end":82,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126852,"byte_end":126867,"line_start":91,"line_end":91,"column_start":8,"column_end":23},"name":"with_subscriber","qualname":"::instrument::WithSubscriber::with_subscriber","value":"pub fn with_subscriber<S>(Self, S) -> WithDispatch<Self> where\nS: Into<Dispatch>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Attaches the provided [`Subscriber`] to this type, returning a\n `WithDispatch` wrapper.","sig":null,"attributes":[{"value":"/ Attaches the provided [`Subscriber`] to this type, returning a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126471,"byte_end":126537,"line_start":84,"line_end":84,"column_start":5,"column_end":71}},{"value":"/ `WithDispatch` wrapper.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126542,"byte_end":126569,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126574,"byte_end":126577,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The attached subscriber will be set as the [default] when the returned `Future` is polled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126582,"byte_end":126676,"line_start":87,"line_end":87,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126681,"byte_end":126684,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126689,"byte_end":126733,"line_start":89,"line_end":89,"column_start":5,"column_end":49}},{"value":"/ [default]: https://docs.rs/tracing/latest/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126738,"byte_end":126844,"line_start":90,"line_end":90,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127770,"byte_end":127793,"line_start":115,"line_end":115,"column_start":8,"column_end":31},"name":"with_current_subscriber","qualname":"::instrument::WithSubscriber::with_current_subscriber","value":"pub fn with_current_subscriber(Self) -> WithDispatch<Self>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Attaches the current [default] [`Subscriber`] to this type, returning a\n `WithDispatch` wrapper.","sig":null,"attributes":[{"value":"/ Attaches the current [default] [`Subscriber`] to this type, returning a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127067,"byte_end":127142,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ `WithDispatch` wrapper.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127147,"byte_end":127174,"line_start":102,"line_end":102,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127179,"byte_end":127182,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ When the wrapped type is a future, stream, or sink, the attached","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127187,"byte_end":127255,"line_start":104,"line_end":104,"column_start":5,"column_end":73}},{"value":"/ subscriber will be set as the [default] while it is being polled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127260,"byte_end":127329,"line_start":105,"line_end":105,"column_start":5,"column_end":74}},{"value":"/ When the wrapped type is an executor, the subscriber will be set as the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127334,"byte_end":127409,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ default for any futures spawned on that executor.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127414,"byte_end":127467,"line_start":107,"line_end":107,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127472,"byte_end":127475,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current dispatcher context when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127480,"byte_end":127549,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"/ spawning a new future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127554,"byte_end":127580,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127585,"byte_end":127588,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127593,"byte_end":127637,"line_start":112,"line_end":112,"column_start":5,"column_end":49}},{"value":"/ [default]: https://docs.rs/tracing/latest/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127642,"byte_end":127748,"line_start":113,"line_end":113,"column_start":5,"column_end":111}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":127753,"byte_end":127762,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128168,"byte_end":128180,"line_start":127,"line_end":127,"column_start":16,"column_end":28},"name":"WithDispatch","qualname":"::instrument::WithDispatch","value":"WithDispatch {  }","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" A future that has been instrumented with a `tracing` subscriber.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":10166014,"byte_end":10166023,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128453,"byte_end":128465,"line_start":138,"line_end":138,"column_start":16,"column_end":28},"name":"Instrumented","qualname":"::instrument::Instrumented","value":"Instrumented {  }","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":" A future that has been instrumented with a `tracing` span.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":10166014,"byte_end":10166023,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128935,"byte_end":128939,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"span","qualname":"<Instrumented<T>>::span","value":"pub fn span(&Self) -> &Span","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Borrows the `Span` that this type is instrumented by.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128866,"byte_end":128923,"line_start":158,"line_end":158,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129065,"byte_end":129073,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"span_mut","qualname":"<Instrumented<T>>::span_mut","value":"pub fn span_mut(&mut Self) -> &mut Span","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the `Span` that this type is instrumented by.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128988,"byte_end":129053,"line_start":163,"line_end":163,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129175,"byte_end":129180,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"inner","qualname":"<Instrumented<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129134,"byte_end":129163,"line_start":168,"line_end":168,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129276,"byte_end":129285,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Instrumented<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129227,"byte_end":129264,"line_start":173,"line_end":173,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129403,"byte_end":129416,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<Instrumented<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129344,"byte_end":129391,"line_start":178,"line_end":178,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129559,"byte_end":129572,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<Instrumented<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129492,"byte_end":129547,"line_start":183,"line_end":183,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129771,"byte_end":129781,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Instrumented<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Instrumented`, returning the wrapped type.","sig":null,"attributes":[{"value":"/ Consumes the `Instrumented`, returning the wrapped type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129652,"byte_end":129712,"line_start":188,"line_end":188,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129717,"byte_end":129720,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this drops the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":129725,"byte_end":129759,"line_start":190,"line_end":190,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"level_filters","qualname":"::level_filters","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":324}],"decl_id":null,"docs":" Trace verbosity level filtering.","sig":null,"attributes":[{"value":"/ Trace verbosity level filtering.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":129823,"byte_end":129859,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":129860,"byte_end":129863,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Compile time filters","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":129864,"byte_end":129890,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":129891,"byte_end":129894,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Trace verbosity levels can be statically disabled at compile time via Cargo","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":129895,"byte_end":129974,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ features, similar to the [`log` crate]. Trace instrumentation at disabled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":129975,"byte_end":130052,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ levels will be skipped and will not even be present in the resulting binary","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130053,"byte_end":130132,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ unless the verbosity level is specified dynamically. This level is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130133,"byte_end":130203,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ configured separately for release and debug builds. The features are:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130204,"byte_end":130277,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130278,"byte_end":130281,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `max_level_off`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130282,"byte_end":130303,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ * `max_level_error`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130304,"byte_end":130327,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ * `max_level_warn`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130328,"byte_end":130350,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/ * `max_level_info`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130351,"byte_end":130373,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ * `max_level_debug`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130374,"byte_end":130397,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/ * `max_level_trace`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130398,"byte_end":130421,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/ * `release_max_level_off`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130422,"byte_end":130451,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ * `release_max_level_error`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130452,"byte_end":130483,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_warn`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130484,"byte_end":130514,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_info`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130515,"byte_end":130545,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_debug`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130546,"byte_end":130577,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_trace`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130578,"byte_end":130609,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130610,"byte_end":130613,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ These features control the value of the `STATIC_MAX_LEVEL` constant. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130614,"byte_end":130690,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ instrumentation macros macros check this value before recording an event or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130691,"byte_end":130770,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ constructing a span. By default, no levels are disabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130771,"byte_end":130831,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130832,"byte_end":130835,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For example, a crate can disable trace level instrumentation in debug builds","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130836,"byte_end":130916,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ and trace, debug, and info level instrumentation in release builds with the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130917,"byte_end":130996,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ following configuration:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":130997,"byte_end":131025,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131026,"byte_end":131029,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131030,"byte_end":131041,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131042,"byte_end":131060,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/ tracing = { version = \"0.1\", features = [\"max_level_debug\", \"release_max_level_warn\"] }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131061,"byte_end":131152,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131153,"byte_end":131160,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ## Notes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131161,"byte_end":131173,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131174,"byte_end":131177,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Please note that `tracing`'s static max level features do *not* control the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131178,"byte_end":131257,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ [`log`] records that may be emitted when [`tracing`'s \"log\" feature flag][f] is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131258,"byte_end":131341,"line_start":39,"line_end":39,"column_start":1,"column_end":84}},{"value":"/ enabled. This is to allow `tracing` to be disabled entirely at compile time","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131342,"byte_end":131421,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ while still emitting `log` records --- such as when a library using","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131422,"byte_end":131493,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ `tracing` is used by an application using `log` that doesn't want to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131494,"byte_end":131566,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ generate any `tracing`-related code, but does want to collect `log` records.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131567,"byte_end":131647,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131648,"byte_end":131651,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This means that if the \"log\" feature is in use, some code may be generated","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131652,"byte_end":131730,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ for `log` records emitted by disabled `tracing` events. If this is not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131731,"byte_end":131805,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ desirable, `log` records may be disabled separately using [`log`'s static","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131806,"byte_end":131883,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ max level features][`log` crate].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131884,"byte_end":131921,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131922,"byte_end":131925,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131926,"byte_end":131959,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ [`log` crate]: https://docs.rs/log/latest/log/#compile-time-filters","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":131960,"byte_end":132031,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ [f]: https://docs.rs/tracing/latest/tracing/#emitting-log-records","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132032,"byte_end":132101,"line_start":52,"line_end":52,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132673,"byte_end":132689,"line_start":66,"line_end":66,"column_start":11,"column_end":27},"name":"STATIC_MAX_LEVEL","qualname":"::level_filters::STATIC_MAX_LEVEL","value":"LevelFilter","parent":null,"children":[],"decl_id":null,"docs":" The statically configured maximum trace level.","sig":null,"attributes":[{"value":"/ The statically configured maximum trace level.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132173,"byte_end":132223,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132224,"byte_end":132227,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation] for information on how to configure","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132228,"byte_end":132304,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ this.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132305,"byte_end":132314,"line_start":58,"line_end":58,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132315,"byte_end":132318,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This value is checked by the `event!` and `span!` macros. Code that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132319,"byte_end":132390,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ manually constructs events or spans via the `Event::record` function or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132391,"byte_end":132466,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ `Span` constructors should compare the level against this value to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132467,"byte_end":132537,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ determine if those spans or events are enabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132538,"byte_end":132589,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132590,"byte_end":132593,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [module-level documentation]: ../index.html#compile-time-filters","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\level_filters.rs","byte_start":132594,"byte_end":132662,"line_start":65,"line_end":65,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":423},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":129},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":199}],"decl_id":null,"docs":" Spans represent periods of time in which a program was executing in a\n particular context.","sig":null,"attributes":[{"value":"/ Spans represent periods of time in which a program was executing in a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134222,"byte_end":134295,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ particular context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134296,"byte_end":134319,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134320,"byte_end":134323,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A span consists of [fields], user-defined key-value pairs of arbitrary data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134324,"byte_end":134403,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ that describe the context the span represents, and a set of fixed attributes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134404,"byte_end":134484,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ that describe all `tracing` spans and events. Attributes describing spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134485,"byte_end":134562,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ include:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134563,"byte_end":134575,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134576,"byte_end":134579,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - An [`Id`] assigned by the subscriber that uniquely identifies it in relation","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134580,"byte_end":134662,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/   to other spans.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134663,"byte_end":134684,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/ - The span's [parent] in the trace tree.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134685,"byte_end":134729,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ - [Metadata] that describes static characteristics of all spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134730,"byte_end":134797,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/   originating from that callsite, such as its name, source code location,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134798,"byte_end":134875,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   [verbosity level], and the names of its fields.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134876,"byte_end":134929,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134930,"byte_end":134933,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Creating Spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134934,"byte_end":134954,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134955,"byte_end":134958,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Spans are created using the [`span!`] macro. This macro is invoked with the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":134959,"byte_end":135038,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ following arguments, in order:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135039,"byte_end":135073,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135074,"byte_end":135077,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - The [`target`] and/or [`parent`][parent] attributes, if the user wishes to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135078,"byte_end":135158,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/   override their default values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135159,"byte_end":135195,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ - The span's [verbosity level]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135196,"byte_end":135230,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ - A string literal providing the span's name.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135231,"byte_end":135280,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ - Finally, between zero and 32 arbitrary key/value fields.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135281,"byte_end":135343,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135344,"byte_end":135347,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`target`]: ../struct.Metadata.html#method.target","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135348,"byte_end":135401,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135402,"byte_end":135405,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135406,"byte_end":135422,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135423,"byte_end":135434,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135435,"byte_end":135466,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135467,"byte_end":135470,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ /// Construct a new span at the `INFO` level named \"my_span\", with a single","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135471,"byte_end":135550,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ /// field named answer , with the value `42`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135551,"byte_end":135600,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ let my_span = span!(Level::INFO, \"my_span\", answer = 42);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135601,"byte_end":135662,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135663,"byte_end":135670,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135671,"byte_end":135674,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The documentation for the [`span!`] macro provides additional examples of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135675,"byte_end":135752,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ the various options that exist when creating spans.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135753,"byte_end":135808,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135809,"byte_end":135812,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The [`trace_span!`], [`debug_span!`], [`info_span!`], [`warn_span!`], and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135813,"byte_end":135890,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ [`error_span!`] exist as shorthand for constructing spans at various","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135891,"byte_end":135963,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ verbosity levels.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135964,"byte_end":135985,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135986,"byte_end":135989,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Recording Span Creation","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":135990,"byte_end":136020,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136021,"byte_end":136024,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The [`Attributes`] type contains data associated with a span, and is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136025,"byte_end":136097,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/ provided to the [`Subscriber`] when a new span is created. It contains","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136098,"byte_end":136172,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ the span's metadata, the ID of [the span's parent][parent] if one was","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136173,"byte_end":136246,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ explicitly set, and any fields whose values were recorded when the span was","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136247,"byte_end":136326,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ constructed. The subscriber, which is responsible for recording `tracing`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136327,"byte_end":136404,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ data, can then store or record these values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136405,"byte_end":136453,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136454,"byte_end":136457,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # The Span Lifecycle","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136458,"byte_end":136482,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136483,"byte_end":136486,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Entering a Span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136487,"byte_end":136509,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136510,"byte_end":136513,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ A thread of execution is said to _enter_ a span when it begins executing,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136514,"byte_end":136591,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ and _exit_ the span when it switches to another context. Spans may be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136592,"byte_end":136665,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ entered through the [`enter`] and [`in_scope`] methods.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136666,"byte_end":136725,"line_start":60,"line_end":60,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136726,"byte_end":136729,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The `enter` method enters a span, returning a [guard] that exits the span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136730,"byte_end":136807,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ when dropped","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136808,"byte_end":136824,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136825,"byte_end":136832,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136833,"byte_end":136873,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136874,"byte_end":136899,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136900,"byte_end":136924,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136925,"byte_end":136982,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136983,"byte_end":136986,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // `my_span` exists but has not been entered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":136987,"byte_end":137036,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137037,"byte_end":137040,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ // Enter `my_span`...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137041,"byte_end":137066,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/ let _enter = my_span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137067,"byte_end":137100,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137101,"byte_end":137104,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // Perform some work inside of the context of `my_span`...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137105,"byte_end":137167,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/ // Dropping the `_enter` guard will exit the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137168,"byte_end":137222,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137223,"byte_end":137229,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137230,"byte_end":137233,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137234,"byte_end":137263,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip compile_fail\" style=\"\">&#x26a0; &#xfe0f;<span class=\"tooltiptext\">Warning</span></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137264,"byte_end":137378,"line_start":80,"line_end":80,"column_start":1,"column_end":115}},{"value":"/ </div><div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137379,"byte_end":137511,"line_start":81,"line_end":81,"column_start":1,"column_end":133}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137512,"byte_end":137596,"line_start":82,"line_end":82,"column_start":1,"column_end":85}},{"value":"/     <code>Span::enter</code> may produce incorrect traces if the returned drop","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137597,"byte_end":137679,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/     guard is held across an await point. See","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137680,"byte_end":137728,"line_start":84,"line_end":84,"column_start":1,"column_end":49}},{"value":"/     <a href=\"struct.Span.html#in-asynchronous-code\">the method documentation</a>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137729,"byte_end":137813,"line_start":85,"line_end":85,"column_start":1,"column_end":85}},{"value":"/     for details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137814,"byte_end":137834,"line_start":86,"line_end":86,"column_start":1,"column_end":21}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137835,"byte_end":137851,"line_start":87,"line_end":87,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137852,"byte_end":137855,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ `in_scope` takes a closure or function pointer and executes it inside the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137856,"byte_end":137933,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"/ span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137934,"byte_end":137943,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137944,"byte_end":137951,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137952,"byte_end":137992,"line_start":92,"line_end":92,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":137993,"byte_end":138018,"line_start":93,"line_end":93,"column_start":1,"column_end":26}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138019,"byte_end":138043,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var = &my_var);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138044,"byte_end":138111,"line_start":95,"line_end":95,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138112,"byte_end":138115,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138116,"byte_end":138141,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/     // perform some work in the context of `my_span`...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138142,"byte_end":138201,"line_start":98,"line_end":98,"column_start":1,"column_end":60}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138202,"byte_end":138209,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138210,"byte_end":138213,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Perform some work outside of the context of `my_span`...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138214,"byte_end":138277,"line_start":101,"line_end":101,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138278,"byte_end":138281,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138282,"byte_end":138307,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/     // Perform some more work in the context of `my_span`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138308,"byte_end":138370,"line_start":104,"line_end":104,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138371,"byte_end":138378,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138379,"byte_end":138386,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138387,"byte_end":138390,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138391,"byte_end":138420,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138421,"byte_end":138512,"line_start":109,"line_end":109,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138513,"byte_end":138523,"line_start":110,"line_end":110,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138524,"byte_end":138583,"line_start":111,"line_end":111,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138584,"byte_end":138649,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Since entering a span takes <code>&self</code<, and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138650,"byte_end":138728,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ <code>Span</code>s are <code>Clone</code>, <code>Send</code>, and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138729,"byte_end":138798,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ <code>Sync</code>, it is entirely valid for multiple threads to enter the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138799,"byte_end":138876,"line_start":115,"line_end":115,"column_start":1,"column_end":78}},{"value":"/ same span concurrently.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138877,"byte_end":138904,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138905,"byte_end":138921,"line_start":117,"line_end":117,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138922,"byte_end":138925,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ## Span Relationships","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138926,"byte_end":138951,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138952,"byte_end":138955,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Spans form a tree structure — unless it is a root span, all spans have a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":138956,"byte_end":139034,"line_start":121,"line_end":121,"column_start":1,"column_end":77}},{"value":"/ _parent_, and may have one or more _children_. When a new span is created,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139035,"byte_end":139113,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ the current span becomes the new span's parent. The total execution time of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139114,"byte_end":139193,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/ a span consists of the time spent in that span and in the entire subtree","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139194,"byte_end":139270,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ represented by its children. Thus, a parent span always lasts for at least","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139271,"byte_end":139349,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ as long as the longest-executing span in its subtree.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139350,"byte_end":139407,"line_start":126,"line_end":126,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139408,"byte_end":139411,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139412,"byte_end":139419,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139420,"byte_end":139460,"line_start":129,"line_end":129,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139461,"byte_end":139486,"line_start":130,"line_end":130,"column_start":1,"column_end":26}},{"value":"/ // this span is considered the \"root\" of a new trace tree:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139487,"byte_end":139549,"line_start":131,"line_end":131,"column_start":1,"column_end":63}},{"value":"/ span!(Level::INFO, \"root\").in_scope(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139550,"byte_end":139594,"line_start":132,"line_end":132,"column_start":1,"column_end":45}},{"value":"/     // since we are now inside \"root\", this span is considered a child","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139595,"byte_end":139669,"line_start":133,"line_end":133,"column_start":1,"column_end":75}},{"value":"/     // of \"root\":","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139670,"byte_end":139691,"line_start":134,"line_end":134,"column_start":1,"column_end":22}},{"value":"/     span!(Level::DEBUG, \"outer_child\").in_scope(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139692,"byte_end":139748,"line_start":135,"line_end":135,"column_start":1,"column_end":57}},{"value":"/         // this span is a child of \"outer_child\", which is in turn a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139749,"byte_end":139821,"line_start":136,"line_end":136,"column_start":1,"column_end":73}},{"value":"/         // child of \"root\":","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139822,"byte_end":139853,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/         span!(Level::TRACE, \"inner_child\").in_scope(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139854,"byte_end":139914,"line_start":138,"line_end":138,"column_start":1,"column_end":61}},{"value":"/             // and so on...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139915,"byte_end":139946,"line_start":139,"line_end":139,"column_start":1,"column_end":32}},{"value":"/         });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139947,"byte_end":139962,"line_start":140,"line_end":140,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139963,"byte_end":139974,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"/     // another span created here would also be a child of \"root\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":139975,"byte_end":140044,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140045,"byte_end":140052,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140053,"byte_end":140059,"line_start":144,"line_end":144,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140060,"byte_end":140063,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ In addition, the parent of a span may be explicitly specified in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140064,"byte_end":140132,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/ the `span!` macro. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140133,"byte_end":140168,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140169,"byte_end":140172,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140173,"byte_end":140184,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140185,"byte_end":140225,"line_start":150,"line_end":150,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140226,"byte_end":140251,"line_start":151,"line_end":151,"column_start":1,"column_end":26}},{"value":"/ // Create, but do not enter, a span called \"foo\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140252,"byte_end":140305,"line_start":152,"line_end":152,"column_start":1,"column_end":54}},{"value":"/ let foo = span!(Level::INFO, \"foo\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140306,"byte_end":140346,"line_start":153,"line_end":153,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140347,"byte_end":140350,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ // Create and enter a span called \"bar\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140351,"byte_end":140395,"line_start":155,"line_end":155,"column_start":1,"column_end":45}},{"value":"/ let bar = span!(Level::INFO, \"bar\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140396,"byte_end":140436,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/ let _enter = bar.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140437,"byte_end":140466,"line_start":157,"line_end":157,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140467,"byte_end":140470,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ // Although we have currently entered \"bar\", \"baz\"'s parent span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140471,"byte_end":140539,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/ // will be \"foo\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140540,"byte_end":140561,"line_start":160,"line_end":160,"column_start":1,"column_end":22}},{"value":"/ let baz = span!(parent: &foo, Level::INFO, \"baz\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140562,"byte_end":140616,"line_start":161,"line_end":161,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140617,"byte_end":140624,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140625,"byte_end":140628,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ A child span should typically be considered _part_ of its parent. For","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140629,"byte_end":140702,"line_start":164,"line_end":164,"column_start":1,"column_end":74}},{"value":"/ example, if a subscriber is recording the length of time spent in various","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140703,"byte_end":140780,"line_start":165,"line_end":165,"column_start":1,"column_end":78}},{"value":"/ spans, it should generally include the time spent in a span's children as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140781,"byte_end":140858,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/ part of that span's duration.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140859,"byte_end":140892,"line_start":167,"line_end":167,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140893,"byte_end":140896,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ In addition to having zero or one parent, a span may also _follow from_ any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140897,"byte_end":140976,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ number of other spans. This indicates a causal relationship between the span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":140977,"byte_end":141057,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ and the spans that it follows from, but a follower is *not* typically","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141058,"byte_end":141131,"line_start":171,"line_end":171,"column_start":1,"column_end":74}},{"value":"/ considered part of the duration of the span it follows. Unlike the parent, a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141132,"byte_end":141212,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/ span may record that it follows from another span after it is created, using","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141213,"byte_end":141293,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/ the [`follows_from`] method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141294,"byte_end":141326,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141327,"byte_end":141330,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a listener task in a server. As the listener accepts","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141331,"byte_end":141411,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ incoming connections, it spawns new tasks that handle those connections. We","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141412,"byte_end":141491,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/ might want to have a span representing the listener, and instrument each","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141492,"byte_end":141568,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ spawned handler task with its own span. We would want our instrumentation to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141569,"byte_end":141649,"line_start":179,"line_end":179,"column_start":1,"column_end":81}},{"value":"/ record that the handler tasks were spawned as a result of the listener task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141650,"byte_end":141730,"line_start":180,"line_end":180,"column_start":1,"column_end":81}},{"value":"/ However, we might not consider the handler tasks to be _part_ of the time","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141731,"byte_end":141808,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/ spent in the listener task, so we would not consider those spans children of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141809,"byte_end":141889,"line_start":182,"line_end":182,"column_start":1,"column_end":81}},{"value":"/ the listener span. Instead, we would record that the handler tasks follow","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141890,"byte_end":141967,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/ from the listener, recording the causal relationship but treating the spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":141968,"byte_end":142047,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ as separate durations.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142048,"byte_end":142074,"line_start":185,"line_end":185,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142075,"byte_end":142078,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ## Closing Spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142079,"byte_end":142099,"line_start":187,"line_end":187,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142100,"byte_end":142103,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ Execution may enter and exit a span multiple times before that span is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142104,"byte_end":142178,"line_start":189,"line_end":189,"column_start":1,"column_end":75}},{"value":"/ _closed_. Consider, for example, a future which has an associated","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142179,"byte_end":142248,"line_start":190,"line_end":190,"column_start":1,"column_end":70}},{"value":"/ span and enters that span every time it is polled:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142249,"byte_end":142303,"line_start":191,"line_end":191,"column_start":1,"column_end":55}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142304,"byte_end":142315,"line_start":192,"line_end":192,"column_start":1,"column_end":12}},{"value":"/ # extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142316,"byte_end":142343,"line_start":193,"line_end":193,"column_start":1,"column_end":28}},{"value":"/ # extern crate futures;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142344,"byte_end":142371,"line_start":194,"line_end":194,"column_start":1,"column_end":28}},{"value":"/ # use futures::{Future, Poll, Async};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142372,"byte_end":142413,"line_start":195,"line_end":195,"column_start":1,"column_end":42}},{"value":"/ struct MyFuture {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142414,"byte_end":142435,"line_start":196,"line_end":196,"column_start":1,"column_end":22}},{"value":"/    // data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142436,"byte_end":142450,"line_start":197,"line_end":197,"column_start":1,"column_end":15}},{"value":"/    span: tracing::Span,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142451,"byte_end":142478,"line_start":198,"line_end":198,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142479,"byte_end":142484,"line_start":199,"line_end":199,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142485,"byte_end":142488,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142489,"byte_end":142519,"line_start":201,"line_end":201,"column_start":1,"column_end":31}},{"value":"/     type Item = ();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142520,"byte_end":142543,"line_start":202,"line_end":202,"column_start":1,"column_end":24}},{"value":"/     type Error = ();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142544,"byte_end":142568,"line_start":203,"line_end":203,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142569,"byte_end":142572,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/     fn poll(&mut self) -> Poll<Self::Item, Self::Error> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142573,"byte_end":142634,"line_start":205,"line_end":205,"column_start":1,"column_end":62}},{"value":"/         let _enter = self.span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142635,"byte_end":142678,"line_start":206,"line_end":206,"column_start":1,"column_end":44}},{"value":"/         // Do actual future work...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142679,"byte_end":142718,"line_start":207,"line_end":207,"column_start":1,"column_end":40}},{"value":"/ # Ok(Async::Ready(()))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142719,"byte_end":142745,"line_start":208,"line_end":208,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142746,"byte_end":142755,"line_start":209,"line_end":209,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142756,"byte_end":142761,"line_start":210,"line_end":210,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142762,"byte_end":142769,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142770,"byte_end":142773,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ If this future was spawned on an executor, it might yield one or more times","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142774,"byte_end":142853,"line_start":213,"line_end":213,"column_start":1,"column_end":80}},{"value":"/ before `poll` returns `Ok(Async::Ready)`. If the future were to yield, then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142854,"byte_end":142933,"line_start":214,"line_end":214,"column_start":1,"column_end":80}},{"value":"/ the executor would move on to poll the next future, which may _also_ enter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":142934,"byte_end":143012,"line_start":215,"line_end":215,"column_start":1,"column_end":79}},{"value":"/ an associated span or series of spans. Therefore, it is valid for a span to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143013,"byte_end":143092,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"/ be entered repeatedly before it completes. Only the time when that span or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143093,"byte_end":143171,"line_start":217,"line_end":217,"column_start":1,"column_end":79}},{"value":"/ one of its children was the current span is considered to be time spent in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143172,"byte_end":143250,"line_start":218,"line_end":218,"column_start":1,"column_end":79}},{"value":"/ that span. A span which is not executing and has not yet been closed is said","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143251,"byte_end":143331,"line_start":219,"line_end":219,"column_start":1,"column_end":81}},{"value":"/ to be _idle_.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143332,"byte_end":143349,"line_start":220,"line_end":220,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143350,"byte_end":143353,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Because spans may be entered and exited multiple times before they close,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143354,"byte_end":143431,"line_start":222,"line_end":222,"column_start":1,"column_end":78}},{"value":"/ [`Subscriber`]s have separate trait methods which are called to notify them","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143432,"byte_end":143511,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ of span exits and when span handles are dropped. When execution exits a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143512,"byte_end":143587,"line_start":224,"line_end":224,"column_start":1,"column_end":76}},{"value":"/ span, [`exit`] will always be called with that span's ID to notify the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143588,"byte_end":143662,"line_start":225,"line_end":225,"column_start":1,"column_end":75}},{"value":"/ subscriber that the span has been exited. When span handles are dropped, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143663,"byte_end":143743,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"/ [`drop_span`] method is called with that span's ID. The subscriber may use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143744,"byte_end":143822,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"/ this to determine whether or not the span will be entered again.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143823,"byte_end":143891,"line_start":228,"line_end":228,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143892,"byte_end":143895,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ If there is only a single handle with the capacity to exit a span, dropping","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143896,"byte_end":143975,"line_start":230,"line_end":230,"column_start":1,"column_end":80}},{"value":"/ that handle \"closes\" the span, since the capacity to enter it no longer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":143976,"byte_end":144051,"line_start":231,"line_end":231,"column_start":1,"column_end":76}},{"value":"/ exists. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144052,"byte_end":144076,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144077,"byte_end":144084,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144085,"byte_end":144125,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144126,"byte_end":144151,"line_start":235,"line_end":235,"column_start":1,"column_end":26}},{"value":"/ {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144152,"byte_end":144157,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/     span!(Level::TRACE, \"my_span\").in_scope(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144158,"byte_end":144210,"line_start":237,"line_end":237,"column_start":1,"column_end":53}},{"value":"/         // perform some work in the context of `my_span`...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144211,"byte_end":144274,"line_start":238,"line_end":238,"column_start":1,"column_end":64}},{"value":"/     }); // --> Subscriber::exit(my_span)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144275,"byte_end":144319,"line_start":239,"line_end":239,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144320,"byte_end":144323,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/     // The handle to `my_span` only lives inside of this block; when it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144324,"byte_end":144402,"line_start":241,"line_end":241,"column_start":1,"column_end":79}},{"value":"/     // dropped, the subscriber will be informed via `drop_span`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144403,"byte_end":144471,"line_start":242,"line_end":242,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144472,"byte_end":144475,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ } // --> Subscriber::drop_span(my_span)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144476,"byte_end":144519,"line_start":244,"line_end":244,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144520,"byte_end":144527,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144528,"byte_end":144531,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ However, if multiple handles exist, the span can still be re-entered even if","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144532,"byte_end":144612,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ one or more is dropped. For determining when _all_ handles to a span have","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144613,"byte_end":144690,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ been dropped, `Subscriber`s have a [`clone_span`] method, which is called","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144691,"byte_end":144768,"line_start":249,"line_end":249,"column_start":1,"column_end":78}},{"value":"/ every time a span handle is cloned. Combined with `drop_span`, this may be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144769,"byte_end":144847,"line_start":250,"line_end":250,"column_start":1,"column_end":79}},{"value":"/ used to track the number of handles to a given span — if `drop_span` has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144848,"byte_end":144926,"line_start":251,"line_end":251,"column_start":1,"column_end":77}},{"value":"/ been called one more time than the number of calls to `clone_span` for a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":144927,"byte_end":145003,"line_start":252,"line_end":252,"column_start":1,"column_end":77}},{"value":"/ given ID, then no more handles to the span with that ID exist. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145004,"byte_end":145074,"line_start":253,"line_end":253,"column_start":1,"column_end":71}},{"value":"/ subscriber may then treat it as closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145075,"byte_end":145118,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145119,"byte_end":145122,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # When to use spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145123,"byte_end":145146,"line_start":256,"line_end":256,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145147,"byte_end":145150,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ As a rule of thumb, spans should be used to represent discrete units of work","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145151,"byte_end":145231,"line_start":258,"line_end":258,"column_start":1,"column_end":81}},{"value":"/ (e.g., a given request's lifetime in a server) or periods of time spent in a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145232,"byte_end":145312,"line_start":259,"line_end":259,"column_start":1,"column_end":81}},{"value":"/ given context (e.g., time spent interacting with an instance of an external","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145313,"byte_end":145392,"line_start":260,"line_end":260,"column_start":1,"column_end":80}},{"value":"/ system, such as a database).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145393,"byte_end":145425,"line_start":261,"line_end":261,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145426,"byte_end":145429,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ Which scopes in a program correspond to new spans depend somewhat on user","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145430,"byte_end":145507,"line_start":263,"line_end":263,"column_start":1,"column_end":78}},{"value":"/ intent. For example, consider the case of a loop in a program. Should we","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145508,"byte_end":145584,"line_start":264,"line_end":264,"column_start":1,"column_end":77}},{"value":"/ construct one span and perform the entire loop inside of that span, like:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145585,"byte_end":145662,"line_start":265,"line_end":265,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145663,"byte_end":145666,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145667,"byte_end":145678,"line_start":267,"line_end":267,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145679,"byte_end":145719,"line_start":268,"line_end":268,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145720,"byte_end":145745,"line_start":269,"line_end":269,"column_start":1,"column_end":26}},{"value":"/ # let n = 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145746,"byte_end":145762,"line_start":270,"line_end":270,"column_start":1,"column_end":17}},{"value":"/ let span = span!(Level::TRACE, \"my_loop\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145763,"byte_end":145809,"line_start":271,"line_end":271,"column_start":1,"column_end":47}},{"value":"/ let _enter = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145810,"byte_end":145840,"line_start":272,"line_end":272,"column_start":1,"column_end":31}},{"value":"/ for i in 0..n {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145841,"byte_end":145860,"line_start":273,"line_end":273,"column_start":1,"column_end":20}},{"value":"/     # let _ = i;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145861,"byte_end":145881,"line_start":274,"line_end":274,"column_start":1,"column_end":21}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145882,"byte_end":145896,"line_start":275,"line_end":275,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145897,"byte_end":145902,"line_start":276,"line_end":276,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145903,"byte_end":145910,"line_start":277,"line_end":277,"column_start":1,"column_end":8}},{"value":"/ Or, should we create a new span for each iteration of the loop, as in:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145911,"byte_end":145985,"line_start":278,"line_end":278,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145986,"byte_end":145997,"line_start":279,"line_end":279,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":145998,"byte_end":146038,"line_start":280,"line_end":280,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146039,"byte_end":146064,"line_start":281,"line_end":281,"column_start":1,"column_end":26}},{"value":"/ # let n = 1u64;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146065,"byte_end":146084,"line_start":282,"line_end":282,"column_start":1,"column_end":20}},{"value":"/ for i in 0..n {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146085,"byte_end":146104,"line_start":283,"line_end":283,"column_start":1,"column_end":20}},{"value":"/     let span = span!(Level::TRACE, \"my_loop\", iteration = i);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146105,"byte_end":146170,"line_start":284,"line_end":284,"column_start":1,"column_end":66}},{"value":"/     let _enter = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146171,"byte_end":146205,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146206,"byte_end":146220,"line_start":286,"line_end":286,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146221,"byte_end":146226,"line_start":287,"line_end":287,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146227,"byte_end":146234,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146235,"byte_end":146238,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Depending on the circumstances, we might want to do either, or both. For","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146239,"byte_end":146315,"line_start":290,"line_end":290,"column_start":1,"column_end":77}},{"value":"/ example, if we want to know how long was spent in the loop overall, we would","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146316,"byte_end":146396,"line_start":291,"line_end":291,"column_start":1,"column_end":81}},{"value":"/ create a single span around the entire loop; whereas if we wanted to know how","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146397,"byte_end":146478,"line_start":292,"line_end":292,"column_start":1,"column_end":82}},{"value":"/ much time was spent in each individual iteration, we would enter a new span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146479,"byte_end":146558,"line_start":293,"line_end":293,"column_start":1,"column_end":80}},{"value":"/ on every iteration.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146559,"byte_end":146582,"line_start":294,"line_end":294,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146583,"byte_end":146586,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ [fields]: ../field/index.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146587,"byte_end":146620,"line_start":296,"line_end":296,"column_start":1,"column_end":34}},{"value":"/ [Metadata]: ../struct.Metadata.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146621,"byte_end":146660,"line_start":297,"line_end":297,"column_start":1,"column_end":40}},{"value":"/ [`Id`]: struct.Id.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146661,"byte_end":146687,"line_start":298,"line_end":298,"column_start":1,"column_end":27}},{"value":"/ [verbosity level]: ../struct.Level.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146688,"byte_end":146731,"line_start":299,"line_end":299,"column_start":1,"column_end":44}},{"value":"/ [`span!`]: ../macro.span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146732,"byte_end":146765,"line_start":300,"line_end":300,"column_start":1,"column_end":34}},{"value":"/ [`trace_span!`]: ../macro.trace_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146766,"byte_end":146811,"line_start":301,"line_end":301,"column_start":1,"column_end":46}},{"value":"/ [`debug_span!`]: ../macro.debug_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146812,"byte_end":146857,"line_start":302,"line_end":302,"column_start":1,"column_end":46}},{"value":"/ [`info_span!`]: ../macro.info_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146858,"byte_end":146901,"line_start":303,"line_end":303,"column_start":1,"column_end":44}},{"value":"/ [`warn_span!`]: ../macro.warn_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146902,"byte_end":146945,"line_start":304,"line_end":304,"column_start":1,"column_end":44}},{"value":"/ [`error_span!`]: ../macro.error_span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146946,"byte_end":146991,"line_start":305,"line_end":305,"column_start":1,"column_end":46}},{"value":"/ [`clone_span`]: ../subscriber/trait.Subscriber.html#method.clone_span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":146992,"byte_end":147065,"line_start":306,"line_end":306,"column_start":1,"column_end":74}},{"value":"/ [`drop_span`]: ../subscriber/trait.Subscriber.html#method.drop_span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147066,"byte_end":147137,"line_start":307,"line_end":307,"column_start":1,"column_end":72}},{"value":"/ [`exit`]: ../subscriber/trait.Subscriber.html#tymethod.exit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147138,"byte_end":147201,"line_start":308,"line_end":308,"column_start":1,"column_end":64}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147202,"byte_end":147257,"line_start":309,"line_end":309,"column_start":1,"column_end":56}},{"value":"/ [`Attributes`]: struct.Attributes.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147258,"byte_end":147300,"line_start":310,"line_end":310,"column_start":1,"column_end":43}},{"value":"/ [`enter`]: struct.Span.html#method.enter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147301,"byte_end":147345,"line_start":311,"line_end":311,"column_start":1,"column_end":45}},{"value":"/ [`in_scope`]: struct.Span.html#method.in_scope","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147346,"byte_end":147396,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ [`follows_from`]: struct.Span.html#method.follows_from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147397,"byte_end":147455,"line_start":313,"line_end":313,"column_start":1,"column_end":59}},{"value":"/ [guard]: struct.Entered.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147456,"byte_end":147488,"line_start":314,"line_end":314,"column_start":1,"column_end":33}},{"value":"/ [parent]: #span-relationships","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147489,"byte_end":147522,"line_start":315,"line_end":315,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147779,"byte_end":147783,"line_start":328,"line_end":328,"column_start":11,"column_end":15},"name":"AsId","qualname":"::span::AsId","value":"AsId: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":128}],"decl_id":null,"docs":" Trait implemented by types which have a span `Id`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by types which have a span `Id`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147714,"byte_end":147768,"line_start":327,"line_end":327,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147939,"byte_end":147944,"line_start":331,"line_end":331,"column_start":8,"column_end":13},"name":"as_id","qualname":"::span::AsId::as_id","value":"pub fn as_id(&Self) -> Option<&Id>","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Returns the `Id` of the span that `self` corresponds to, or `None` if\n this corresponds to a disabled span.\n","sig":null,"attributes":[{"value":"/ Returns the `Id` of the span that `self` corresponds to, or `None` if","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147813,"byte_end":147886,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ this corresponds to a disabled span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147891,"byte_end":147931,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":148329,"byte_end":148333,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"decl_id":null,"docs":" A handle representing a span, with the capability to enter the span if it\n exists.","sig":null,"attributes":[{"value":"/ A handle representing a span, with the capability to enter the span if it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147971,"byte_end":148048,"line_start":334,"line_end":334,"column_start":1,"column_end":78}},{"value":"/ exists.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":148049,"byte_end":148060,"line_start":335,"line_end":335,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":148061,"byte_end":148064,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ If the span was rejected by the current `Subscriber`'s filter, entering the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":148065,"byte_end":148144,"line_start":337,"line_end":337,"column_start":1,"column_end":80}},{"value":"/ span will silently do nothing. Thus, the handle can be used in the same","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":148145,"byte_end":148220,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ manner regardless of whether or not the trace is currently being collected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":148221,"byte_end":148300,"line_start":339,"line_end":339,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149744,"byte_end":149751,"line_start":380,"line_end":380,"column_start":12,"column_end":19},"name":"Entered","qualname":"::span::Entered","value":"Entered {  }","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":" A guard representing a span which has been entered and is currently\n executing.","sig":null,"attributes":[{"value":"/ A guard representing a span which has been entered and is currently","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149387,"byte_end":149458,"line_start":370,"line_end":370,"column_start":1,"column_end":72}},{"value":"/ executing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149459,"byte_end":149473,"line_start":371,"line_end":371,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149474,"byte_end":149477,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ When the guard is dropped, the span will be exited.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149478,"byte_end":149533,"line_start":373,"line_end":373,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149534,"byte_end":149537,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Span::enter`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149538,"byte_end":149591,"line_start":375,"line_end":375,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149592,"byte_end":149595,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ [`Span::enter`]: ../struct.Span.html#method.enter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149596,"byte_end":149649,"line_start":377,"line_end":377,"column_start":1,"column_end":54}},{"value":"must_use = \"once a span has been entered, it should be exited\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":149667,"byte_end":149732,"line_start":379,"line_end":379,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150713,"byte_end":150716,"line_start":407,"line_end":407,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"pub fn new(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` with the given [metadata] and set of\n [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` with the given [metadata] and set of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150117,"byte_end":150181,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/ [field values].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150186,"byte_end":150205,"line_start":395,"line_end":395,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150210,"byte_end":150213,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The new span will be constructed by the currently-active [`Subscriber`],","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150218,"byte_end":150294,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ with the current span as its parent (if one exists).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150299,"byte_end":150355,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150360,"byte_end":150363,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150368,"byte_end":150441,"line_start":400,"line_end":400,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150446,"byte_end":150481,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150486,"byte_end":150489,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150494,"byte_end":150521,"line_start":403,"line_end":403,"column_start":5,"column_end":32}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150526,"byte_end":150581,"line_start":404,"line_end":404,"column_start":5,"column_end":60}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150586,"byte_end":150635,"line_start":405,"line_end":405,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150640,"byte_end":150701,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150925,"byte_end":150933,"line_start":413,"line_end":413,"column_start":12,"column_end":20},"name":"new_with","qualname":"<Span>::new_with","value":"pub fn new_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150885,"byte_end":150894,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151596,"byte_end":151604,"line_start":431,"line_end":431,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Span>::new_root","value":"pub fn new_root(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as the root of its own trace tree, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as the root of its own trace tree, with the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151175,"byte_end":151246,"line_start":422,"line_end":422,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151251,"byte_end":151298,"line_start":423,"line_end":423,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151303,"byte_end":151306,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151311,"byte_end":151384,"line_start":425,"line_end":425,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151389,"byte_end":151424,"line_start":426,"line_end":426,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151429,"byte_end":151432,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151437,"byte_end":151464,"line_start":428,"line_end":428,"column_start":5,"column_end":32}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151469,"byte_end":151518,"line_start":429,"line_end":429,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151523,"byte_end":151584,"line_start":430,"line_end":430,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151818,"byte_end":151831,"line_start":437,"line_end":437,"column_start":12,"column_end":25},"name":"new_root_with","qualname":"<Span>::new_root_with","value":"pub fn new_root_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":151778,"byte_end":151787,"line_start":435,"line_end":435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152499,"byte_end":152507,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Span>::child_of","value":"pub fn child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                         &'static Metadata,\n                                                         &field::ValueSet)\n-> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as child of the given parent span, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as child of the given parent span, with the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152078,"byte_end":152149,"line_start":446,"line_end":446,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152154,"byte_end":152201,"line_start":447,"line_end":447,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152206,"byte_end":152209,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152214,"byte_end":152287,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152292,"byte_end":152327,"line_start":450,"line_end":450,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152332,"byte_end":152335,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152340,"byte_end":152367,"line_start":452,"line_end":452,"column_start":5,"column_end":32}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152372,"byte_end":152421,"line_start":453,"line_end":453,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152426,"byte_end":152487,"line_start":454,"line_end":454,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152879,"byte_end":152892,"line_start":468,"line_end":468,"column_start":12,"column_end":25},"name":"child_of_with","qualname":"<Span>::child_of_with","value":"pub fn child_of_with<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                              &'static Metadata,\n                                                              &field::ValueSet,\n                                                              &Dispatch)\n-> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":152839,"byte_end":152848,"line_start":466,"line_end":466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153728,"byte_end":153740,"line_start":490,"line_end":490,"column_start":12,"column_end":24},"name":"new_disabled","qualname":"<Span>::new_disabled","value":"pub fn new_disabled(&'static Metadata) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new disabled span with the given `Metadata`.","sig":null,"attributes":[{"value":"/ Constructs a new disabled span with the given `Metadata`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153303,"byte_end":153364,"line_start":481,"line_end":481,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153369,"byte_end":153372,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This should be used when a span is constructed from a known callsite,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153377,"byte_end":153450,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ but the subscriber indicates that it is disabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153455,"byte_end":153508,"line_start":484,"line_end":484,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153513,"byte_end":153516,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will not notify the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153521,"byte_end":153597,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/ `Subscriber` but _may_ record log messages if the `log` feature flag is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153602,"byte_end":153677,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153682,"byte_end":153694,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153699,"byte_end":153716,"line_start":489,"line_end":489,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154174,"byte_end":154178,"line_start":504,"line_end":504,"column_start":18,"column_end":22},"name":"none","qualname":"<Span>::none","value":"pub const fn none() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span that is *completely disabled*.","sig":null,"attributes":[{"value":"/ Constructs a new span that is *completely disabled*.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153876,"byte_end":153932,"line_start":497,"line_end":497,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153937,"byte_end":153940,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This can be used rather than `Option<Span>` to represent cases where a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":153945,"byte_end":154019,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ span is not present.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154024,"byte_end":154048,"line_start":500,"line_end":500,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154053,"byte_end":154056,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will do nothing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154061,"byte_end":154134,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154139,"byte_end":154156,"line_start":503,"line_end":503,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154709,"byte_end":154716,"line_start":519,"line_end":519,"column_start":12,"column_end":19},"name":"current","qualname":"<Span>::current","value":"pub fn current() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the span [considered by the `Subscriber`] to be the\n current span.","sig":null,"attributes":[{"value":"/ Returns a handle to the span [considered by the `Subscriber`] to be the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154276,"byte_end":154351,"line_start":511,"line_end":511,"column_start":5,"column_end":80}},{"value":"/ current span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154356,"byte_end":154373,"line_start":512,"line_end":512,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154378,"byte_end":154381,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ If the subscriber indicates that it does not track the current span, or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154386,"byte_end":154461,"line_start":514,"line_end":514,"column_start":5,"column_end":80}},{"value":"/ that the thread from which this function is called is not currently","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154466,"byte_end":154537,"line_start":515,"line_end":515,"column_start":5,"column_end":76}},{"value":"/ inside a span, the returned span will be disabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154542,"byte_end":154596,"line_start":516,"line_end":516,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154601,"byte_end":154604,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [considered by the `Subscriber`]: ../subscriber/trait.Subscriber.html#method.current","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":154609,"byte_end":154697,"line_start":518,"line_end":518,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162690,"byte_end":162695,"line_start":748,"line_end":748,"column_start":12,"column_end":17},"name":"enter","qualname":"<Span>::enter","value":"pub fn enter(&Self) -> Entered","parent":null,"children":[],"decl_id":null,"docs":" Enters this span, returning a guard that will exit the span when dropped.","sig":null,"attributes":[{"value":"/ Enters this span, returning a guard that will exit the span when dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":155819,"byte_end":155896,"line_start":559,"line_end":559,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":155901,"byte_end":155904,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled by the current subscriber, then this function will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":155909,"byte_end":155987,"line_start":561,"line_end":561,"column_start":5,"column_end":83}},{"value":"/ call [`Subscriber::enter`] with the span's [`Id`], and dropping the guard","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":155992,"byte_end":156069,"line_start":562,"line_end":562,"column_start":5,"column_end":82}},{"value":"/ will call [`Subscriber::exit`]. If the span is disabled, this does","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156074,"byte_end":156144,"line_start":563,"line_end":563,"column_start":5,"column_end":75}},{"value":"/ nothing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156149,"byte_end":156161,"line_start":564,"line_end":564,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156166,"byte_end":156169,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # In Asynchronous Code","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156174,"byte_end":156200,"line_start":566,"line_end":566,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156205,"byte_end":156208,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ **Warning**: in asynchronous code that uses [async/await syntax][syntax],","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156213,"byte_end":156290,"line_start":568,"line_end":568,"column_start":5,"column_end":82}},{"value":"/ `Span::enter` should be used very carefully or avoided entirely. Holding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156295,"byte_end":156371,"line_start":569,"line_end":569,"column_start":5,"column_end":81}},{"value":"/ the drop guard returned by `Span::enter` across `.await` points will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156376,"byte_end":156448,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/ result in incorrect traces.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156453,"byte_end":156484,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156489,"byte_end":156492,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ For example,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156497,"byte_end":156513,"line_start":573,"line_end":573,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156518,"byte_end":156521,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156526,"byte_end":156533,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156538,"byte_end":156567,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/ # async fn some_other_async_function() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156572,"byte_end":156617,"line_start":577,"line_end":577,"column_start":5,"column_end":50}},{"value":"/ async fn my_async_function() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156622,"byte_end":156656,"line_start":578,"line_end":578,"column_start":5,"column_end":39}},{"value":"/     let span = info_span!(\"my_async_function\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156661,"byte_end":156712,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156717,"byte_end":156720,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     // THIS WILL RESULT IN INCORRECT TRACES","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156725,"byte_end":156772,"line_start":581,"line_end":581,"column_start":5,"column_end":52}},{"value":"/     let _enter = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156777,"byte_end":156811,"line_start":582,"line_end":582,"column_start":5,"column_end":39}},{"value":"/     some_other_async_function().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156816,"byte_end":156858,"line_start":583,"line_end":583,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156863,"byte_end":156866,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156871,"byte_end":156885,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156890,"byte_end":156895,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156900,"byte_end":156907,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156912,"byte_end":156915,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ The drop guard returned by `Span::enter` exits the span when it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156920,"byte_end":156990,"line_start":589,"line_end":589,"column_start":5,"column_end":75}},{"value":"/ dropped. When an async function or async block yields at an `.await`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":156995,"byte_end":157067,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ point, the current scope is _exited_, but values in that scope are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157072,"byte_end":157142,"line_start":591,"line_end":591,"column_start":5,"column_end":75}},{"value":"/ **not** dropped (because the async block will eventually resume","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157147,"byte_end":157214,"line_start":592,"line_end":592,"column_start":5,"column_end":72}},{"value":"/ execution from that await point). This means that _another_ task will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157219,"byte_end":157292,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ begin executing while _remaining_ in the entered span. This results in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157297,"byte_end":157371,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ an incorrect trace.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157376,"byte_end":157399,"line_start":595,"line_end":595,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157404,"byte_end":157407,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Instead of using `Span::enter` in asynchronous code, prefer the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157412,"byte_end":157479,"line_start":597,"line_end":597,"column_start":5,"column_end":72}},{"value":"/ following:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157484,"byte_end":157498,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157503,"byte_end":157506,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ * To enter a span for a synchronous section of code within an async","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157511,"byte_end":157582,"line_start":600,"line_end":600,"column_start":5,"column_end":76}},{"value":"/   block or function, prefer [`Span::in_scope`]. Since `in_scope` takes a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157587,"byte_end":157663,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/   synchronous closure and exits the span when the closure returns, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157668,"byte_end":157742,"line_start":602,"line_end":602,"column_start":5,"column_end":79}},{"value":"/   span will always be exited before the next await point. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157747,"byte_end":157821,"line_start":603,"line_end":603,"column_start":5,"column_end":79}},{"value":"/   ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157826,"byte_end":157835,"line_start":604,"line_end":604,"column_start":5,"column_end":14}},{"value":"/   # use tracing::info_span;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157840,"byte_end":157871,"line_start":605,"line_end":605,"column_start":5,"column_end":36}},{"value":"/   # async fn some_other_async_function(_: ()) {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157876,"byte_end":157928,"line_start":606,"line_end":606,"column_start":5,"column_end":57}},{"value":"/   async fn my_async_function() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157933,"byte_end":157969,"line_start":607,"line_end":607,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":157974,"byte_end":158027,"line_start":608,"line_end":608,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158032,"byte_end":158035,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/       let some_value = span.in_scope(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158040,"byte_end":158085,"line_start":610,"line_end":610,"column_start":5,"column_end":50}},{"value":"/           // run some synchronous code inside the span...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158090,"byte_end":158151,"line_start":611,"line_end":611,"column_start":5,"column_end":66}},{"value":"/       });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158156,"byte_end":158169,"line_start":612,"line_end":612,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158174,"byte_end":158177,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/       // This is okay! The span has already been exited before we reach","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158182,"byte_end":158257,"line_start":614,"line_end":614,"column_start":5,"column_end":80}},{"value":"/       // the await point.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158262,"byte_end":158291,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/       some_other_async_function(some_value).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158296,"byte_end":158350,"line_start":616,"line_end":616,"column_start":5,"column_end":59}},{"value":"/  ","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158355,"byte_end":158360,"line_start":617,"line_end":617,"column_start":5,"column_end":10}},{"value":"/       // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158365,"byte_end":158381,"line_start":618,"line_end":618,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158386,"byte_end":158393,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158398,"byte_end":158407,"line_start":620,"line_end":620,"column_start":5,"column_end":14}},{"value":"/ * For instrumenting asynchronous code, `tracing` provides the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158412,"byte_end":158477,"line_start":621,"line_end":621,"column_start":5,"column_end":70}},{"value":"/   [`Future::instrument` combinator][instrument] for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158482,"byte_end":158537,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/   attaching a span to a future (async function or block). This will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158542,"byte_end":158613,"line_start":623,"line_end":623,"column_start":5,"column_end":76}},{"value":"/   enter the span _every_ time the future is polled, and exit it whenever","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158618,"byte_end":158694,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/   the future yields.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158699,"byte_end":158723,"line_start":625,"line_end":625,"column_start":5,"column_end":29}},{"value":"/   ","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158728,"byte_end":158734,"line_start":626,"line_end":626,"column_start":5,"column_end":11}},{"value":"/   `Instrument` can be used with an async block inside an async function:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158739,"byte_end":158815,"line_start":627,"line_end":627,"column_start":5,"column_end":81}},{"value":"/   ```ignore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158820,"byte_end":158835,"line_start":628,"line_end":628,"column_start":5,"column_end":20}},{"value":"/   # use tracing::info_span;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158840,"byte_end":158871,"line_start":629,"line_end":629,"column_start":5,"column_end":36}},{"value":"/   use tracing::Instrument;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158876,"byte_end":158906,"line_start":630,"line_end":630,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158911,"byte_end":158914,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158919,"byte_end":158966,"line_start":632,"line_end":632,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":158971,"byte_end":159007,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159012,"byte_end":159065,"line_start":634,"line_end":634,"column_start":5,"column_end":58}},{"value":"/       async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159070,"byte_end":159092,"line_start":635,"line_end":635,"column_start":5,"column_end":27}},{"value":"/          // This is correct! If we yield here, the span will be exited,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159097,"byte_end":159172,"line_start":636,"line_end":636,"column_start":5,"column_end":80}},{"value":"/          // and re-entered when we resume.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159177,"byte_end":159223,"line_start":637,"line_end":637,"column_start":5,"column_end":51}},{"value":"/          some_other_async_function().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159228,"byte_end":159275,"line_start":638,"line_end":638,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159280,"byte_end":159283,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/          //more asynchronous code inside the span...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159288,"byte_end":159344,"line_start":640,"line_end":640,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159349,"byte_end":159352,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/       }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159357,"byte_end":159368,"line_start":642,"line_end":642,"column_start":5,"column_end":16}},{"value":"/         // instrument the async block with the span...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159373,"byte_end":159431,"line_start":643,"line_end":643,"column_start":5,"column_end":63}},{"value":"/         .instrument(span)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159436,"byte_end":159465,"line_start":644,"line_end":644,"column_start":5,"column_end":34}},{"value":"/         // ...and await it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159470,"byte_end":159501,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/         .await","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159506,"byte_end":159524,"line_start":646,"line_end":646,"column_start":5,"column_end":23}},{"value":"/   }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159529,"byte_end":159536,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159541,"byte_end":159550,"line_start":648,"line_end":648,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159555,"byte_end":159558,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/   It can also be used to instrument calls to async functions at the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159563,"byte_end":159634,"line_start":650,"line_end":650,"column_start":5,"column_end":76}},{"value":"/   callsite:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159639,"byte_end":159654,"line_start":651,"line_end":651,"column_start":5,"column_end":20}},{"value":"/   ```ignore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159659,"byte_end":159674,"line_start":652,"line_end":652,"column_start":5,"column_end":20}},{"value":"/   # use tracing::debug_span;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159679,"byte_end":159711,"line_start":653,"line_end":653,"column_start":5,"column_end":37}},{"value":"/   use tracing::Instrument;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159716,"byte_end":159746,"line_start":654,"line_end":654,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159751,"byte_end":159754,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159759,"byte_end":159806,"line_start":656,"line_end":656,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159811,"byte_end":159847,"line_start":657,"line_end":657,"column_start":5,"column_end":41}},{"value":"/       let some_value = some_other_async_function()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159852,"byte_end":159906,"line_start":658,"line_end":658,"column_start":5,"column_end":59}},{"value":"/          .instrument(debug_span!(\"some_other_async_function\"))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159911,"byte_end":159977,"line_start":659,"line_end":659,"column_start":5,"column_end":71}},{"value":"/          .await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":159982,"byte_end":160002,"line_start":660,"line_end":660,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160007,"byte_end":160010,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160015,"byte_end":160031,"line_start":662,"line_end":662,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160036,"byte_end":160043,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160048,"byte_end":160057,"line_start":664,"line_end":664,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160062,"byte_end":160065,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ * The [`#[instrument]` attribute macro][attr] can automatically generate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160070,"byte_end":160146,"line_start":666,"line_end":666,"column_start":5,"column_end":81}},{"value":"/   correct code when used on an async function:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160151,"byte_end":160201,"line_start":667,"line_end":667,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160206,"byte_end":160209,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/   ```ignore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160214,"byte_end":160229,"line_start":669,"line_end":669,"column_start":5,"column_end":20}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160234,"byte_end":160281,"line_start":670,"line_end":670,"column_start":5,"column_end":52}},{"value":"/   #[tracing::instrument(level = \"info\")]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160286,"byte_end":160330,"line_start":671,"line_end":671,"column_start":5,"column_end":49}},{"value":"/   async fn my_async_function() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160335,"byte_end":160371,"line_start":672,"line_end":672,"column_start":5,"column_end":41}},{"value":"/   ","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160376,"byte_end":160382,"line_start":673,"line_end":673,"column_start":5,"column_end":11}},{"value":"/       // This is correct! If we yield here, the span will be exited,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160387,"byte_end":160459,"line_start":674,"line_end":674,"column_start":5,"column_end":77}},{"value":"/       // and re-entered when we resume.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160464,"byte_end":160507,"line_start":675,"line_end":675,"column_start":5,"column_end":48}},{"value":"/       some_other_async_function().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160512,"byte_end":160556,"line_start":676,"line_end":676,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160561,"byte_end":160564,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160569,"byte_end":160585,"line_start":678,"line_end":678,"column_start":5,"column_end":21}},{"value":"/    ","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160590,"byte_end":160597,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/   }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160602,"byte_end":160609,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160614,"byte_end":160623,"line_start":681,"line_end":681,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160628,"byte_end":160631,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ [syntax]: https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160636,"byte_end":160734,"line_start":683,"line_end":683,"column_start":5,"column_end":103}},{"value":"/ [`Span::in_scope`]: #method.in_scope","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160739,"byte_end":160779,"line_start":684,"line_end":684,"column_start":5,"column_end":45}},{"value":"/ [instrument]: https://docs.rs/tracing/latest/tracing/trait.Instrument.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160784,"byte_end":160862,"line_start":685,"line_end":685,"column_start":5,"column_end":83}},{"value":"/ [attr]: ../../attr.instrument.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160867,"byte_end":160905,"line_start":686,"line_end":686,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160910,"byte_end":160913,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160918,"byte_end":160932,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160937,"byte_end":160940,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160945,"byte_end":160952,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":160957,"byte_end":160995,"line_start":691,"line_end":691,"column_start":5,"column_end":43}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161000,"byte_end":161025,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161030,"byte_end":161075,"line_start":693,"line_end":693,"column_start":5,"column_end":50}},{"value":"/ let guard = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161080,"byte_end":161109,"line_start":694,"line_end":694,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161114,"byte_end":161117,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ // code here is within the span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161122,"byte_end":161157,"line_start":696,"line_end":696,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161162,"byte_end":161165,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ drop(guard);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161170,"byte_end":161186,"line_start":698,"line_end":698,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161191,"byte_end":161194,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ // code here is no longer within the span","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161199,"byte_end":161244,"line_start":700,"line_end":700,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161249,"byte_end":161252,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161257,"byte_end":161264,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161269,"byte_end":161272,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ Guards need not be explicitly dropped:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161277,"byte_end":161319,"line_start":704,"line_end":704,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161324,"byte_end":161327,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161332,"byte_end":161339,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161344,"byte_end":161382,"line_start":707,"line_end":707,"column_start":5,"column_end":43}},{"value":"/ fn my_function() -> String {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161387,"byte_end":161419,"line_start":708,"line_end":708,"column_start":5,"column_end":37}},{"value":"/     // enter a span for the duration of this function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161424,"byte_end":161482,"line_start":709,"line_end":709,"column_start":5,"column_end":63}},{"value":"/     let span = trace_span!(\"my_function\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161487,"byte_end":161533,"line_start":710,"line_end":710,"column_start":5,"column_end":51}},{"value":"/     let _enter = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161538,"byte_end":161572,"line_start":711,"line_end":711,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161577,"byte_end":161580,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call is still inside the span...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161585,"byte_end":161663,"line_start":713,"line_end":713,"column_start":5,"column_end":83}},{"value":"/     my_other_function();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161668,"byte_end":161696,"line_start":714,"line_end":714,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161701,"byte_end":161704,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161709,"byte_end":161782,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161787,"byte_end":161827,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161832,"byte_end":161837,"line_start":718,"line_end":718,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161842,"byte_end":161845,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161850,"byte_end":161878,"line_start":720,"line_end":720,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161883,"byte_end":161897,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161902,"byte_end":161907,"line_start":722,"line_end":722,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161912,"byte_end":161919,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161924,"byte_end":161927,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ Sub-scopes may be created to limit the duration for which the span is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":161932,"byte_end":162005,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ entered:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162010,"byte_end":162022,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162027,"byte_end":162030,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162035,"byte_end":162042,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162047,"byte_end":162085,"line_start":729,"line_end":729,"column_start":5,"column_end":43}},{"value":"/ let span = info_span!(\"my_great_span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162090,"byte_end":162133,"line_start":730,"line_end":730,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162138,"byte_end":162141,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162146,"byte_end":162151,"line_start":732,"line_end":732,"column_start":5,"column_end":10}},{"value":"/     let _enter = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162156,"byte_end":162190,"line_start":733,"line_end":733,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162195,"byte_end":162198,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/     // this event occurs inside the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162203,"byte_end":162248,"line_start":735,"line_end":735,"column_start":5,"column_end":50}},{"value":"/     info!(\"i'm in the span!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162253,"byte_end":162287,"line_start":736,"line_end":736,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162292,"byte_end":162295,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/     // exiting the scope drops the guard, exiting the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162300,"byte_end":162363,"line_start":738,"line_end":738,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162368,"byte_end":162373,"line_start":739,"line_end":739,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162378,"byte_end":162381,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ // this event is not inside the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162386,"byte_end":162427,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ info!(\"i'm outside the span!\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162432,"byte_end":162466,"line_start":742,"line_end":742,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162471,"byte_end":162478,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162483,"byte_end":162486,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber::enter`]: ../subscriber/trait.Subscriber.html#method.enter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162491,"byte_end":162566,"line_start":745,"line_end":745,"column_start":5,"column_end":80}},{"value":"/ [`Subscriber::exit`]: ../subscriber/trait.Subscriber.html#method.exit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162571,"byte_end":162644,"line_start":746,"line_end":746,"column_start":5,"column_end":78}},{"value":"/ [`Id`]: ../struct.Id.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":162649,"byte_end":162678,"line_start":747,"line_end":747,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164317,"byte_end":164325,"line_start":799,"line_end":799,"column_start":12,"column_end":20},"name":"in_scope","qualname":"<Span>::in_scope","value":"pub fn in_scope<F: FnOnce() -> T, T>(&Self, F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes the given function in the context of this span.","sig":null,"attributes":[{"value":"/ Executes the given function in the context of this span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163100,"byte_end":163160,"line_start":762,"line_end":762,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163165,"byte_end":163168,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled, then this function enters the span, invokes `f`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163173,"byte_end":163249,"line_start":764,"line_end":764,"column_start":5,"column_end":81}},{"value":"/ and then exits the span. If the span is disabled, `f` will still be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163254,"byte_end":163325,"line_start":765,"line_end":765,"column_start":5,"column_end":76}},{"value":"/ invoked, but in the context of the currently-executing span (if there is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163330,"byte_end":163406,"line_start":766,"line_end":766,"column_start":5,"column_end":81}},{"value":"/ one).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163411,"byte_end":163420,"line_start":767,"line_end":767,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163425,"byte_end":163428,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Returns the result of evaluating `f`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163433,"byte_end":163474,"line_start":769,"line_end":769,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163479,"byte_end":163482,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163487,"byte_end":163501,"line_start":771,"line_end":771,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163506,"byte_end":163509,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163514,"byte_end":163521,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163526,"byte_end":163566,"line_start":774,"line_end":774,"column_start":5,"column_end":45}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163571,"byte_end":163596,"line_start":775,"line_end":775,"column_start":5,"column_end":30}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163601,"byte_end":163650,"line_start":776,"line_end":776,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163655,"byte_end":163658,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163663,"byte_end":163688,"line_start":778,"line_end":778,"column_start":5,"column_end":30}},{"value":"/     // this event occurs within the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163693,"byte_end":163738,"line_start":779,"line_end":779,"column_start":5,"column_end":50}},{"value":"/     trace!(\"i'm in the span!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163743,"byte_end":163778,"line_start":780,"line_end":780,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163783,"byte_end":163790,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163795,"byte_end":163798,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ // this event occurs outside the span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163803,"byte_end":163845,"line_start":783,"line_end":783,"column_start":5,"column_end":47}},{"value":"/ trace!(\"i'm not in the span!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163850,"byte_end":163885,"line_start":784,"line_end":784,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163890,"byte_end":163897,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163902,"byte_end":163905,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ Calling a function and returning the result:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163910,"byte_end":163958,"line_start":787,"line_end":787,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163963,"byte_end":163970,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{info_span, Level};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":163975,"byte_end":164013,"line_start":789,"line_end":789,"column_start":5,"column_end":43}},{"value":"/ fn hello_world() -> String {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164018,"byte_end":164050,"line_start":790,"line_end":790,"column_start":5,"column_end":37}},{"value":"/     \"Hello world!\".to_owned()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164055,"byte_end":164088,"line_start":791,"line_end":791,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164093,"byte_end":164098,"line_start":792,"line_end":792,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164103,"byte_end":164106,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ let span = info_span!(\"hello_world\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164111,"byte_end":164152,"line_start":794,"line_end":794,"column_start":5,"column_end":46}},{"value":"/ // the span will be entered for the duration of the call to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164157,"byte_end":164220,"line_start":795,"line_end":795,"column_start":5,"column_end":68}},{"value":"/ // `hello_world`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164225,"byte_end":164246,"line_start":796,"line_end":796,"column_start":5,"column_end":26}},{"value":"/ let a_string = span.in_scope(hello_world);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164251,"byte_end":164297,"line_start":797,"line_end":797,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164302,"byte_end":164305,"line_start":798,"line_end":798,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164548,"byte_end":164553,"line_start":806,"line_end":806,"column_start":12,"column_end":17},"name":"field","qualname":"<Span>::field","value":"pub fn field<Q: ?Sized>(&Self, &Q) -> Option<field::Field> where\nQ: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Field`](../field/struct.Field.html) for the field with the\n given `name`, if one exists,\n","sig":null,"attributes":[{"value":"/ Returns a [`Field`](../field/struct.Field.html) for the field with the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164425,"byte_end":164499,"line_start":804,"line_end":804,"column_start":5,"column_end":79}},{"value":"/ given `name`, if one exists,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164504,"byte_end":164536,"line_start":805,"line_end":805,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164867,"byte_end":164876,"line_start":816,"line_end":816,"column_start":12,"column_end":21},"name":"has_field","qualname":"<Span>::has_field","value":"pub fn has_field<Q: ?Sized>(&Self, &Q) -> bool where Q: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Span` has a field for the given\n [`Field`](../field/struct.Field.html) or field name.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Span` has a field for the given","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164723,"byte_end":164780,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/ [`Field`](../field/struct.Field.html) or field name.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164785,"byte_end":164841,"line_start":814,"line_end":814,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":164846,"byte_end":164855,"line_start":815,"line_end":815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":168265,"byte_end":168271,"line_start":895,"line_end":895,"column_start":12,"column_end":18},"name":"record","qualname":"<Span>::record","value":"pub fn record<Q: ?Sized, V>(&Self, &Q, &V) -> &Self where Q: field::AsField,\nV: field::Value","parent":null,"children":[],"decl_id":null,"docs":" Records that the field described by `field` has the value `value`.","sig":null,"attributes":[{"value":"/ Records that the field described by `field` has the value `value`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165004,"byte_end":165074,"line_start":823,"line_end":823,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165079,"byte_end":165082,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ This may be used with [`field::Empty`] to declare fields whose values","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165087,"byte_end":165160,"line_start":825,"line_end":825,"column_start":5,"column_end":78}},{"value":"/ are not known when the span is created, and record them later:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165165,"byte_end":165231,"line_start":826,"line_end":826,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165236,"byte_end":165243,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165248,"byte_end":165285,"line_start":828,"line_end":828,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165290,"byte_end":165293,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165298,"byte_end":165381,"line_start":830,"line_end":830,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165386,"byte_end":165420,"line_start":831,"line_end":831,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165425,"byte_end":165513,"line_start":832,"line_end":832,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165518,"byte_end":165521,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165526,"byte_end":165536,"line_start":834,"line_end":834,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165541,"byte_end":165544,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165549,"byte_end":165596,"line_start":836,"line_end":836,"column_start":5,"column_end":52}},{"value":"/ // (note that the field name is passed as a string slice)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165601,"byte_end":165662,"line_start":837,"line_end":837,"column_start":5,"column_end":66}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165667,"byte_end":165713,"line_start":838,"line_end":838,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165718,"byte_end":165725,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"/ However, it may also be used to record a _new_ value for a field whose","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165730,"byte_end":165804,"line_start":840,"line_end":840,"column_start":5,"column_end":79}},{"value":"/ value was already recorded:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165809,"byte_end":165840,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165845,"byte_end":165852,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ use tracing::info_span;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165857,"byte_end":165884,"line_start":843,"line_end":843,"column_start":5,"column_end":32}},{"value":"/ # fn do_something() -> Result<(), ()> { Err(()) }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165889,"byte_end":165942,"line_start":844,"line_end":844,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165947,"byte_end":165950,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ // Initially, let's assume that our attempt to do something is going okay...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":165955,"byte_end":166035,"line_start":846,"line_end":846,"column_start":5,"column_end":85}},{"value":"/ let span = info_span!(\"doing_something\", is_okay = true);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166040,"byte_end":166101,"line_start":847,"line_end":847,"column_start":5,"column_end":66}},{"value":"/ let _e = span.enter();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166106,"byte_end":166132,"line_start":848,"line_end":848,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166137,"byte_end":166140,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ match do_something() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166145,"byte_end":166171,"line_start":850,"line_end":850,"column_start":5,"column_end":31}},{"value":"/     Ok(something) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166176,"byte_end":166202,"line_start":851,"line_end":851,"column_start":5,"column_end":31}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166207,"byte_end":166225,"line_start":852,"line_end":852,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166230,"byte_end":166239,"line_start":853,"line_end":853,"column_start":5,"column_end":14}},{"value":"/     Err(_) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166244,"byte_end":166263,"line_start":854,"line_end":854,"column_start":5,"column_end":24}},{"value":"/         // Things are no longer okay!","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166268,"byte_end":166309,"line_start":855,"line_end":855,"column_start":5,"column_end":46}},{"value":"/         span.record(\"is_okay\", &false);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166314,"byte_end":166357,"line_start":856,"line_end":856,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166362,"byte_end":166371,"line_start":857,"line_end":857,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166376,"byte_end":166381,"line_start":858,"line_end":858,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166386,"byte_end":166393,"line_start":859,"line_end":859,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166398,"byte_end":166401,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166406,"byte_end":166435,"line_start":861,"line_end":861,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166440,"byte_end":166531,"line_start":862,"line_end":862,"column_start":5,"column_end":94}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166536,"byte_end":166546,"line_start":863,"line_end":863,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166551,"byte_end":166610,"line_start":864,"line_end":864,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166615,"byte_end":166680,"line_start":865,"line_end":865,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: The fields associated with a span are part of its","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166685,"byte_end":166761,"line_start":866,"line_end":866,"column_start":5,"column_end":81}},{"value":"/ <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166766,"byte_end":166830,"line_start":867,"line_end":867,"column_start":5,"column_end":69}},{"value":"/ The <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>. describing a particular","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166835,"byte_end":166927,"line_start":868,"line_end":868,"column_start":5,"column_end":97}},{"value":"/ span is constructed statically when the span is created and cannot be extended later to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":166932,"byte_end":167023,"line_start":869,"line_end":869,"column_start":5,"column_end":96}},{"value":"/ add new fields. Therefore, you cannot record a value for a field that was not specified","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167028,"byte_end":167119,"line_start":870,"line_end":870,"column_start":5,"column_end":96}},{"value":"/ when the span was created:</pre></div>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167124,"byte_end":167166,"line_start":871,"line_end":871,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167171,"byte_end":167174,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167179,"byte_end":167186,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167191,"byte_end":167228,"line_start":874,"line_end":874,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167233,"byte_end":167236,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167241,"byte_end":167324,"line_start":876,"line_end":876,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167329,"byte_end":167363,"line_start":877,"line_end":877,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167368,"byte_end":167456,"line_start":878,"line_end":878,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167461,"byte_end":167464,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167469,"byte_end":167479,"line_start":880,"line_end":880,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167484,"byte_end":167487,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ // Now, you try to record a value for a new field, `new_field`, which was not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167492,"byte_end":167573,"line_start":882,"line_end":882,"column_start":5,"column_end":86}},{"value":"/ // declared as `Empty` or populated when you created `span`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167578,"byte_end":167642,"line_start":883,"line_end":883,"column_start":5,"column_end":69}},{"value":"/ // You won't get any error, but the assignment will have no effect!","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167647,"byte_end":167718,"line_start":884,"line_end":884,"column_start":5,"column_end":76}},{"value":"/ span.record(\"new_field\", &\"interesting_value_you_really_need\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167723,"byte_end":167790,"line_start":885,"line_end":885,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167795,"byte_end":167798,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ // Instead, all fields that may be recorded after span creation should be declared up front,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167803,"byte_end":167899,"line_start":887,"line_end":887,"column_start":5,"column_end":101}},{"value":"/ // using field::Empty when a value is not known, as we did for `parting`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167904,"byte_end":167981,"line_start":888,"line_end":888,"column_start":5,"column_end":82}},{"value":"/ // This `record` call will indeed replace field::Empty with \"you will be remembered\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":167986,"byte_end":168075,"line_start":889,"line_end":889,"column_start":5,"column_end":94}},{"value":"/ span.record(\"parting\", &\"you will be remembered\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":168080,"byte_end":168134,"line_start":890,"line_end":890,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":168139,"byte_end":168146,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":168151,"byte_end":168154,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ [`field::Empty`]: ../field/struct.Empty.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":168159,"byte_end":168207,"line_start":893,"line_end":893,"column_start":5,"column_end":53}},{"value":"/ [`Metadata`]: ../struct.Metadata.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":168212,"byte_end":168253,"line_start":894,"line_end":894,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":168802,"byte_end":168812,"line_start":914,"line_end":914,"column_start":12,"column_end":22},"name":"record_all","qualname":"<Span>::record_all","value":"pub fn record_all(&Self, &field::ValueSet) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in the provided `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Records all the fields in the provided `ValueSet`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":168736,"byte_end":168790,"line_start":913,"line_end":913,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169630,"byte_end":169641,"line_start":941,"line_end":941,"column_start":12,"column_end":23},"name":"is_disabled","qualname":"<Span>::is_disabled","value":"pub fn is_disabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was disabled by the subscriber and does not\n exist.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was disabled by the subscriber and does not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169431,"byte_end":169506,"line_start":934,"line_end":934,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169511,"byte_end":169521,"line_start":935,"line_end":935,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169526,"byte_end":169529,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ See also [`is_none`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169534,"byte_end":169559,"line_start":937,"line_end":937,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169564,"byte_end":169567,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ [`is_none`]: #method.is_none","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169572,"byte_end":169604,"line_start":939,"line_end":939,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169609,"byte_end":169618,"line_start":940,"line_end":940,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170199,"byte_end":170206,"line_start":956,"line_end":956,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Span>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was constructed by [`Span::none`] and is\n empty.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was constructed by [`Span::none`] and is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169699,"byte_end":169771,"line_start":945,"line_end":945,"column_start":5,"column_end":77}},{"value":"/ empty.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169776,"byte_end":169786,"line_start":946,"line_end":946,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169791,"byte_end":169794,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If `is_none` returns `true` for a given span, then [`is_disabled`] will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169799,"byte_end":169874,"line_start":948,"line_end":948,"column_start":5,"column_end":80}},{"value":"/ also return `true`. However, when a span is disabled by the subscriber","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169879,"byte_end":169953,"line_start":949,"line_end":949,"column_start":5,"column_end":79}},{"value":"/ rather than constructed by `Span::none`, this method will return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":169958,"byte_end":170026,"line_start":950,"line_end":950,"column_start":5,"column_end":73}},{"value":"/ `false`, while `is_disabled` will return `true`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170031,"byte_end":170083,"line_start":951,"line_end":951,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170088,"byte_end":170091,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ [`Span::none`]: #method.none","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170096,"byte_end":170128,"line_start":953,"line_end":953,"column_start":5,"column_end":37}},{"value":"/ [`is_disabled`]: #method.is_disabled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170133,"byte_end":170173,"line_start":954,"line_end":954,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170178,"byte_end":170187,"line_start":955,"line_end":955,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172232,"byte_end":172244,"line_start":1007,"line_end":1007,"column_start":12,"column_end":24},"name":"follows_from","qualname":"<Span>::follows_from","value":"pub fn follows_from<impl Into<Option<Id>>: Into<Option<Id>>>(&Self,\n                                                             impl Into<Option<Id>>)\n-> &Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the span with the given ID has an indirect causal\n relationship with this span.","sig":null,"attributes":[{"value":"/ Indicates that the span with the given ID has an indirect causal","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170285,"byte_end":170353,"line_start":960,"line_end":960,"column_start":5,"column_end":73}},{"value":"/ relationship with this span.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170358,"byte_end":170390,"line_start":961,"line_end":961,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170395,"byte_end":170398,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170403,"byte_end":170479,"line_start":963,"line_end":963,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170484,"byte_end":170558,"line_start":964,"line_end":964,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170563,"byte_end":170634,"line_start":965,"line_end":965,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170639,"byte_end":170713,"line_start":966,"line_end":966,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170718,"byte_end":170784,"line_start":967,"line_end":967,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170789,"byte_end":170863,"line_start":968,"line_end":968,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170868,"byte_end":170940,"line_start":969,"line_end":969,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":170945,"byte_end":171014,"line_start":970,"line_end":970,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171019,"byte_end":171022,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ If this span is disabled, or the resulting follows-from relationship","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171027,"byte_end":171099,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ would be invalid, this function will do nothing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171104,"byte_end":171156,"line_start":973,"line_end":973,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171161,"byte_end":171164,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171169,"byte_end":171183,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171188,"byte_end":171191,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span`:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171196,"byte_end":171252,"line_start":977,"line_end":977,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171257,"byte_end":171264,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171269,"byte_end":171312,"line_start":979,"line_end":979,"column_start":5,"column_end":48}},{"value":"/ let span1 = span!(Level::INFO, \"span_1\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171317,"byte_end":171362,"line_start":980,"line_end":980,"column_start":5,"column_end":50}},{"value":"/ let span2 = span!(Level::DEBUG, \"span_2\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171367,"byte_end":171413,"line_start":981,"line_end":981,"column_start":5,"column_end":51}},{"value":"/ span2.follows_from(span1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171418,"byte_end":171448,"line_start":982,"line_end":982,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171453,"byte_end":171460,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171465,"byte_end":171468,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with the current span:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171473,"byte_end":171537,"line_start":985,"line_end":985,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171542,"byte_end":171549,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171554,"byte_end":171597,"line_start":987,"line_end":987,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171602,"byte_end":171646,"line_start":988,"line_end":988,"column_start":5,"column_end":49}},{"value":"/ span.follows_from(Span::current());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171651,"byte_end":171690,"line_start":989,"line_end":989,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171695,"byte_end":171702,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171707,"byte_end":171710,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span` reference:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171715,"byte_end":171781,"line_start":992,"line_end":992,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171786,"byte_end":171793,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171798,"byte_end":171841,"line_start":994,"line_end":994,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171846,"byte_end":171890,"line_start":995,"line_end":995,"column_start":5,"column_end":49}},{"value":"/ let curr = Span::current();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171895,"byte_end":171926,"line_start":996,"line_end":996,"column_start":5,"column_end":36}},{"value":"/ span.follows_from(&curr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171931,"byte_end":171960,"line_start":997,"line_end":997,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171965,"byte_end":171972,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171977,"byte_end":171980,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with an `Id`:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":171985,"byte_end":172040,"line_start":1000,"line_end":1000,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172045,"byte_end":172052,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172057,"byte_end":172100,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172105,"byte_end":172149,"line_start":1003,"line_end":1003,"column_start":5,"column_end":49}},{"value":"/ let id = span.id();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172154,"byte_end":172177,"line_start":1004,"line_end":1004,"column_start":5,"column_end":28}},{"value":"/ span.follows_from(id);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172182,"byte_end":172208,"line_start":1005,"line_end":1005,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172213,"byte_end":172220,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172534,"byte_end":172536,"line_start":1017,"line_end":1017,"column_start":12,"column_end":14},"name":"id","qualname":"<Span>::id","value":"pub fn id(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Id`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Id`, if it is enabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172475,"byte_end":172522,"line_start":1016,"line_end":1016,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172679,"byte_end":172687,"line_start":1022,"line_end":1022,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Span>::metadata","value":"pub fn metadata(&Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Metadata`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Metadata`, if it is enabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":172614,"byte_end":172667,"line_start":1021,"line_end":1021,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":174532,"byte_end":174547,"line_start":1065,"line_end":1065,"column_start":12,"column_end":27},"name":"with_subscriber","qualname":"<Span>::with_subscriber","value":"pub fn with_subscriber<T,\n                       impl FnOnce((&Id, &Dispatch)) -> T: FnOnce((&Id,\n                                                                   &Dispatch))\n                       -> T>(&Self, impl FnOnce((&Id, &Dispatch)) -> T)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes a function with a reference to this span's ID and subscriber.","sig":null,"attributes":[{"value":"/ Invokes a function with a reference to this span's ID and subscriber.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":174236,"byte_end":174309,"line_start":1060,"line_end":1060,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":174314,"byte_end":174317,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ if this span is enabled, the provided function is called, and the result is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":174322,"byte_end":174411,"line_start":1062,"line_end":1062,"column_start":5,"column_end":94}},{"value":"/ If the span is disabled, the function is not called, and this method returns `None`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":174416,"byte_end":174503,"line_start":1063,"line_end":1063,"column_start":5,"column_end":92}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":174508,"byte_end":174520,"line_start":1064,"line_end":1064,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215}],"decl_id":null,"docs":" Collects and records trace data.\n","sig":null,"attributes":[{"value":"/ Collects and records trace data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182294,"byte_end":182330,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183030,"byte_end":183042,"line_start":20,"line_end":20,"column_start":8,"column_end":20},"name":"with_default","qualname":"::subscriber::with_default","value":"pub fn with_default<T, S, impl FnOnce() -> T: FnOnce() ->\n                    T>(S, impl FnOnce() -> T) -> T where S: Subscriber +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this subscriber as the default for the duration of a closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182489,"byte_end":182559,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182560,"byte_end":182563,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182564,"byte_end":182630,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182631,"byte_end":182705,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182706,"byte_end":182778,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182779,"byte_end":182809,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182810,"byte_end":182813,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: ../span/struct.Span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182814,"byte_end":182852,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182853,"byte_end":182908,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: :../event/struct.Event.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182909,"byte_end":182951,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":182952,"byte_end":182975,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183835,"byte_end":183853,"line_start":39,"line_end":39,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::subscriber::set_global_default","value":"pub fn set_global_default<S>(S) -> Result<(), SetGlobalDefaultError> where\nS: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this subscriber as the global default for the duration of the entire program.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183220,"byte_end":183306,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/ Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183307,"byte_end":183416,"line_start":28,"line_end":28,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183417,"byte_end":183420,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183421,"byte_end":183503,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ Returns whether the initialization was successful.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183504,"byte_end":183558,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183559,"byte_end":183562,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note: Libraries should *NOT* call `set_global_default()`! That will cause conflicts when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183563,"byte_end":183655,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ executables try to set them later.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183656,"byte_end":183694,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183695,"byte_end":183698,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183699,"byte_end":183729,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183730,"byte_end":183785,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":183786,"byte_end":183827,"line_start":38,"line_end":38,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184742,"byte_end":184753,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"set_default","qualname":"::subscriber::set_default","value":"pub fn set_default<S>(S) -> DefaultGuard where S: Subscriber + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the subscriber as the default for the duration of the lifetime of the\n returned [`DefaultGuard`]","sig":null,"attributes":[{"value":"/ Sets the subscriber as the default for the duration of the lifetime of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184039,"byte_end":184117,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ returned [`DefaultGuard`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184118,"byte_end":184147,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184148,"byte_end":184151,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184152,"byte_end":184218,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184219,"byte_end":184293,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184294,"byte_end":184366,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184367,"byte_end":184397,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184398,"byte_end":184401,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: ../span/struct.Span.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184402,"byte_end":184440,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184441,"byte_end":184496,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: :../event/struct.Event.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184497,"byte_end":184539,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ [`DefaultGuard`]: ../dispatcher/struct.DefaultGuard.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184540,"byte_end":184600,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184601,"byte_end":184624,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the subscriber.\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\subscriber.rs","byte_start":184672,"byte_end":184734,"line_start":60,"line_end":60,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37651,"byte_end":37666,"line_start":921,"line_end":921,"column_start":9,"column_end":24},"name":"__macro_support","qualname":"::__macro_support","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":341},{"krate":0,"index":345},{"krate":0,"index":225},{"krate":0,"index":233}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38348,"byte_end":38361,"line_start":936,"line_end":936,"column_start":16,"column_end":29},"name":"MacroCallsite","qualname":"::__macro_support::MacroCallsite","value":"MacroCallsite {  }","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"decl_id":null,"docs":" Callsite implementation used by macro-generated code.","sig":null,"attributes":[{"value":"/ Callsite implementation used by macro-generated code.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37852,"byte_end":37909,"line_start":927,"line_end":927,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37914,"byte_end":37917,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37922,"byte_end":37970,"line_start":929,"line_end":929,"column_start":5,"column_end":53}},{"value":"/ This type, and all code contained in the `__macro_support` module, is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37975,"byte_end":38048,"line_start":930,"line_end":930,"column_start":5,"column_end":78}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38053,"byte_end":38128,"line_start":931,"line_end":931,"column_start":5,"column_end":80}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38133,"byte_end":38209,"line_start":932,"line_end":932,"column_start":5,"column_end":81}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38214,"byte_end":38286,"line_start":933,"line_end":933,"column_start":5,"column_end":77}},{"value":"/ without warning.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38291,"byte_end":38311,"line_start":934,"line_end":934,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39023,"byte_end":39026,"line_start":951,"line_end":951,"column_start":22,"column_end":25},"name":"new","qualname":"<MacroCallsite>::new","value":"pub const fn new(&'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `MacroCallsite` with the specified `Metadata`.","sig":null,"attributes":[{"value":"/ Returns a new `MacroCallsite` with the specified `Metadata`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38505,"byte_end":38569,"line_start":943,"line_end":943,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38578,"byte_end":38581,"line_start":944,"line_end":944,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38590,"byte_end":38638,"line_start":945,"line_end":945,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38647,"byte_end":38722,"line_start":946,"line_end":946,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38731,"byte_end":38806,"line_start":947,"line_end":947,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38815,"byte_end":38891,"line_start":948,"line_end":948,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38900,"byte_end":38972,"line_start":949,"line_end":949,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38981,"byte_end":39001,"line_start":950,"line_end":950,"column_start":9,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39961,"byte_end":39969,"line_start":972,"line_end":972,"column_start":16,"column_end":24},"name":"register","qualname":"<MacroCallsite>::register","value":"pub fn register(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers this callsite with the global callsite registry.","sig":null,"attributes":[{"value":"/ Registers this callsite with the global callsite registry.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39245,"byte_end":39307,"line_start":959,"line_end":959,"column_start":9,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39316,"byte_end":39319,"line_start":960,"line_end":960,"column_start":9,"column_end":12}},{"value":"/ If the callsite is already registered, this does nothing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39328,"byte_end":39389,"line_start":961,"line_end":961,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39398,"byte_end":39401,"line_start":962,"line_end":962,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39410,"byte_end":39458,"line_start":963,"line_end":963,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39467,"byte_end":39542,"line_start":964,"line_end":964,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39551,"byte_end":39626,"line_start":965,"line_end":965,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39635,"byte_end":39711,"line_start":966,"line_end":966,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39720,"byte_end":39792,"line_start":967,"line_end":967,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39801,"byte_end":39821,"line_start":968,"line_end":968,"column_start":9,"column_end":29}},{"value":"inline(never)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39830,"byte_end":39846,"line_start":969,"line_end":969,"column_start":9,"column_end":25}},{"value":"cold","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":39938,"byte_end":39945,"line_start":971,"line_end":971,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40900,"byte_end":40908,"line_start":992,"line_end":992,"column_start":16,"column_end":24},"name":"interest","qualname":"<MacroCallsite>::interest","value":"pub fn interest(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Returns the callsite's cached Interest, or registers it for the\n first time if it has not yet been registered.","sig":null,"attributes":[{"value":"/ Returns the callsite's cached Interest, or registers it for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40309,"byte_end":40376,"line_start":982,"line_end":982,"column_start":9,"column_end":76}},{"value":"/ first time if it has not yet been registered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40385,"byte_end":40434,"line_start":983,"line_end":983,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40443,"byte_end":40446,"line_start":984,"line_end":984,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40455,"byte_end":40503,"line_start":985,"line_end":985,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40512,"byte_end":40587,"line_start":986,"line_end":986,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40596,"byte_end":40671,"line_start":987,"line_end":987,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40680,"byte_end":40756,"line_start":988,"line_end":988,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40765,"byte_end":40837,"line_start":989,"line_end":989,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40846,"byte_end":40866,"line_start":990,"line_end":990,"column_start":9,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":40875,"byte_end":40884,"line_start":991,"line_end":991,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":41199,"byte_end":41209,"line_start":1001,"line_end":1001,"column_start":16,"column_end":26},"name":"is_enabled","qualname":"<MacroCallsite>::is_enabled","value":"pub fn is_enabled(&Self, Interest) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":41612,"byte_end":41625,"line_start":1014,"line_end":1014,"column_start":16,"column_end":29},"name":"disabled_span","qualname":"<MacroCallsite>::disabled_span","value":"pub fn disabled_span(&Self) -> crate::Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":41550,"byte_end":41559,"line_start":1012,"line_end":1012,"column_start":9,"column_end":18}},{"value":"cfg(not(feature = \"log\"))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":41568,"byte_end":41596,"line_start":1013,"line_end":1013,"column_start":9,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":42180,"byte_end":42186,"line_start":1037,"line_end":1037,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":123254,"byte_end":123259,"line_start":31,"line_end":31,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":123915,"byte_end":123920,"line_start":60,"line_end":60,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128560,"byte_end":128572,"line_start":145,"line_end":145,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128830,"byte_end":128831,"line_start":155,"line_end":155,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128844,"byte_end":128856,"line_start":157,"line_end":157,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150106,"byte_end":150110,"line_start":393,"line_end":393,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":174746,"byte_end":174750,"line_start":1072,"line_end":1072,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":175029,"byte_end":175033,"line_start":1083,"line_end":1083,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":175146,"byte_end":175150,"line_start":1089,"line_end":1089,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":176361,"byte_end":176365,"line_start":1134,"line_end":1134,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":176468,"byte_end":176472,"line_start":1140,"line_end":1140,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":177014,"byte_end":177019,"line_start":1164,"line_end":1164,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":178437,"byte_end":178442,"line_start":1201,"line_end":1201,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":178537,"byte_end":178542,"line_start":1207,"line_end":1207,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":178645,"byte_end":178650,"line_start":1213,"line_end":1213,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":178868,"byte_end":178875,"line_start":1224,"line_end":1224,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38481,"byte_end":38494,"line_start":942,"line_end":942,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":41721,"byte_end":41734,"line_start":1019,"line_end":1019,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37454,"byte_end":37464,"line_start":911,"line_end":911,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37474,"byte_end":37479,"line_start":912,"line_end":912,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":53}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37535,"byte_end":37545,"line_start":914,"line_end":914,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":69}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37555,"byte_end":37568,"line_start":915,"line_end":915,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":105}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37578,"byte_end":37582,"line_start":916,"line_end":916,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":110}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":37615,"byte_end":37625,"line_start":918,"line_end":918,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":204}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":122930,"byte_end":122936,"line_start":21,"line_end":21,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":237},"to":{"krate":0,"index":56}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":123254,"byte_end":123259,"line_start":31,"line_end":31,"column_start":18,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":14,"index":632},"to":{"krate":0,"index":56}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\field.rs","byte_start":123915,"byte_end":123920,"line_start":60,"line_end":60,"column_start":32,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":14,"index":632},"to":{"krate":0,"index":237}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":124412,"byte_end":124417,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2148},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":126459,"byte_end":126464,"line_start":83,"line_end":83,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2148},"to":{"krate":0,"index":85}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128560,"byte_end":128572,"line_start":145,"line_end":145,"column_start":28,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128830,"byte_end":128831,"line_start":155,"line_end":155,"column_start":31,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":95},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\instrument.rs","byte_start":128844,"byte_end":128856,"line_start":157,"line_end":157,"column_start":9,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":147800,"byte_end":147806,"line_start":328,"line_end":328,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":237},"to":{"krate":0,"index":127}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":150106,"byte_end":150110,"line_start":393,"line_end":393,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":174746,"byte_end":174750,"line_start":1072,"line_end":1072,"column_start":25,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":175029,"byte_end":175033,"line_start":1083,"line_end":1083,"column_start":15,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":7220}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":175146,"byte_end":175150,"line_start":1089,"line_end":1089,"column_start":21,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":176361,"byte_end":176365,"line_start":1134,"line_end":1134,"column_start":27,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":2056}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":176468,"byte_end":176472,"line_start":1140,"line_end":1140,"column_start":15,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":177014,"byte_end":177019,"line_start":1164,"line_end":1164,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":178437,"byte_end":178442,"line_start":1201,"line_end":1201,"column_start":25,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":178537,"byte_end":178542,"line_start":1207,"line_end":1207,"column_start":15,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":7220}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":178645,"byte_end":178650,"line_start":1213,"line_end":1213,"column_start":16,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\span.rs","byte_start":178868,"byte_end":178875,"line_start":1224,"line_end":1224,"column_start":19,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":38481,"byte_end":38494,"line_start":942,"line_end":942,"column_start":10,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-0.1.24\\src\\lib.rs","byte_start":41721,"byte_end":41734,"line_start":1019,"line_end":1019,"column_start":23,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":341},"to":{"krate":14,"index":32}}]}