{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0","program":"C:\\Users\\gabri\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"rt\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","-C","metadata=df513f49eed7a2f1","-C","extra-filename=-df513f49eed7a2f1","--out-dir","c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libbytes-cb0dd1c132e94697.rmeta","--extern","memchr=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libmemchr-938e801aa1dd5626.rmeta","--extern","mio=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libmio-5e7c4f57174db78a.rmeta","--extern","pin_project_lite=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libpin_project_lite-012c5347fd28e0f8.rmeta","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","C:\\Users\\gabri\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libtokio-df513f49eed7a2f1.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[11608784888611811203,15944317991962230215]},"crate_root":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src","external_crates":[{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7607668859873757532,1781785219377684392]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[13611023294341355437,10043691270023661894]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[101447838822452173,8618322888261503379]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13475896778791491548,12248248351844131012]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4016777027723060150,6575819384461205726]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2651865965395105447,1277636433429132291]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6625204696738865430,3777009149181587391]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2466389407038385562,16922006968362962921]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7691805749014262489,8411562063720114408]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10977525908131958733,15669095950081001892]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14600121526287085947,8078689161172856885]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[15875267039736385556,9614836444850963760]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":13,"id":{"name":"mio","disambiguator":[17243944357694378341,6265275078517739596]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":14,"id":{"name":"log","disambiguator":[5529339310903800427,17954587109032602403]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":15,"id":{"name":"cfg_if","disambiguator":[15246054710812832144,12522391214617896906]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":16,"id":{"name":"ntapi","disambiguator":[1283422577191309211,12728241893729889217]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":17,"id":{"name":"winapi","disambiguator":[5050424859186781691,14062163605860858543]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":18,"id":{"name":"miow","disambiguator":[13887693994831000590,13273167335643837072]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":19,"id":{"name":"socket2","disambiguator":[1973751857736218854,17514031143153025133]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[6153343985636253266,15041629645710339115]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","num":21,"id":{"name":"bytes","disambiguator":[9780114067736916964,9036698811042131691]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","num":22,"id":{"name":"memchr","disambiguator":[6265665653953799004,9085480063319214157]}}],"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":9666},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31612,"byte_end":31618,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":34794},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31638,"byte_end":31641,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":37287},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31662,"byte_end":31666,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40521,"byte_end":40533,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40578,"byte_end":40587,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40632,"byte_end":40641,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40688,"byte_end":40698,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40739,"byte_end":40746,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":1,"index":2785},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40916,"byte_end":40921,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":1,"index":7143},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40923,"byte_end":40932,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":1,"index":2783},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40934,"byte_end":40940,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":1,"index":7216},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40942,"byte_end":40950,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41044,"byte_end":41052,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41054,"byte_end":41059,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41653,"byte_end":41658,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41660,"byte_end":41668,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41670,"byte_end":41679,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41761,"byte_end":41765,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41767,"byte_end":41775,"line_start":249,"line_end":249,"column_start":15,"column_end":23},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41777,"byte_end":41783,"line_start":249,"line_end":249,"column_start":25,"column_end":31},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41785,"byte_end":41790,"line_start":249,"line_end":249,"column_start":33,"column_end":38},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2341},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41792,"byte_end":41798,"line_start":249,"line_end":249,"column_start":40,"column_end":46},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41800,"byte_end":41804,"line_start":249,"line_end":249,"column_start":48,"column_end":52},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2026},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41806,"byte_end":41821,"line_start":249,"line_end":249,"column_start":54,"column_end":69},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41823,"byte_end":41835,"line_start":249,"line_end":249,"column_start":71,"column_end":83},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41837,"byte_end":41849,"line_start":249,"line_end":249,"column_start":85,"column_end":97},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41851,"byte_end":41864,"line_start":249,"line_end":249,"column_start":99,"column_end":112},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":9390},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41874,"byte_end":41883,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":9359},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41885,"byte_end":41894,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":9313},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41896,"byte_end":41905,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2177},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41907,"byte_end":41919,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41921,"byte_end":41926,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":9172},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41928,"byte_end":41933,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41935,"byte_end":41941,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41943,"byte_end":41947,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":7809},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41949,"byte_end":41954,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":7769},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41956,"byte_end":41960,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79785,"byte_end":79798,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":281}},{"kind":"Use","ref_id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79858,"byte_end":79869,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":281}},{"kind":"Use","ref_id":{"krate":0,"index":2961},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10197557,"byte_end":10197565,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2558}},{"kind":"Use","ref_id":{"krate":0,"index":2968},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10197567,"byte_end":10197576,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2558}},{"kind":"Use","ref_id":{"krate":0,"index":2975},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10197619,"byte_end":10197632,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2558}},{"kind":"Use","ref_id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10197634,"byte_end":10197648,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2558}},{"kind":"Use","ref_id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10197650,"byte_end":10197662,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2558}},{"kind":"Use","ref_id":{"krate":0,"index":2985},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10197650,"byte_end":10197662,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2722}},{"kind":"Use","ref_id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79916,"byte_end":79927,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":281}},{"kind":"Use","ref_id":{"krate":0,"index":2959},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79954,"byte_end":79963,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":281}},{"kind":"Use","ref_id":{"krate":0,"index":2991},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79990,"byte_end":79999,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":281}},{"kind":"Use","ref_id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":80032,"byte_end":80041,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":281}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334787,"byte_end":10334794,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":3081}},{"kind":"Use","ref_id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334919,"byte_end":10334929,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":3081}},{"kind":"Use","ref_id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334931,"byte_end":10334937,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":3081}},{"kind":"Use","ref_id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492045,"byte_end":10492052,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5358},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492054,"byte_end":10492071,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":4430},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535953,"byte_end":10535960,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":4333}},{"kind":"Use","ref_id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535962,"byte_end":10535968,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":4333}},{"kind":"Use","ref_id":{"krate":0,"index":4427},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535970,"byte_end":10535978,"line_start":76,"line_end":76,"column_start":42,"column_end":50},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":4333}},{"kind":"Use","ref_id":{"krate":0,"index":4420},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535980,"byte_end":10535986,"line_start":76,"line_end":76,"column_start":52,"column_end":58},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":4333}},{"kind":"Use","ref_id":{"krate":0,"index":4688},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10536064,"byte_end":10536081,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":4333}},{"kind":"Use","ref_id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10536083,"byte_end":10536100,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":4333}},{"kind":"Use","ref_id":{"krate":0,"index":4673},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10536102,"byte_end":10536117,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":4333}},{"kind":"Use","ref_id":{"krate":0,"index":4748},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492153,"byte_end":10492158,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":4752},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492160,"byte_end":10492170,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5441},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492172,"byte_end":10492184,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5442},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492172,"byte_end":10492184,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":4831}},{"kind":"Use","ref_id":{"krate":0,"index":4756},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492186,"byte_end":10492201,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5446},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492252,"byte_end":10492258,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5539},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492349,"byte_end":10492361,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5529},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492363,"byte_end":10492378,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5544},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492425,"byte_end":10492434,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5548},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492436,"byte_end":10492451,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5555},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492453,"byte_end":10492473,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492514,"byte_end":10492520,"line_start":453,"line_end":453,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492522,"byte_end":10492537,"line_start":453,"line_end":453,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":5177},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492539,"byte_end":10492555,"line_start":453,"line_end":453,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":4156}},{"kind":"Use","ref_id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134187,"byte_end":134196,"line_start":219,"line_end":219,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134198,"byte_end":134208,"line_start":219,"line_end":219,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":5773},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134252,"byte_end":134266,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134303,"byte_end":134308,"line_start":225,"line_end":225,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134429,"byte_end":134438,"line_start":232,"line_end":232,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":5795},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134476,"byte_end":134487,"line_start":235,"line_end":235,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":5786},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134489,"byte_end":134497,"line_start":235,"line_end":235,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":5725},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134545,"byte_end":134553,"line_start":238,"line_end":238,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14899,"byte_end":14904,"line_start":398,"line_end":398,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5993},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792856,"byte_end":10792861,"line_start":99,"line_end":99,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":0,"index":5992},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792863,"byte_end":10792874,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":0,"index":6604},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792876,"byte_end":10792881,"line_start":99,"line_end":99,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":0,"index":6306},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792937,"byte_end":10792944,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792980,"byte_end":10792988,"line_start":107,"line_end":107,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792990,"byte_end":10793001,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":0,"index":6325},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10793003,"byte_end":10793011,"line_start":107,"line_end":107,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":0,"index":6168},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10793061,"byte_end":10793068,"line_start":111,"line_end":111,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":0,"index":6170},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10793070,"byte_end":10793080,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":0,"index":6566},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10793082,"byte_end":10793089,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":5811}},{"kind":"Use","ref_id":{"krate":2,"index":37165},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10793202,"byte_end":10793210,"line_start":119,"line_end":119,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":5811}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":79},{"krate":0,"index":104},{"krate":0,"index":281},{"krate":0,"index":349},{"krate":0,"index":504},{"krate":0,"index":595},{"krate":0,"index":3081},{"krate":0,"index":596},{"krate":0,"index":4156},{"krate":0,"index":615},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":616},{"krate":0,"index":674}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":55,"byte_end":167,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":168,"byte_end":274,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":483,"byte_end":566,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":567,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":571,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":652,"byte_end":724,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":725,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":762,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":766,"byte_end":833,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":834,"byte_end":914,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":915,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":939,"byte_end":1026,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1027,"byte_end":1100,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1101,"byte_end":1179,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1180,"byte_end":1260,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1261,"byte_end":1311,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1312,"byte_end":1315,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1316,"byte_end":1372,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1373,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1377,"byte_end":1409,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1410,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1458,"byte_end":1484,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1485,"byte_end":1506,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1507,"byte_end":1526,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1527,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1557,"byte_end":1584,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1585,"byte_end":1604,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1605,"byte_end":1634,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1635,"byte_end":1681,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1682,"byte_end":1685,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1686,"byte_end":1707,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1708,"byte_end":1711,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1712,"byte_end":1791,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1792,"byte_end":1865,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1866,"byte_end":1945,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1946,"byte_end":1961,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1962,"byte_end":1965,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1966,"byte_end":2038,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2039,"byte_end":2076,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2077,"byte_end":2080,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2081,"byte_end":2092,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2093,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2144,"byte_end":2151,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2152,"byte_end":2155,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2156,"byte_end":2186,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2187,"byte_end":2190,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2191,"byte_end":2272,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2273,"byte_end":2358,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2359,"byte_end":2443,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2444,"byte_end":2474,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2475,"byte_end":2478,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2479,"byte_end":2495,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2496,"byte_end":2499,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2500,"byte_end":2566,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2567,"byte_end":2570,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2571,"byte_end":2582,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2583,"byte_end":2633,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2634,"byte_end":2641,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2642,"byte_end":2645,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2646,"byte_end":2673,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2674,"byte_end":2677,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2678,"byte_end":2757,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2758,"byte_end":2840,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2841,"byte_end":2922,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2923,"byte_end":2958,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2959,"byte_end":2962,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2963,"byte_end":2979,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2980,"byte_end":2983,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2984,"byte_end":3066,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3067,"byte_end":3117,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3118,"byte_end":3121,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3122,"byte_end":3133,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3134,"byte_end":3189,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3190,"byte_end":3197,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3198,"byte_end":3201,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3202,"byte_end":3227,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3228,"byte_end":3231,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3232,"byte_end":3308,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3309,"byte_end":3392,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3393,"byte_end":3436,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3437,"byte_end":3440,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3441,"byte_end":3520,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3521,"byte_end":3604,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3605,"byte_end":3683,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3684,"byte_end":3703,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3704,"byte_end":3707,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3708,"byte_end":3781,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3782,"byte_end":3797,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3798,"byte_end":3801,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3802,"byte_end":3845,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3846,"byte_end":3878,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3879,"byte_end":3914,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3915,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3959,"byte_end":4012,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4013,"byte_end":4016,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4017,"byte_end":4095,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4096,"byte_end":4152,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4153,"byte_end":4156,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4157,"byte_end":4230,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4231,"byte_end":4251,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4252,"byte_end":4327,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4328,"byte_end":4340,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4341,"byte_end":4421,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4422,"byte_end":4452,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4453,"byte_end":4456,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4457,"byte_end":4533,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4534,"byte_end":4546,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4547,"byte_end":4550,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4551,"byte_end":4583,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4584,"byte_end":4617,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4618,"byte_end":4655,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4656,"byte_end":4693,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4694,"byte_end":4725,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4726,"byte_end":4759,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4760,"byte_end":4763,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4764,"byte_end":4835,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4836,"byte_end":4916,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4917,"byte_end":5005,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5006,"byte_end":5030,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5031,"byte_end":5034,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5035,"byte_end":5110,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5111,"byte_end":5114,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5115,"byte_end":5147,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5148,"byte_end":5181,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5182,"byte_end":5221,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5222,"byte_end":5259,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5260,"byte_end":5263,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5264,"byte_end":5342,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5343,"byte_end":5427,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5428,"byte_end":5512,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5513,"byte_end":5606,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5607,"byte_end":5698,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5699,"byte_end":5738,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5739,"byte_end":5742,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5743,"byte_end":5821,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5822,"byte_end":5895,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5896,"byte_end":5968,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5969,"byte_end":6047,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6048,"byte_end":6118,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6119,"byte_end":6122,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6123,"byte_end":6149,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6150,"byte_end":6188,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6189,"byte_end":6229,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6230,"byte_end":6270,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6271,"byte_end":6315,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6316,"byte_end":6376,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6377,"byte_end":6432,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6433,"byte_end":6436,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6437,"byte_end":6477,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6478,"byte_end":6481,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6482,"byte_end":6561,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6562,"byte_end":6639,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6640,"byte_end":6720,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6721,"byte_end":6795,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6796,"byte_end":6875,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6876,"byte_end":6953,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6954,"byte_end":7027,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7028,"byte_end":7104,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7105,"byte_end":7186,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7187,"byte_end":7257,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7258,"byte_end":7332,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7333,"byte_end":7409,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7410,"byte_end":7487,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7488,"byte_end":7491,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7492,"byte_end":7569,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7570,"byte_end":7573,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7574,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7615,"byte_end":7668,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7669,"byte_end":7740,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7741,"byte_end":7744,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7745,"byte_end":7752,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7753,"byte_end":7771,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7772,"byte_end":7793,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7794,"byte_end":7838,"line_start":192,"line_end":192,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7839,"byte_end":7842,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7843,"byte_end":7903,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7904,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7957,"byte_end":7992,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7993,"byte_end":8004,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8005,"byte_end":8008,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8009,"byte_end":8064,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8065,"byte_end":8140,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8141,"byte_end":8158,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8159,"byte_end":8196,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8197,"byte_end":8202,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8203,"byte_end":8210,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8211,"byte_end":8214,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8215,"byte_end":8293,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8294,"byte_end":8370,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8371,"byte_end":8447,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8448,"byte_end":8472,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8473,"byte_end":8476,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8477,"byte_end":8511,"line_start":211,"line_end":211,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8512,"byte_end":8549,"line_start":212,"line_end":212,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8550,"byte_end":8553,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8554,"byte_end":8576,"line_start":214,"line_end":214,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8577,"byte_end":8580,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8581,"byte_end":8660,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8661,"byte_end":8708,"line_start":217,"line_end":217,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8709,"byte_end":8712,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8713,"byte_end":8792,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8793,"byte_end":8873,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8874,"byte_end":8954,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8955,"byte_end":9026,"line_start":222,"line_end":222,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9027,"byte_end":9058,"line_start":223,"line_end":223,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9059,"byte_end":9062,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9063,"byte_end":9143,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9144,"byte_end":9204,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9205,"byte_end":9208,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9209,"byte_end":9288,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9289,"byte_end":9358,"line_start":229,"line_end":229,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9359,"byte_end":9436,"line_start":230,"line_end":230,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9437,"byte_end":9493,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9494,"byte_end":9574,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9575,"byte_end":9620,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9621,"byte_end":9700,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9701,"byte_end":9735,"line_start":235,"line_end":235,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9736,"byte_end":9739,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9740,"byte_end":9768,"line_start":237,"line_end":237,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9769,"byte_end":9808,"line_start":238,"line_end":238,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9809,"byte_end":9850,"line_start":239,"line_end":239,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9851,"byte_end":9896,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9897,"byte_end":9921,"line_start":241,"line_end":241,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9922,"byte_end":9952,"line_start":242,"line_end":242,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9953,"byte_end":9979,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9980,"byte_end":10012,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10013,"byte_end":10040,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10041,"byte_end":10069,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10070,"byte_end":10094,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10095,"byte_end":10131,"line_start":248,"line_end":248,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10132,"byte_end":10170,"line_start":249,"line_end":249,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10171,"byte_end":10174,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10175,"byte_end":10189,"line_start":251,"line_end":251,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10190,"byte_end":10193,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10194,"byte_end":10223,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10224,"byte_end":10227,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10228,"byte_end":10241,"line_start":255,"line_end":255,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10242,"byte_end":10274,"line_start":256,"line_end":256,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10275,"byte_end":10324,"line_start":257,"line_end":257,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10325,"byte_end":10328,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10329,"byte_end":10347,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10348,"byte_end":10411,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10412,"byte_end":10478,"line_start":261,"line_end":261,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10479,"byte_end":10482,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10483,"byte_end":10497,"line_start":263,"line_end":263,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10498,"byte_end":10557,"line_start":264,"line_end":264,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10558,"byte_end":10561,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10562,"byte_end":10599,"line_start":266,"line_end":266,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10600,"byte_end":10640,"line_start":267,"line_end":267,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10641,"byte_end":10644,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10645,"byte_end":10725,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10726,"byte_end":10748,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10749,"byte_end":10812,"line_start":271,"line_end":271,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10813,"byte_end":10853,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10854,"byte_end":10904,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10905,"byte_end":10940,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10941,"byte_end":10976,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10977,"byte_end":11060,"line_start":276,"line_end":276,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11061,"byte_end":11096,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11097,"byte_end":11122,"line_start":278,"line_end":278,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11123,"byte_end":11145,"line_start":279,"line_end":279,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11146,"byte_end":11149,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11150,"byte_end":11192,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11193,"byte_end":11265,"line_start":282,"line_end":282,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11266,"byte_end":11344,"line_start":283,"line_end":283,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11345,"byte_end":11376,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11377,"byte_end":11398,"line_start":285,"line_end":285,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11399,"byte_end":11416,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11417,"byte_end":11432,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11433,"byte_end":11442,"line_start":288,"line_end":288,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11443,"byte_end":11448,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11449,"byte_end":11456,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11457,"byte_end":11460,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11461,"byte_end":11481,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11482,"byte_end":11485,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11486,"byte_end":11567,"line_start":294,"line_end":294,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11568,"byte_end":11646,"line_start":295,"line_end":295,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11647,"byte_end":11727,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11728,"byte_end":11805,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11806,"byte_end":11889,"line_start":298,"line_end":298,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11890,"byte_end":11967,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11968,"byte_end":12055,"line_start":300,"line_end":300,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12056,"byte_end":12137,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12138,"byte_end":12147,"line_start":302,"line_end":302,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12148,"byte_end":12151,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12152,"byte_end":12236,"line_start":304,"line_end":304,"column_start":1,"column_end":85}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12237,"byte_end":12310,"line_start":305,"line_end":305,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12311,"byte_end":12351,"line_start":306,"line_end":306,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12352,"byte_end":12438,"line_start":307,"line_end":307,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12439,"byte_end":12490,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12491,"byte_end":12551,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12552,"byte_end":12642,"line_start":310,"line_end":310,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12643,"byte_end":12699,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12700,"byte_end":12777,"line_start":312,"line_end":312,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12778,"byte_end":12811,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12812,"byte_end":12860,"line_start":314,"line_end":314,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12861,"byte_end":12930,"line_start":315,"line_end":315,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12931,"byte_end":12977,"line_start":316,"line_end":316,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12978,"byte_end":13028,"line_start":317,"line_end":317,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13029,"byte_end":13067,"line_start":318,"line_end":318,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13068,"byte_end":13146,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13147,"byte_end":13150,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13151,"byte_end":13233,"line_start":321,"line_end":321,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13234,"byte_end":13256,"line_start":322,"line_end":322,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13257,"byte_end":13260,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13261,"byte_end":13286,"line_start":324,"line_end":324,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13287,"byte_end":13290,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13291,"byte_end":13359,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13360,"byte_end":13423,"line_start":327,"line_end":327,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13424,"byte_end":13441,"line_start":328,"line_end":328,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13442,"byte_end":13445,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13446,"byte_end":13525,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13526,"byte_end":13603,"line_start":331,"line_end":331,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13604,"byte_end":13637,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13638,"byte_end":13641,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13642,"byte_end":13667,"line_start":334,"line_end":334,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13668,"byte_end":13671,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13672,"byte_end":13757,"line_start":336,"line_end":336,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13758,"byte_end":13842,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13843,"byte_end":13927,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13928,"byte_end":13967,"line_start":339,"line_end":339,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13968,"byte_end":13971,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13972,"byte_end":14012,"line_start":341,"line_end":341,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14013,"byte_end":14016,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14017,"byte_end":14114,"line_start":343,"line_end":343,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14303,"byte_end":14315,"line_start":349,"line_end":349,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","byte_start":17608,"byte_end":17628,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":9958291,"byte_end":9958296,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":9958062,"byte_end":9958103,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":9958104,"byte_end":9958107,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":9958108,"byte_end":9958185,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":9958254,"byte_end":9958279,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":725},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":948},{"krate":0,"index":974},{"krate":0,"index":1131},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":32973,"byte_end":33050,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33051,"byte_end":33054,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33055,"byte_end":33126,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33127,"byte_end":33207,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33208,"byte_end":33282,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33283,"byte_end":33286,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33287,"byte_end":33317,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33318,"byte_end":33321,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33322,"byte_end":33402,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33403,"byte_end":33480,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33481,"byte_end":33558,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33559,"byte_end":33639,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33640,"byte_end":33718,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33719,"byte_end":33784,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33785,"byte_end":33788,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33789,"byte_end":33861,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33862,"byte_end":33929,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":33930,"byte_end":34009,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34010,"byte_end":34084,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34085,"byte_end":34159,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34160,"byte_end":34177,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34178,"byte_end":34181,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34182,"byte_end":34246,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34247,"byte_end":34322,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34323,"byte_end":34398,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34399,"byte_end":34476,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34477,"byte_end":34480,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34481,"byte_end":34557,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34558,"byte_end":34633,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34634,"byte_end":34714,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34715,"byte_end":34786,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34787,"byte_end":34856,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34857,"byte_end":34860,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34861,"byte_end":34933,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":34934,"byte_end":35014,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35015,"byte_end":35068,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35069,"byte_end":35072,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35073,"byte_end":35086,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35087,"byte_end":35127,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35128,"byte_end":35152,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35153,"byte_end":35156,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35157,"byte_end":35175,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35176,"byte_end":35215,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35216,"byte_end":35265,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35266,"byte_end":35299,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35300,"byte_end":35303,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35304,"byte_end":35334,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35335,"byte_end":35378,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35379,"byte_end":35382,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35383,"byte_end":35433,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35434,"byte_end":35448,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35449,"byte_end":35454,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35455,"byte_end":35462,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35463,"byte_end":35466,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35467,"byte_end":35496,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35497,"byte_end":35537,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35538,"byte_end":35574,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35575,"byte_end":35616,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35617,"byte_end":35620,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35621,"byte_end":35656,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35657,"byte_end":35660,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35661,"byte_end":35742,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35743,"byte_end":35817,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35818,"byte_end":35896,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35897,"byte_end":35941,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35942,"byte_end":35945,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35946,"byte_end":36016,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36017,"byte_end":36095,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36096,"byte_end":36174,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36175,"byte_end":36252,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36253,"byte_end":36256,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36257,"byte_end":36332,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36333,"byte_end":36371,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36372,"byte_end":36375,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36376,"byte_end":36389,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36390,"byte_end":36444,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36445,"byte_end":36469,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36470,"byte_end":36473,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36474,"byte_end":36492,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36493,"byte_end":36532,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36533,"byte_end":36578,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36579,"byte_end":36622,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36623,"byte_end":36662,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36663,"byte_end":36666,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36667,"byte_end":36701,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36702,"byte_end":36747,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36748,"byte_end":36751,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36752,"byte_end":36783,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36784,"byte_end":36798,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36799,"byte_end":36804,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36805,"byte_end":36812,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36813,"byte_end":36816,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36817,"byte_end":36898,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36899,"byte_end":36977,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36978,"byte_end":37040,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37041,"byte_end":37044,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37045,"byte_end":37058,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37059,"byte_end":37111,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37112,"byte_end":37136,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37137,"byte_end":37140,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37141,"byte_end":37159,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37160,"byte_end":37199,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37200,"byte_end":37247,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37248,"byte_end":37257,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37258,"byte_end":37305,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37306,"byte_end":37309,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37310,"byte_end":37352,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37353,"byte_end":37394,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37395,"byte_end":37398,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37399,"byte_end":37459,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37460,"byte_end":37494,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37495,"byte_end":37498,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37499,"byte_end":37589,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37590,"byte_end":37593,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37594,"byte_end":37608,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37609,"byte_end":37614,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37615,"byte_end":37622,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37623,"byte_end":37626,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37627,"byte_end":37672,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37673,"byte_end":37715,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37716,"byte_end":37761,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37762,"byte_end":37801,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37802,"byte_end":37841,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37842,"byte_end":37845,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37846,"byte_end":37890,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37891,"byte_end":37894,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37895,"byte_end":37977,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37978,"byte_end":38057,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38058,"byte_end":38132,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38133,"byte_end":38206,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38207,"byte_end":38267,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38268,"byte_end":38271,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38272,"byte_end":38313,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38314,"byte_end":38317,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38318,"byte_end":38386,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38387,"byte_end":38456,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38457,"byte_end":38523,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38524,"byte_end":38587,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38588,"byte_end":38655,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38656,"byte_end":38725,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38726,"byte_end":38796,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38797,"byte_end":38875,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38876,"byte_end":38901,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38902,"byte_end":38905,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38906,"byte_end":38982,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38983,"byte_end":38986,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38987,"byte_end":39018,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39019,"byte_end":39022,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39023,"byte_end":39103,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39104,"byte_end":39180,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39181,"byte_end":39228,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39229,"byte_end":39232,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39233,"byte_end":39306,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39307,"byte_end":39383,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39384,"byte_end":39460,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39461,"byte_end":39464,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39465,"byte_end":39486,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39487,"byte_end":39510,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39511,"byte_end":39533,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39534,"byte_end":39537,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39538,"byte_end":39560,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39561,"byte_end":39564,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39565,"byte_end":39641,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39642,"byte_end":39689,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39690,"byte_end":39693,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39694,"byte_end":39728,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39729,"byte_end":39765,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39766,"byte_end":39806,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39807,"byte_end":39849,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39850,"byte_end":39923,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39924,"byte_end":40007,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40008,"byte_end":40091,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40092,"byte_end":40119,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40120,"byte_end":40153,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40154,"byte_end":40181,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40182,"byte_end":40209,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40210,"byte_end":40241,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40242,"byte_end":40312,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40313,"byte_end":40389,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40390,"byte_end":40419,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43097,"byte_end":43109,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42420,"byte_end":42451,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42452,"byte_end":42455,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42456,"byte_end":42528,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42529,"byte_end":42607,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42608,"byte_end":42694,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42695,"byte_end":42772,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42773,"byte_end":42784,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42785,"byte_end":42788,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42789,"byte_end":42857,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42858,"byte_end":42882,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42883,"byte_end":42886,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42887,"byte_end":42929,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42930,"byte_end":42980,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":42981,"byte_end":43034,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43035,"byte_end":43086,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44207,"byte_end":44220,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43127,"byte_end":43212,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43217,"byte_end":43258,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43263,"byte_end":43266,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43271,"byte_end":43318,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43323,"byte_end":43326,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43331,"byte_end":43390,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43395,"byte_end":43453,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43458,"byte_end":43539,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43544,"byte_end":43570,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43575,"byte_end":43578,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43583,"byte_end":43654,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43659,"byte_end":43721,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43726,"byte_end":43797,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43802,"byte_end":43883,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43888,"byte_end":43964,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43969,"byte_end":44020,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44025,"byte_end":44028,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44033,"byte_end":44104,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44109,"byte_end":44112,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44117,"byte_end":44156,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44161,"byte_end":44199,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45123,"byte_end":45130,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44298,"byte_end":44372,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44377,"byte_end":44444,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44449,"byte_end":44452,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44457,"byte_end":44528,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44533,"byte_end":44602,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44607,"byte_end":44681,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44686,"byte_end":44763,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44768,"byte_end":44838,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44843,"byte_end":44896,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44901,"byte_end":44904,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44909,"byte_end":44981,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44986,"byte_end":45008,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45013,"byte_end":45016,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45021,"byte_end":45060,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45065,"byte_end":45115,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48444,"byte_end":48453,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":46757,"byte_end":46787,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":46788,"byte_end":46791,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":46792,"byte_end":46871,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":46872,"byte_end":46946,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":46947,"byte_end":47026,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47027,"byte_end":47104,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47105,"byte_end":47116,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47117,"byte_end":47120,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47121,"byte_end":47198,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47199,"byte_end":47217,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47218,"byte_end":47221,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47222,"byte_end":47302,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47303,"byte_end":47376,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47377,"byte_end":47456,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47457,"byte_end":47501,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47502,"byte_end":47505,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47506,"byte_end":47571,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47572,"byte_end":47652,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47653,"byte_end":47732,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47733,"byte_end":47806,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47807,"byte_end":47880,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47881,"byte_end":47902,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47903,"byte_end":47906,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47907,"byte_end":47991,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":47992,"byte_end":48016,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48017,"byte_end":48020,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48021,"byte_end":48094,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48095,"byte_end":48174,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48175,"byte_end":48178,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48179,"byte_end":48244,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48245,"byte_end":48266,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48267,"byte_end":48270,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48271,"byte_end":48310,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48311,"byte_end":48347,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48348,"byte_end":48387,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48388,"byte_end":48433,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48943,"byte_end":48952,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48460,"byte_end":48513,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48518,"byte_end":48521,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and fills `buf` with data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48526,"byte_end":48597,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ read. If no data was read (`buf.filled().is_empty()`) it implies that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48602,"byte_end":48675,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48680,"byte_end":48705,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48710,"byte_end":48713,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48718,"byte_end":48793,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48798,"byte_end":48867,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":48872,"byte_end":48935,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51548,"byte_end":51557,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51066,"byte_end":51096,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51097,"byte_end":51100,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51101,"byte_end":51175,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51176,"byte_end":51246,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51247,"byte_end":51316,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51317,"byte_end":51320,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51321,"byte_end":51386,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51387,"byte_end":51408,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51409,"byte_end":51412,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51413,"byte_end":51449,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51450,"byte_end":51491,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51492,"byte_end":51537,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52199,"byte_end":52209,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":166},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51564,"byte_end":51621,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51626,"byte_end":51629,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51634,"byte_end":51707,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51712,"byte_end":51738,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51743,"byte_end":51746,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51751,"byte_end":51826,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51831,"byte_end":51887,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51892,"byte_end":51895,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51900,"byte_end":51912,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51917,"byte_end":51920,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":51925,"byte_end":51995,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52000,"byte_end":52074,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52079,"byte_end":52153,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52158,"byte_end":52191,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52732,"byte_end":52745,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":166},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52276,"byte_end":52319,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52324,"byte_end":52327,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52332,"byte_end":52381,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52386,"byte_end":52456,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52461,"byte_end":52533,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52538,"byte_end":52609,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52614,"byte_end":52630,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52635,"byte_end":52638,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52643,"byte_end":52655,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52660,"byte_end":52663,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":52668,"byte_end":52724,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56036,"byte_end":56046,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54173,"byte_end":54205,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54206,"byte_end":54209,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54210,"byte_end":54292,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54293,"byte_end":54368,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54369,"byte_end":54436,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54437,"byte_end":54440,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54441,"byte_end":54521,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54522,"byte_end":54540,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54541,"byte_end":54544,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54545,"byte_end":54616,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54617,"byte_end":54631,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54632,"byte_end":54635,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54636,"byte_end":54704,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54705,"byte_end":54785,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54786,"byte_end":54865,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54866,"byte_end":54939,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":54940,"byte_end":55013,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55014,"byte_end":55035,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55036,"byte_end":55039,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55040,"byte_end":55124,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55125,"byte_end":55149,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55150,"byte_end":55153,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55154,"byte_end":55236,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55237,"byte_end":55320,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55321,"byte_end":55324,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55325,"byte_end":55409,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55410,"byte_end":55494,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55495,"byte_end":55573,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55574,"byte_end":55653,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55654,"byte_end":55715,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55716,"byte_end":55719,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55720,"byte_end":55786,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55787,"byte_end":55809,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55810,"byte_end":55813,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55814,"byte_end":55852,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55853,"byte_end":55897,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55898,"byte_end":55937,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55938,"byte_end":55977,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":55978,"byte_end":56025,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56430,"byte_end":56440,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56053,"byte_end":56107,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56112,"byte_end":56115,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56120,"byte_end":56181,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56186,"byte_end":56189,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56194,"byte_end":56256,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56261,"byte_end":56319,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56324,"byte_end":56391,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56396,"byte_end":56422,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56981,"byte_end":56991,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56568,"byte_end":56639,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56644,"byte_end":56666,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56671,"byte_end":56674,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56679,"byte_end":56725,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56730,"byte_end":56733,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56738,"byte_end":56802,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56807,"byte_end":56865,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56870,"byte_end":56938,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56943,"byte_end":56973,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60277,"byte_end":60290,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57073,"byte_end":57147,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57152,"byte_end":57200,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57205,"byte_end":57208,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57213,"byte_end":57284,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57289,"byte_end":57365,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57370,"byte_end":57446,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57451,"byte_end":57526,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57531,"byte_end":57602,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57607,"byte_end":57683,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57688,"byte_end":57716,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57721,"byte_end":57724,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57729,"byte_end":57790,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57795,"byte_end":57866,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57871,"byte_end":57943,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57948,"byte_end":58023,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58028,"byte_end":58101,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58106,"byte_end":58181,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58186,"byte_end":58258,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58263,"byte_end":58274,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58279,"byte_end":58282,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58287,"byte_end":58361,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58366,"byte_end":58438,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58443,"byte_end":58512,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58517,"byte_end":58585,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58590,"byte_end":58651,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58656,"byte_end":58659,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58664,"byte_end":58682,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58687,"byte_end":58690,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58695,"byte_end":58765,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58770,"byte_end":58773,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58778,"byte_end":58841,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58846,"byte_end":58915,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58920,"byte_end":58995,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59000,"byte_end":59073,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59078,"byte_end":59129,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59134,"byte_end":59137,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59142,"byte_end":59212,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59217,"byte_end":59292,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59297,"byte_end":59369,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59374,"byte_end":59444,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59449,"byte_end":59524,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59529,"byte_end":59532,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59537,"byte_end":59618,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59623,"byte_end":59698,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59703,"byte_end":59770,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59775,"byte_end":59778,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59783,"byte_end":59795,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59800,"byte_end":59803,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59808,"byte_end":59879,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59884,"byte_end":59950,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59955,"byte_end":60029,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60034,"byte_end":60098,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60103,"byte_end":60142,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60147,"byte_end":60150,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60155,"byte_end":60167,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60172,"byte_end":60175,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60180,"byte_end":60255,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60260,"byte_end":60269,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61403,"byte_end":61422,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60372,"byte_end":60443,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60448,"byte_end":60451,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60456,"byte_end":60523,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60528,"byte_end":60598,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60603,"byte_end":60673,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60678,"byte_end":60681,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60686,"byte_end":60768,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60773,"byte_end":60825,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60830,"byte_end":60833,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60838,"byte_end":60899,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60904,"byte_end":60907,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60912,"byte_end":60974,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60979,"byte_end":61037,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61042,"byte_end":61109,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61114,"byte_end":61140,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61145,"byte_end":61148,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61153,"byte_end":61163,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61168,"byte_end":61171,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61176,"byte_end":61248,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61253,"byte_end":61323,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61328,"byte_end":61340,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61345,"byte_end":61348,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61353,"byte_end":61395,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62190,"byte_end":62207,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61720,"byte_end":61790,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61795,"byte_end":61814,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61819,"byte_end":61822,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61827,"byte_end":61896,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61901,"byte_end":61976,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61981,"byte_end":62049,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62054,"byte_end":62057,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62062,"byte_end":62109,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62114,"byte_end":62117,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62122,"byte_end":62182,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69447,"byte_end":69454,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":68499,"byte_end":68579,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":68580,"byte_end":68583,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":68584,"byte_end":68658,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":68659,"byte_end":68734,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":68735,"byte_end":68813,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":68814,"byte_end":68890,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":68891,"byte_end":68968,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":68969,"byte_end":68972,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":68973,"byte_end":69037,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69038,"byte_end":69041,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69042,"byte_end":69057,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69058,"byte_end":69099,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69100,"byte_end":69141,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69142,"byte_end":69183,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69184,"byte_end":69191,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69192,"byte_end":69195,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69196,"byte_end":69274,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69275,"byte_end":69353,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69354,"byte_end":69435,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69656,"byte_end":69659,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69570,"byte_end":69630,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69635,"byte_end":69644,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70105,"byte_end":70111,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69924,"byte_end":69986,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69991,"byte_end":69994,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69999,"byte_end":70079,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70084,"byte_end":70093,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70339,"byte_end":70347,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70268,"byte_end":70313,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70318,"byte_end":70327,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70493,"byte_end":70499,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70400,"byte_end":70467,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70472,"byte_end":70481,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70953,"byte_end":70963,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70859,"byte_end":70927,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70932,"byte_end":70941,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71441,"byte_end":71445,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71343,"byte_end":71415,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71420,"byte_end":71429,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71851,"byte_end":71862,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71703,"byte_end":71775,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71780,"byte_end":71783,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71788,"byte_end":71825,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71830,"byte_end":71839,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72374,"byte_end":72389,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72225,"byte_end":72298,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72303,"byte_end":72306,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72311,"byte_end":72348,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72353,"byte_end":72362,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73612,"byte_end":73621,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72772,"byte_end":72865,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72870,"byte_end":72886,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72891,"byte_end":72894,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72899,"byte_end":72987,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72992,"byte_end":73083,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73088,"byte_end":73091,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73096,"byte_end":73191,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73196,"byte_end":73280,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73285,"byte_end":73361,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73366,"byte_end":73369,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73374,"byte_end":73386,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73391,"byte_end":73394,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73399,"byte_end":73495,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73500,"byte_end":73579,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73584,"byte_end":73593,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74067,"byte_end":74079,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73689,"byte_end":73795,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73800,"byte_end":73816,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73821,"byte_end":73824,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73829,"byte_end":73841,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73846,"byte_end":73849,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73854,"byte_end":73950,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73955,"byte_end":74034,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74039,"byte_end":74048,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74441,"byte_end":74460,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74167,"byte_end":74268,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74273,"byte_end":74276,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74281,"byte_end":74392,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74397,"byte_end":74415,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74420,"byte_end":74429,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74798,"byte_end":74820,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74552,"byte_end":74657,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74662,"byte_end":74684,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74689,"byte_end":74692,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74697,"byte_end":74709,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74714,"byte_end":74717,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74722,"byte_end":74772,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74777,"byte_end":74786,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75665,"byte_end":75674,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75553,"byte_end":75639,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75644,"byte_end":75653,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75941,"byte_end":75946,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75742,"byte_end":75802,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75807,"byte_end":75810,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75815,"byte_end":75915,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75920,"byte_end":75929,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76275,"byte_end":76282,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75996,"byte_end":76053,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76058,"byte_end":76061,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76066,"byte_end":76117,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76122,"byte_end":76125,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76130,"byte_end":76142,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76147,"byte_end":76150,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76155,"byte_end":76249,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76254,"byte_end":76263,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76892,"byte_end":76902,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76419,"byte_end":76472,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76477,"byte_end":76480,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76485,"byte_end":76536,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76541,"byte_end":76544,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76549,"byte_end":76654,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76659,"byte_end":76735,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76740,"byte_end":76743,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76748,"byte_end":76760,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76765,"byte_end":76768,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76773,"byte_end":76866,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76871,"byte_end":76880,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77506,"byte_end":77517,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77086,"byte_end":77162,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77167,"byte_end":77170,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77175,"byte_end":77284,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77289,"byte_end":77340,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77345,"byte_end":77348,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77353,"byte_end":77365,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77370,"byte_end":77373,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77378,"byte_end":77473,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77478,"byte_end":77487,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77897,"byte_end":77906,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77669,"byte_end":77775,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77780,"byte_end":77783,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77788,"byte_end":77800,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77805,"byte_end":77808,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77813,"byte_end":77871,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77876,"byte_end":77885,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969386,"byte_end":9969394,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969142,"byte_end":9969170,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969171,"byte_end":9969174,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969175,"byte_end":9969254,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969255,"byte_end":9969289,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969546,"byte_end":9969554,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969432,"byte_end":9969468,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969473,"byte_end":9969476,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969481,"byte_end":9969531,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969721,"byte_end":9969729,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969607,"byte_end":9969642,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969647,"byte_end":9969650,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969655,"byte_end":9969706,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970165,"byte_end":9970176,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969782,"byte_end":9969839,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969844,"byte_end":9969847,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969852,"byte_end":9969866,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969871,"byte_end":9969874,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969879,"byte_end":9969886,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969891,"byte_end":9969919,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969924,"byte_end":9969927,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969932,"byte_end":9969978,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969983,"byte_end":9970030,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970035,"byte_end":9970038,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970043,"byte_end":9970098,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970103,"byte_end":9970135,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970140,"byte_end":9970147,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970616,"byte_end":9970627,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970233,"byte_end":9970290,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970295,"byte_end":9970298,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970303,"byte_end":9970317,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970322,"byte_end":9970325,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970330,"byte_end":9970337,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970342,"byte_end":9970370,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970375,"byte_end":9970378,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970383,"byte_end":9970430,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970435,"byte_end":9970481,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970486,"byte_end":9970489,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970494,"byte_end":9970549,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970554,"byte_end":9970586,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970591,"byte_end":9970598,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9971045,"byte_end":9971048,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970684,"byte_end":9970722,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970727,"byte_end":9970730,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970735,"byte_end":9970782,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970787,"byte_end":9970790,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970795,"byte_end":9970809,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970814,"byte_end":9970817,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970822,"byte_end":9970829,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970834,"byte_end":9970862,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970867,"byte_end":9970870,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970875,"byte_end":9970945,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970950,"byte_end":9970953,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970958,"byte_end":9970990,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9970995,"byte_end":9971027,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972426,"byte_end":9972431,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972191,"byte_end":9972245,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972246,"byte_end":9972249,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972250,"byte_end":9972321,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972507,"byte_end":9972512,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972458,"byte_end":9972492,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972606,"byte_end":9972614,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972537,"byte_end":9972591,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972715,"byte_end":9972723,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972646,"byte_end":9972700,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972827,"byte_end":9972838,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972755,"byte_end":9972812,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972946,"byte_end":9972958,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972873,"byte_end":9972931,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973073,"byte_end":9973076,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972994,"byte_end":9973058,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973933,"byte_end":9973941,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973692,"byte_end":9973736,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973741,"byte_end":9973744,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973749,"byte_end":9973763,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973768,"byte_end":9973771,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973776,"byte_end":9973783,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973788,"byte_end":9973813,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973818,"byte_end":9973821,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973826,"byte_end":9973863,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973868,"byte_end":9973909,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973914,"byte_end":9973921,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974352,"byte_end":9974363,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9973998,"byte_end":9974049,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974054,"byte_end":9974057,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974062,"byte_end":9974076,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974081,"byte_end":9974084,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974089,"byte_end":9974096,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974101,"byte_end":9974126,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974131,"byte_end":9974134,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974139,"byte_end":9974180,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974185,"byte_end":9974228,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974233,"byte_end":9974279,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974284,"byte_end":9974328,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974333,"byte_end":9974340,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974820,"byte_end":9974831,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974455,"byte_end":9974516,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974521,"byte_end":9974524,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974529,"byte_end":9974543,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974548,"byte_end":9974551,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974556,"byte_end":9974563,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974568,"byte_end":9974593,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974598,"byte_end":9974601,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974606,"byte_end":9974647,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974652,"byte_end":9974696,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974701,"byte_end":9974744,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974749,"byte_end":9974796,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974801,"byte_end":9974808,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975252,"byte_end":9975266,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974924,"byte_end":9974988,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9974993,"byte_end":9974996,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975001,"byte_end":9975015,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975020,"byte_end":9975023,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975028,"byte_end":9975035,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975040,"byte_end":9975065,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975070,"byte_end":9975073,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975078,"byte_end":9975122,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975127,"byte_end":9975174,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975179,"byte_end":9975228,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975233,"byte_end":9975240,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975669,"byte_end":9975684,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975336,"byte_end":9975401,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975406,"byte_end":9975409,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975414,"byte_end":9975428,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975433,"byte_end":9975436,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975441,"byte_end":9975448,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975453,"byte_end":9975478,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975483,"byte_end":9975486,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975491,"byte_end":9975536,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975541,"byte_end":9975589,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975594,"byte_end":9975645,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9975650,"byte_end":9975657,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10014469,"byte_end":10014477,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1240}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10014606,"byte_end":10014615,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1243}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10014929,"byte_end":10014934,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015560,"byte_end":10015570,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015457,"byte_end":10015532,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015537,"byte_end":10015548,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015977,"byte_end":10015984,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015653,"byte_end":10015702,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015707,"byte_end":10015710,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015715,"byte_end":10015727,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015732,"byte_end":10015735,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015740,"byte_end":10015814,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015819,"byte_end":10015869,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015874,"byte_end":10015938,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015943,"byte_end":10015965,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10016485,"byte_end":10016495,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10016383,"byte_end":10016457,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10016462,"byte_end":10016473,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":9442},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","byte_start":10019364,"byte_end":10019368,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":9445},{"krate":0,"index":9446},{"krate":0,"index":9447}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2026},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10022656,"byte_end":10022671,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2032}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10025381,"byte_end":10025391,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10028282,"byte_end":10028291,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10029691,"byte_end":10029696,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10031536,"byte_end":10031541,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10033614,"byte_end":10033626,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2042},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2048}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10034746,"byte_end":10034751,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10037580,"byte_end":10037584,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10039887,"byte_end":10039895,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10041792,"byte_end":10041802,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10043239,"byte_end":10043246,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10044535,"byte_end":10044542,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10045873,"byte_end":10045881,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10047221,"byte_end":10047229,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10048510,"byte_end":10048518,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10049813,"byte_end":10049821,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10051184,"byte_end":10051192,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10052485,"byte_end":10052493,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10053953,"byte_end":10053962,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10055356,"byte_end":10055365,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10056712,"byte_end":10056723,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10058084,"byte_end":10058095,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10059396,"byte_end":10059407,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10060719,"byte_end":10060730,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10062111,"byte_end":10062122,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10063416,"byte_end":10063427,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10064905,"byte_end":10064917,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10066311,"byte_end":10066323,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10067982,"byte_end":10067993,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10069548,"byte_end":10069562,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10070854,"byte_end":10070858,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10071946,"byte_end":10071958,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2086}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10072954,"byte_end":10072958,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2085},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10075082,"byte_end":10075095,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2094},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2112},{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2096},{"krate":0,"index":2097}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10076937,"byte_end":10076942,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10079749,"byte_end":10079758,"line_start":185,"line_end":185,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10081100,"byte_end":10081109,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10082509,"byte_end":10082517,"line_start":269,"line_end":269,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10083778,"byte_end":10083786,"line_start":306,"line_end":306,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10085101,"byte_end":10085110,"line_start":344,"line_end":344,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10086423,"byte_end":10086432,"line_start":382,"line_end":382,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10087772,"byte_end":10087781,"line_start":420,"line_end":420,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10089116,"byte_end":10089125,"line_start":458,"line_end":458,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10090502,"byte_end":10090511,"line_start":496,"line_end":496,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10091898,"byte_end":10091907,"line_start":534,"line_end":534,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10093362,"byte_end":10093372,"line_start":574,"line_end":574,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10094762,"byte_end":10094772,"line_start":614,"line_end":614,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10096104,"byte_end":10096116,"line_start":653,"line_end":653,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10097443,"byte_end":10097455,"line_start":691,"line_end":691,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10098809,"byte_end":10098821,"line_start":729,"line_end":729,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10100170,"byte_end":10100182,"line_start":767,"line_end":767,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10101573,"byte_end":10101585,"line_start":805,"line_end":805,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10102986,"byte_end":10102998,"line_start":843,"line_end":843,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10104465,"byte_end":10104478,"line_start":883,"line_end":883,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10105880,"byte_end":10105893,"line_start":923,"line_end":923,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10106913,"byte_end":10106918,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10108208,"byte_end":10108216,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9390},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10109577,"byte_end":10109586,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":9392},{"krate":0,"index":9393},{"krate":0,"index":9394},{"krate":0,"index":9395}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10109922,"byte_end":10109925,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10109780,"byte_end":10109872,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10109877,"byte_end":10109910,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110087,"byte_end":10110100,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110010,"byte_end":10110075,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110454,"byte_end":10110461,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110317,"byte_end":10110363,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110368,"byte_end":10110371,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110376,"byte_end":10110442,"line_start":56,"line_end":56,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110653,"byte_end":10110660,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110508,"byte_end":10110562,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110567,"byte_end":10110570,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110575,"byte_end":10110641,"line_start":63,"line_end":63,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110871,"byte_end":10110882,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110719,"byte_end":10110780,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110785,"byte_end":10110788,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110793,"byte_end":10110859,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10111113,"byte_end":10111123,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10110962,"byte_end":10111025,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10111030,"byte_end":10111033,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10111038,"byte_end":10111101,"line_start":77,"line_end":77,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10111327,"byte_end":10111333,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10111167,"byte_end":10111223,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10111228,"byte_end":10111231,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10111236,"byte_end":10111315,"line_start":84,"line_end":84,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":9359},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115272,"byte_end":10115281,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":9361}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115560,"byte_end":10115563,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115406,"byte_end":10115463,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115468,"byte_end":10115471,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115476,"byte_end":10115548,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115895,"byte_end":10115908,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115695,"byte_end":10115780,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115785,"byte_end":10115798,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115803,"byte_end":10115806,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115811,"byte_end":10115883,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116365,"byte_end":10116372,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116220,"byte_end":10116270,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116275,"byte_end":10116278,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116283,"byte_end":10116353,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116592,"byte_end":10116599,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116439,"byte_end":10116497,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116502,"byte_end":10116505,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116510,"byte_end":10116580,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116834,"byte_end":10116845,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116674,"byte_end":10116739,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116744,"byte_end":10116747,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116752,"byte_end":10116822,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10117109,"byte_end":10117119,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10116954,"byte_end":10117021,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10117026,"byte_end":10117029,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10117034,"byte_end":10117097,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9313},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10120696,"byte_end":10120705,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":9315},{"krate":0,"index":9316},{"krate":0,"index":9317}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10121013,"byte_end":10121016,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10120871,"byte_end":10120963,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10120968,"byte_end":10121001,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10121178,"byte_end":10121191,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10121101,"byte_end":10121166,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122273,"byte_end":10122280,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122215,"byte_end":10122261,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122471,"byte_end":10122478,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122327,"byte_end":10122381,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122386,"byte_end":10122389,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122394,"byte_end":10122459,"line_start":91,"line_end":91,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122688,"byte_end":10122699,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122537,"byte_end":10122598,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122603,"byte_end":10122606,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122611,"byte_end":10122676,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122930,"byte_end":10122940,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122779,"byte_end":10122842,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122847,"byte_end":10122850,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122855,"byte_end":10122918,"line_start":105,"line_end":105,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10123052,"byte_end":10123058,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10122984,"byte_end":10123040,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9264},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10125472,"byte_end":10125477,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9267},{"krate":0,"index":9268},{"krate":0,"index":9269}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10125918,"byte_end":10125925,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10125844,"byte_end":10125906,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126257,"byte_end":10126264,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10125994,"byte_end":10126064,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126069,"byte_end":10126072,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126077,"byte_end":10126150,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126155,"byte_end":10126228,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126233,"byte_end":10126245,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126623,"byte_end":10126634,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126353,"byte_end":10126430,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126435,"byte_end":10126438,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126443,"byte_end":10126516,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126521,"byte_end":10126594,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126599,"byte_end":10126611,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126831,"byte_end":10126841,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126763,"byte_end":10126819,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy.rs","byte_start":10130234,"byte_end":10130238,"line_start":56,"line_end":56,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy_buf.rs","byte_start":10134043,"byte_end":10134051,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10135860,"byte_end":10135865,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2175}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10136544,"byte_end":10136549,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9222},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\flush.rs","byte_start":10137790,"byte_end":10137795,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":9225},{"krate":0,"index":9226}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9172},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139229,"byte_end":10139234,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9174},{"krate":0,"index":9175},{"krate":0,"index":9176},{"krate":0,"index":9177}],"decl_id":null,"docs":" Read lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140081,"byte_end":10140090,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139591,"byte_end":10139631,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139636,"byte_end":10139639,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139644,"byte_end":10139658,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139663,"byte_end":10139666,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139671,"byte_end":10139678,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139683,"byte_end":10139717,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139722,"byte_end":10139757,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139762,"byte_end":10139765,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139770,"byte_end":10139853,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139858,"byte_end":10139898,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139903,"byte_end":10139906,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139911,"byte_end":10139964,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139969,"byte_end":10140012,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140017,"byte_end":10140022,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140027,"byte_end":10140039,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140044,"byte_end":10140051,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140056,"byte_end":10140063,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140317,"byte_end":10140324,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140250,"byte_end":10140305,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140443,"byte_end":10140450,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140384,"byte_end":10140431,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140737,"byte_end":10140747,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140502,"byte_end":10140563,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140568,"byte_end":10140571,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140576,"byte_end":10140639,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140644,"byte_end":10140725,"line_start":84,"line_end":84,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141633,"byte_end":10141647,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140840,"byte_end":10140882,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140887,"byte_end":10140890,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140895,"byte_end":10140919,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140924,"byte_end":10140927,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140932,"byte_end":10140993,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140998,"byte_end":10141065,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141070,"byte_end":10141143,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141148,"byte_end":10141231,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141236,"byte_end":10141239,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141244,"byte_end":10141316,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141321,"byte_end":10141390,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141395,"byte_end":10141439,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141444,"byte_end":10141447,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141452,"byte_end":10141526,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141531,"byte_end":10141605,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10141610,"byte_end":10141621,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2177},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143375,"byte_end":10143387,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2179}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142587,"byte_end":10142646,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142647,"byte_end":10142650,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142651,"byte_end":10142730,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142731,"byte_end":10142807,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142808,"byte_end":10142870,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142871,"byte_end":10142874,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142875,"byte_end":10142888,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142889,"byte_end":10142892,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142893,"byte_end":10142900,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142901,"byte_end":10142945,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142946,"byte_end":10142997,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10142998,"byte_end":10143055,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143056,"byte_end":10143059,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143060,"byte_end":10143097,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143098,"byte_end":10143101,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143102,"byte_end":10143129,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143130,"byte_end":10143169,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143170,"byte_end":10143200,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143201,"byte_end":10143204,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143205,"byte_end":10143242,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143243,"byte_end":10143246,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143247,"byte_end":10143286,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143287,"byte_end":10143317,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143318,"byte_end":10143330,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143331,"byte_end":10143338,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10143339,"byte_end":10143346,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10144684,"byte_end":10144690,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10144450,"byte_end":10144533,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10144534,"byte_end":10144537,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10144538,"byte_end":10144612,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10144613,"byte_end":10144676,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":9121},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read.rs","byte_start":10149746,"byte_end":10149750,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":9124},{"krate":0,"index":9125},{"krate":0,"index":9126}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9061},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_buf.rs","byte_start":10150967,"byte_end":10150974,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":9065},{"krate":0,"index":9066},{"krate":0,"index":9067}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9006},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_exact.rs","byte_start":10153179,"byte_end":10153188,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":9009},{"krate":0,"index":9010},{"krate":0,"index":9011}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8962},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158212,"byte_end":10158218,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":8964},{"krate":0,"index":8965}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8925},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158234,"byte_end":10158240,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":8927},{"krate":0,"index":8928}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8876},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158256,"byte_end":10158263,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":8878},{"krate":0,"index":8879},{"krate":0,"index":8881},{"krate":0,"index":8882}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8827},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158288,"byte_end":10158295,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":8829},{"krate":0,"index":8830},{"krate":0,"index":8832},{"krate":0,"index":8833}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8778},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158320,"byte_end":10158327,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":8780},{"krate":0,"index":8781},{"krate":0,"index":8783},{"krate":0,"index":8784}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8729},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158352,"byte_end":10158360,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":8731},{"krate":0,"index":8732},{"krate":0,"index":8734},{"krate":0,"index":8735}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8680},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158388,"byte_end":10158395,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":8682},{"krate":0,"index":8683},{"krate":0,"index":8685},{"krate":0,"index":8686}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8631},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158420,"byte_end":10158427,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":8633},{"krate":0,"index":8634},{"krate":0,"index":8636},{"krate":0,"index":8637}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8582},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158452,"byte_end":10158459,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":8584},{"krate":0,"index":8585},{"krate":0,"index":8587},{"krate":0,"index":8588}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8533},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158484,"byte_end":10158492,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":8535},{"krate":0,"index":8536},{"krate":0,"index":8538},{"krate":0,"index":8539}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8484},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158520,"byte_end":10158529,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":8486},{"krate":0,"index":8487},{"krate":0,"index":8489},{"krate":0,"index":8490}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8435},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158557,"byte_end":10158566,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":8437},{"krate":0,"index":8438},{"krate":0,"index":8440},{"krate":0,"index":8441}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8386},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158594,"byte_end":10158603,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":8388},{"krate":0,"index":8389},{"krate":0,"index":8391},{"krate":0,"index":8392}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8337},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158631,"byte_end":10158641,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":8339},{"krate":0,"index":8340},{"krate":0,"index":8342},{"krate":0,"index":8343}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8288},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158672,"byte_end":10158681,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":8290},{"krate":0,"index":8291},{"krate":0,"index":8293},{"krate":0,"index":8294}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8239},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158709,"byte_end":10158718,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":8241},{"krate":0,"index":8242},{"krate":0,"index":8244},{"krate":0,"index":8245}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8190},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158746,"byte_end":10158755,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":8192},{"krate":0,"index":8193},{"krate":0,"index":8195},{"krate":0,"index":8196}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8141},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10158783,"byte_end":10158793,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":8143},{"krate":0,"index":8144},{"krate":0,"index":8146},{"krate":0,"index":8147}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8087},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_line.rs","byte_start":10159310,"byte_end":10159318,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":8090},{"krate":0,"index":8091},{"krate":0,"index":8092},{"krate":0,"index":8093},{"krate":0,"index":8094}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8030},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_end.rs","byte_start":10163274,"byte_end":10163283,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":8033},{"krate":0,"index":8034},{"krate":0,"index":8035},{"krate":0,"index":8036}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7969},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_string.rs","byte_start":10171603,"byte_end":10171615,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":7972},{"krate":0,"index":7973},{"krate":0,"index":7974},{"krate":0,"index":7975},{"krate":0,"index":7976}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7908},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","byte_start":10174025,"byte_end":10174034,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":7911},{"krate":0,"index":7912},{"krate":0,"index":7913},{"krate":0,"index":7914},{"krate":0,"index":7915}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":10176376,"byte_end":10176382,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2343}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2341},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":10177068,"byte_end":10177074,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7859},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\shutdown.rs","byte_start":10178113,"byte_end":10178121,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":7862},{"krate":0,"index":7863}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10179267,"byte_end":10179271,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2347}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10180112,"byte_end":10180116,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7809},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10181553,"byte_end":10181558,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":7811},{"krate":0,"index":7812},{"krate":0,"index":7813},{"krate":0,"index":7814}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182419,"byte_end":10182431,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10181907,"byte_end":10181950,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10181955,"byte_end":10181958,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10181963,"byte_end":10181977,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10181982,"byte_end":10181985,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10181990,"byte_end":10181997,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182002,"byte_end":10182036,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182041,"byte_end":10182076,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182081,"byte_end":10182084,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182089,"byte_end":10182172,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182177,"byte_end":10182224,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182229,"byte_end":10182232,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182237,"byte_end":10182299,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182304,"byte_end":10182350,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182355,"byte_end":10182360,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182365,"byte_end":10182377,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182382,"byte_end":10182389,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182394,"byte_end":10182401,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183468,"byte_end":10183485,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182643,"byte_end":10182688,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182693,"byte_end":10182696,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182701,"byte_end":10182725,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182730,"byte_end":10182733,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182738,"byte_end":10182802,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182807,"byte_end":10182880,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182885,"byte_end":10182961,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182966,"byte_end":10183038,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183043,"byte_end":10183063,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183068,"byte_end":10183071,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183076,"byte_end":10183148,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183153,"byte_end":10183222,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183227,"byte_end":10183271,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183276,"byte_end":10183279,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183284,"byte_end":10183356,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183361,"byte_end":10183430,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10183435,"byte_end":10183456,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7769},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10184642,"byte_end":10184646,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7771},{"krate":0,"index":7772}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185236,"byte_end":10185241,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10184933,"byte_end":10184986,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10184991,"byte_end":10185037,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185042,"byte_end":10185045,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185050,"byte_end":10185060,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185065,"byte_end":10185068,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185073,"byte_end":10185150,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185155,"byte_end":10185224,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185560,"byte_end":10185569,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185289,"byte_end":10185360,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185365,"byte_end":10185439,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185444,"byte_end":10185519,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185524,"byte_end":10185548,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185692,"byte_end":10185699,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185634,"byte_end":10185680,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185991,"byte_end":10185998,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185746,"byte_end":10185800,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185805,"byte_end":10185808,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185813,"byte_end":10185886,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185891,"byte_end":10185963,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10185968,"byte_end":10185979,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186309,"byte_end":10186320,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186057,"byte_end":10186118,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186123,"byte_end":10186126,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186131,"byte_end":10186204,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186209,"byte_end":10186281,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186286,"byte_end":10186297,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186466,"byte_end":10186476,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186400,"byte_end":10186454,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":7718},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write.rs","byte_start":10188460,"byte_end":10188465,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":7721},{"krate":0,"index":7722},{"krate":0,"index":7723}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7665},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_all.rs","byte_start":10189603,"byte_end":10189611,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":7668},{"krate":0,"index":7669},{"krate":0,"index":7670}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7605},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_buf.rs","byte_start":10191052,"byte_end":10191060,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":7609},{"krate":0,"index":7610},{"krate":0,"index":7611}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7555},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10195821,"byte_end":10195828,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":7557},{"krate":0,"index":7558},{"krate":0,"index":7559}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7514},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10195844,"byte_end":10195851,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":7516},{"krate":0,"index":7517},{"krate":0,"index":7518}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7465},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10195867,"byte_end":10195875,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":7467},{"krate":0,"index":7468},{"krate":0,"index":7470},{"krate":0,"index":7471}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7416},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10195900,"byte_end":10195908,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":7418},{"krate":0,"index":7419},{"krate":0,"index":7421},{"krate":0,"index":7422}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7367},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10195933,"byte_end":10195941,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370},{"krate":0,"index":7372},{"krate":0,"index":7373}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7318},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10195966,"byte_end":10195975,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":7320},{"krate":0,"index":7321},{"krate":0,"index":7323},{"krate":0,"index":7324}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7269},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196003,"byte_end":10196011,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":7271},{"krate":0,"index":7272},{"krate":0,"index":7274},{"krate":0,"index":7275}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7220},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196036,"byte_end":10196044,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":7222},{"krate":0,"index":7223},{"krate":0,"index":7225},{"krate":0,"index":7226}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7171},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196069,"byte_end":10196077,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":7173},{"krate":0,"index":7174},{"krate":0,"index":7176},{"krate":0,"index":7177}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7122},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196102,"byte_end":10196111,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":7124},{"krate":0,"index":7125},{"krate":0,"index":7127},{"krate":0,"index":7128}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7073},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196139,"byte_end":10196149,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":7075},{"krate":0,"index":7076},{"krate":0,"index":7078},{"krate":0,"index":7079}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7024},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196177,"byte_end":10196187,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7029},{"krate":0,"index":7030}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6975},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196215,"byte_end":10196225,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":6977},{"krate":0,"index":6978},{"krate":0,"index":6980},{"krate":0,"index":6981}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6926},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196253,"byte_end":10196264,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":6928},{"krate":0,"index":6929},{"krate":0,"index":6931},{"krate":0,"index":6932}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6877},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196295,"byte_end":10196305,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6882},{"krate":0,"index":6883}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6828},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196333,"byte_end":10196343,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":6833},{"krate":0,"index":6834}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6779},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196371,"byte_end":10196381,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6784},{"krate":0,"index":6785}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6730},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10196409,"byte_end":10196420,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":6732},{"krate":0,"index":6733},{"krate":0,"index":6735},{"krate":0,"index":6736}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2946}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":78824,"byte_end":78842,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":78844,"byte_end":78882,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":78883,"byte_end":78886,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":78887,"byte_end":78970,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":78971,"byte_end":79036,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79037,"byte_end":79040,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79041,"byte_end":79059,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79060,"byte_end":79063,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79064,"byte_end":79152,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79153,"byte_end":79222,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79223,"byte_end":79311,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79312,"byte_end":79370,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79371,"byte_end":79434,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79435,"byte_end":79500,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79502,"byte_end":79505,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79506,"byte_end":79538,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79539,"byte_end":79567,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79568,"byte_end":79596,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79597,"byte_end":79631,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79632,"byte_end":79662,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79663,"byte_end":79697,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80919,"byte_end":80932,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80331,"byte_end":80408,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80409,"byte_end":80412,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80413,"byte_end":80422,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80423,"byte_end":80426,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80427,"byte_end":80504,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80505,"byte_end":80508,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80509,"byte_end":80522,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80523,"byte_end":80526,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80527,"byte_end":80604,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80605,"byte_end":80677,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80678,"byte_end":80747,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80748,"byte_end":80751,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80752,"byte_end":80831,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80832,"byte_end":80908,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":87372,"byte_end":87389,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":87405,"byte_end":87409,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":87470,"byte_end":87476,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":87548,"byte_end":87563,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":87674,"byte_end":87682,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":87619,"byte_end":87658,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2533},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":87924,"byte_end":87934,"line_start":268,"line_end":268,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":88224,"byte_end":88227,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":88271,"byte_end":88275,"line_start":280,"line_end":280,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":88200,"byte_end":88209,"line_start":278,"line_end":278,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2551}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\lookup_host.rs","byte_start":10197293,"byte_end":10197304,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2558},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":2559},{"krate":0,"index":2603},{"krate":0,"index":2638},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":10698},{"krate":0,"index":2723},{"krate":0,"index":2834}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10197457,"byte_end":10197478,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199332,"byte_end":10199343,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":2958}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200842,"byte_end":10200846,"line_start":97,"line_end":97,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199426,"byte_end":10199502,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199507,"byte_end":10199510,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199515,"byte_end":10199576,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199581,"byte_end":10199584,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199589,"byte_end":10199664,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199669,"byte_end":10199745,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199750,"byte_end":10199761,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199766,"byte_end":10199769,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199774,"byte_end":10199849,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199854,"byte_end":10199930,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199935,"byte_end":10200008,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200013,"byte_end":10200086,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200091,"byte_end":10200143,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200148,"byte_end":10200151,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200156,"byte_end":10200219,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200224,"byte_end":10200227,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before binding, you can use the [`TcpSocket`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200232,"byte_end":10200305,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200310,"byte_end":10200319,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200324,"byte_end":10200327,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200332,"byte_end":10200386,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200391,"byte_end":10200438,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200443,"byte_end":10200446,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200451,"byte_end":10200465,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200470,"byte_end":10200473,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200478,"byte_end":10200491,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200496,"byte_end":10200528,"line_start":83,"line_end":83,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200533,"byte_end":10200536,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200541,"byte_end":10200557,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200562,"byte_end":10200565,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200570,"byte_end":10200588,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200593,"byte_end":10200632,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200637,"byte_end":10200703,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200708,"byte_end":10200711,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200716,"byte_end":10200743,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200748,"byte_end":10200751,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200756,"byte_end":10200783,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200788,"byte_end":10200802,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200807,"byte_end":10200812,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10200817,"byte_end":10200824,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202412,"byte_end":10202418,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201557,"byte_end":10201614,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201619,"byte_end":10201622,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201627,"byte_end":10201702,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201707,"byte_end":10201777,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201782,"byte_end":10201811,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201816,"byte_end":10201819,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201824,"byte_end":10201871,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201876,"byte_end":10201879,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201884,"byte_end":10201898,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201903,"byte_end":10201906,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201911,"byte_end":10201924,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201929,"byte_end":10201961,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201966,"byte_end":10201969,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201974,"byte_end":10201990,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10201995,"byte_end":10201998,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202003,"byte_end":10202021,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202026,"byte_end":10202065,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202070,"byte_end":10202136,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202141,"byte_end":10202144,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202149,"byte_end":10202188,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202193,"byte_end":10202263,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202268,"byte_end":10202331,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202336,"byte_end":10202345,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202350,"byte_end":10202353,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202358,"byte_end":10202372,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202377,"byte_end":10202382,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202387,"byte_end":10202394,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10203086,"byte_end":10203097,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202708,"byte_end":10202771,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202776,"byte_end":10202779,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202784,"byte_end":10202860,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202865,"byte_end":10202939,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10202944,"byte_end":10203020,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10203025,"byte_end":10203074,"line_start":165,"line_end":165,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205143,"byte_end":10205151,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10203705,"byte_end":10203766,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10203771,"byte_end":10203774,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10203779,"byte_end":10203851,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10203856,"byte_end":10203932,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10203937,"byte_end":10204010,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204015,"byte_end":10204037,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204042,"byte_end":10204045,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204050,"byte_end":10204124,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204129,"byte_end":10204205,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204210,"byte_end":10204275,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204280,"byte_end":10204335,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204340,"byte_end":10204343,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204348,"byte_end":10204351,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204356,"byte_end":10204370,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204375,"byte_end":10204378,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204383,"byte_end":10204401,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204406,"byte_end":10204432,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204437,"byte_end":10204469,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204474,"byte_end":10204477,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204482,"byte_end":10204500,"line_start":202,"line_end":202,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204505,"byte_end":10204556,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204561,"byte_end":10204632,"line_start":204,"line_end":204,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204637,"byte_end":10204681,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204686,"byte_end":10204746,"line_start":206,"line_end":206,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204751,"byte_end":10204765,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204770,"byte_end":10204775,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204780,"byte_end":10204787,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204792,"byte_end":10204795,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204800,"byte_end":10204812,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204817,"byte_end":10204820,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204825,"byte_end":10204885,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204890,"byte_end":10204893,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204898,"byte_end":10204968,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10204973,"byte_end":10205046,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205051,"byte_end":10205131,"line_start":217,"line_end":217,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206245,"byte_end":10206255,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205519,"byte_end":10205580,"line_start":229,"line_end":229,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205585,"byte_end":10205588,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205593,"byte_end":10205666,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205671,"byte_end":10205705,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205710,"byte_end":10205713,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205718,"byte_end":10205732,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205737,"byte_end":10205740,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205745,"byte_end":10205763,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205768,"byte_end":10205800,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205805,"byte_end":10205808,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205813,"byte_end":10205829,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205834,"byte_end":10205889,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205894,"byte_end":10205897,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205902,"byte_end":10205920,"line_start":242,"line_end":242,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205925,"byte_end":10205964,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10205969,"byte_end":10206035,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206040,"byte_end":10206043,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206048,"byte_end":10206090,"line_start":246,"line_end":246,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206095,"byte_end":10206184,"line_start":247,"line_end":247,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206189,"byte_end":10206192,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206197,"byte_end":10206211,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206216,"byte_end":10206221,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206226,"byte_end":10206233,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206948,"byte_end":10206951,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206331,"byte_end":10206389,"line_start":256,"line_end":256,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206394,"byte_end":10206397,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206402,"byte_end":10206462,"line_start":258,"line_end":258,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206467,"byte_end":10206470,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206475,"byte_end":10206512,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206517,"byte_end":10206520,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206525,"byte_end":10206539,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206544,"byte_end":10206547,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206552,"byte_end":10206565,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206570,"byte_end":10206602,"line_start":265,"line_end":265,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206607,"byte_end":10206610,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206615,"byte_end":10206631,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206636,"byte_end":10206639,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206644,"byte_end":10206662,"line_start":269,"line_end":269,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206667,"byte_end":10206706,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206711,"byte_end":10206773,"line_start":271,"line_end":271,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206778,"byte_end":10206781,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206786,"byte_end":10206843,"line_start":273,"line_end":273,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206848,"byte_end":10206888,"line_start":274,"line_end":274,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206893,"byte_end":10206896,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206901,"byte_end":10206914,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206919,"byte_end":10206924,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10206929,"byte_end":10206936,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207580,"byte_end":10207587,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207013,"byte_end":10207071,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207076,"byte_end":10207079,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207084,"byte_end":10207160,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207165,"byte_end":10207186,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207191,"byte_end":10207194,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207199,"byte_end":10207213,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207218,"byte_end":10207221,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207226,"byte_end":10207239,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207244,"byte_end":10207276,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207281,"byte_end":10207284,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207289,"byte_end":10207305,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207310,"byte_end":10207313,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207318,"byte_end":10207336,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207341,"byte_end":10207380,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207385,"byte_end":10207448,"line_start":297,"line_end":297,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207453,"byte_end":10207456,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207461,"byte_end":10207519,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207524,"byte_end":10207527,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207532,"byte_end":10207546,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207551,"byte_end":10207556,"line_start":302,"line_end":302,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207561,"byte_end":10207568,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2959},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211713,"byte_end":10211722,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":2960}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212586,"byte_end":10212592,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211791,"byte_end":10211835,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211840,"byte_end":10211843,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211848,"byte_end":10211903,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211908,"byte_end":10211911,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211916,"byte_end":10211929,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211934,"byte_end":10211937,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211942,"byte_end":10212015,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212020,"byte_end":10212060,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212065,"byte_end":10212068,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212073,"byte_end":10212087,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212092,"byte_end":10212095,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212100,"byte_end":10212149,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212154,"byte_end":10212157,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212162,"byte_end":10212175,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212180,"byte_end":10212210,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212215,"byte_end":10212218,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212223,"byte_end":10212239,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212244,"byte_end":10212247,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212252,"byte_end":10212270,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212275,"byte_end":10212314,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212319,"byte_end":10212372,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212377,"byte_end":10212419,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212424,"byte_end":10212451,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212456,"byte_end":10212459,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212464,"byte_end":10212507,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212512,"byte_end":10212533,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212538,"byte_end":10212552,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212557,"byte_end":10212562,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212567,"byte_end":10212574,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213509,"byte_end":10213515,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212717,"byte_end":10212761,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212766,"byte_end":10212769,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212774,"byte_end":10212830,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212835,"byte_end":10212838,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212843,"byte_end":10212856,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212861,"byte_end":10212864,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212869,"byte_end":10212942,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212947,"byte_end":10212987,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10212992,"byte_end":10212995,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213000,"byte_end":10213014,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213019,"byte_end":10213022,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213027,"byte_end":10213076,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213081,"byte_end":10213084,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213089,"byte_end":10213102,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213107,"byte_end":10213137,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213142,"byte_end":10213145,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213150,"byte_end":10213166,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213171,"byte_end":10213174,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213179,"byte_end":10213197,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213202,"byte_end":10213241,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213246,"byte_end":10213295,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213300,"byte_end":10213342,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213347,"byte_end":10213374,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213379,"byte_end":10213382,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213387,"byte_end":10213430,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213435,"byte_end":10213456,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213461,"byte_end":10213475,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213480,"byte_end":10213485,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213490,"byte_end":10213497,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214330,"byte_end":10214343,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213640,"byte_end":10213690,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213695,"byte_end":10213698,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213703,"byte_end":10213768,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213773,"byte_end":10213808,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213813,"byte_end":10213816,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213821,"byte_end":10213835,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213840,"byte_end":10213843,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213848,"byte_end":10213861,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213866,"byte_end":10213896,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213901,"byte_end":10213904,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213909,"byte_end":10213925,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213930,"byte_end":10213933,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213938,"byte_end":10213956,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10213961,"byte_end":10214000,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214005,"byte_end":10214058,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214063,"byte_end":10214066,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214071,"byte_end":10214113,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214118,"byte_end":10214154,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214159,"byte_end":10214186,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214191,"byte_end":10214194,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214199,"byte_end":10214243,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214248,"byte_end":10214269,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214274,"byte_end":10214277,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214282,"byte_end":10214296,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214301,"byte_end":10214306,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214311,"byte_end":10214318,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10215042,"byte_end":10215051,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214443,"byte_end":10214504,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214509,"byte_end":10214512,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214517,"byte_end":10214531,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214536,"byte_end":10214539,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214544,"byte_end":10214557,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214562,"byte_end":10214592,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214597,"byte_end":10214600,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214605,"byte_end":10214621,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214626,"byte_end":10214629,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214634,"byte_end":10214652,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214657,"byte_end":10214696,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214701,"byte_end":10214754,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214759,"byte_end":10214762,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214767,"byte_end":10214809,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214814,"byte_end":10214850,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214855,"byte_end":10214900,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214905,"byte_end":10214932,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214937,"byte_end":10214940,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214945,"byte_end":10214989,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10214994,"byte_end":10215008,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10215013,"byte_end":10215018,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10215023,"byte_end":10215030,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217377,"byte_end":10217397,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217225,"byte_end":10217281,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217286,"byte_end":10217289,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217294,"byte_end":10217365,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218720,"byte_end":10218736,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217493,"byte_end":10217553,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217558,"byte_end":10217561,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217566,"byte_end":10217640,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217645,"byte_end":10217656,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217661,"byte_end":10217664,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217669,"byte_end":10217741,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217746,"byte_end":10217820,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217825,"byte_end":10217893,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217898,"byte_end":10217920,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217925,"byte_end":10217928,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10217933,"byte_end":10218008,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218013,"byte_end":10218084,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218089,"byte_end":10218165,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218170,"byte_end":10218189,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218194,"byte_end":10218269,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218274,"byte_end":10218349,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218354,"byte_end":10218370,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218375,"byte_end":10218440,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218445,"byte_end":10218510,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218515,"byte_end":10218587,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218592,"byte_end":10218637,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218642,"byte_end":10218645,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218650,"byte_end":10218708,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218973,"byte_end":10218993,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218818,"byte_end":10218877,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218882,"byte_end":10218885,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10218890,"byte_end":10218961,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220322,"byte_end":10220338,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219089,"byte_end":10219152,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219157,"byte_end":10219160,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219165,"byte_end":10219239,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219244,"byte_end":10219255,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219260,"byte_end":10219263,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219268,"byte_end":10219340,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219345,"byte_end":10219419,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219424,"byte_end":10219492,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219497,"byte_end":10219519,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219524,"byte_end":10219527,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219532,"byte_end":10219607,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219612,"byte_end":10219686,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219691,"byte_end":10219767,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219772,"byte_end":10219791,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219796,"byte_end":10219871,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219876,"byte_end":10219951,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219956,"byte_end":10219972,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10219977,"byte_end":10220042,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220047,"byte_end":10220112,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220117,"byte_end":10220189,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220194,"byte_end":10220239,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220244,"byte_end":10220247,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220252,"byte_end":10220310,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221046,"byte_end":10221056,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220420,"byte_end":10220461,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220466,"byte_end":10220469,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220474,"byte_end":10220523,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220528,"byte_end":10220531,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220536,"byte_end":10220550,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220555,"byte_end":10220558,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220563,"byte_end":10220576,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220581,"byte_end":10220611,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220616,"byte_end":10220619,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220624,"byte_end":10220640,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220645,"byte_end":10220648,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220653,"byte_end":10220671,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220676,"byte_end":10220715,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220720,"byte_end":10220773,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220778,"byte_end":10220781,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220786,"byte_end":10220828,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220833,"byte_end":10220860,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220865,"byte_end":10220944,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220949,"byte_end":10220993,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10220998,"byte_end":10221012,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221017,"byte_end":10221022,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221027,"byte_end":10221034,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221886,"byte_end":10221890,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221138,"byte_end":10221179,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221184,"byte_end":10221187,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221192,"byte_end":10221259,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221264,"byte_end":10221340,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221345,"byte_end":10221357,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221362,"byte_end":10221365,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221370,"byte_end":10221384,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221389,"byte_end":10221392,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221397,"byte_end":10221432,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221437,"byte_end":10221440,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221445,"byte_end":10221458,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221463,"byte_end":10221493,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221498,"byte_end":10221501,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221506,"byte_end":10221522,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221527,"byte_end":10221530,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221535,"byte_end":10221553,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221558,"byte_end":10221597,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221602,"byte_end":10221655,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221660,"byte_end":10221663,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221668,"byte_end":10221710,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221715,"byte_end":10221742,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221747,"byte_end":10221750,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221755,"byte_end":10221799,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221804,"byte_end":10221825,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221830,"byte_end":10221833,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221838,"byte_end":10221852,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221857,"byte_end":10221862,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221867,"byte_end":10221874,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222958,"byte_end":10222965,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10221977,"byte_end":10222052,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222057,"byte_end":10222060,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222065,"byte_end":10222135,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222140,"byte_end":10222209,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222214,"byte_end":10222248,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222253,"byte_end":10222256,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222261,"byte_end":10222289,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222294,"byte_end":10222297,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222302,"byte_end":10222372,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222377,"byte_end":10222453,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222458,"byte_end":10222470,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222475,"byte_end":10222478,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222483,"byte_end":10222497,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222502,"byte_end":10222505,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222510,"byte_end":10222535,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222540,"byte_end":10222543,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222548,"byte_end":10222561,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222566,"byte_end":10222596,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222601,"byte_end":10222604,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222609,"byte_end":10222625,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222630,"byte_end":10222633,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222638,"byte_end":10222656,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222661,"byte_end":10222700,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222705,"byte_end":10222758,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222763,"byte_end":10222766,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222771,"byte_end":10222813,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222818,"byte_end":10222867,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222872,"byte_end":10222891,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222896,"byte_end":10222899,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222904,"byte_end":10222918,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222923,"byte_end":10222928,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10222933,"byte_end":10222940,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224263,"byte_end":10224269,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223115,"byte_end":10223159,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223164,"byte_end":10223167,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223172,"byte_end":10223246,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223251,"byte_end":10223325,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223330,"byte_end":10223401,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operationg-system will start rejecting connections.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223406,"byte_end":10223461,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223466,"byte_end":10223469,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223474,"byte_end":10223522,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223527,"byte_end":10223530,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223535,"byte_end":10223611,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223616,"byte_end":10223691,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223696,"byte_end":10223742,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223747,"byte_end":10223750,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223755,"byte_end":10223769,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223774,"byte_end":10223777,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223782,"byte_end":10223809,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223814,"byte_end":10223817,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223822,"byte_end":10223835,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223840,"byte_end":10223870,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223875,"byte_end":10223878,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223883,"byte_end":10223899,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223904,"byte_end":10223907,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223912,"byte_end":10223930,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223935,"byte_end":10223974,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10223979,"byte_end":10224032,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224037,"byte_end":10224040,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224045,"byte_end":10224087,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224092,"byte_end":10224119,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224124,"byte_end":10224127,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224132,"byte_end":10224176,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224181,"byte_end":10224202,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224207,"byte_end":10224210,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224215,"byte_end":10224229,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224234,"byte_end":10224239,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224244,"byte_end":10224251,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2961},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226615,"byte_end":10226623,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226282,"byte_end":10226346,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226347,"byte_end":10226350,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226351,"byte_end":10226439,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226440,"byte_end":10226467,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226468,"byte_end":10226471,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226472,"byte_end":10226500,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226501,"byte_end":10226534,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226535,"byte_end":10226586,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2968},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227237,"byte_end":10227246,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226645,"byte_end":10226710,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226711,"byte_end":10226714,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226715,"byte_end":10226801,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226802,"byte_end":10226854,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226855,"byte_end":10226858,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226859,"byte_end":10226940,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226941,"byte_end":10226976,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226977,"byte_end":10226980,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10226981,"byte_end":10227009,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227010,"byte_end":10227043,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227044,"byte_end":10227091,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227092,"byte_end":10227154,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227155,"byte_end":10227208,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228562,"byte_end":10228571,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227420,"byte_end":10227494,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227499,"byte_end":10227572,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227577,"byte_end":10227591,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227596,"byte_end":10227599,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227604,"byte_end":10227675,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227680,"byte_end":10227754,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227759,"byte_end":10227783,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227788,"byte_end":10227791,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227796,"byte_end":10227869,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227874,"byte_end":10227877,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227882,"byte_end":10227896,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227901,"byte_end":10227904,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227909,"byte_end":10227922,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227927,"byte_end":10227962,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227967,"byte_end":10227997,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228002,"byte_end":10228005,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228010,"byte_end":10228043,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228048,"byte_end":10228051,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228056,"byte_end":10228074,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228079,"byte_end":10228118,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228123,"byte_end":10228192,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228197,"byte_end":10228245,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228250,"byte_end":10228280,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228285,"byte_end":10228330,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228335,"byte_end":10228338,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228343,"byte_end":10228365,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228370,"byte_end":10228415,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228420,"byte_end":10228438,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228443,"byte_end":10228446,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228451,"byte_end":10228465,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228470,"byte_end":10228475,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228480,"byte_end":10228487,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228492,"byte_end":10228495,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228500,"byte_end":10228550,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10230031,"byte_end":10230035,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228733,"byte_end":10228803,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228808,"byte_end":10228877,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228882,"byte_end":10228921,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228926,"byte_end":10228929,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10228934,"byte_end":10229002,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229007,"byte_end":10229010,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229015,"byte_end":10229055,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229060,"byte_end":10229063,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229068,"byte_end":10229082,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229087,"byte_end":10229090,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229095,"byte_end":10229108,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229113,"byte_end":10229143,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229148,"byte_end":10229180,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229185,"byte_end":10229211,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229216,"byte_end":10229219,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229224,"byte_end":10229242,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229247,"byte_end":10229298,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229303,"byte_end":10229331,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229336,"byte_end":10229405,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229410,"byte_end":10229458,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229463,"byte_end":10229466,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229471,"byte_end":10229500,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229505,"byte_end":10229534,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229539,"byte_end":10229542,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229547,"byte_end":10229574,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229579,"byte_end":10229626,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229631,"byte_end":10229634,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229639,"byte_end":10229663,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229668,"byte_end":10229727,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229732,"byte_end":10229771,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229776,"byte_end":10229779,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229784,"byte_end":10229798,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229803,"byte_end":10229808,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229813,"byte_end":10229820,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229825,"byte_end":10229828,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229833,"byte_end":10229898,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229903,"byte_end":10229906,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229911,"byte_end":10229957,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10229962,"byte_end":10230013,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2975},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232565,"byte_end":10232578,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":2976}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232214,"byte_end":10232280,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232281,"byte_end":10232284,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232285,"byte_end":10232372,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232373,"byte_end":10232407,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232408,"byte_end":10232411,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232412,"byte_end":10232440,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232441,"byte_end":10232484,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232485,"byte_end":10232536,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10233304,"byte_end":10233318,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":2980},{"krate":0,"index":2981}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232611,"byte_end":10232678,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232679,"byte_end":10232682,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232683,"byte_end":10232770,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232771,"byte_end":10232848,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232849,"byte_end":10232906,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232907,"byte_end":10232910,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232911,"byte_end":10232997,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10232998,"byte_end":10233033,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10233034,"byte_end":10233037,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10233038,"byte_end":10233066,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10233067,"byte_end":10233110,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10233111,"byte_end":10233158,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10233159,"byte_end":10233221,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10233222,"byte_end":10233275,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234283,"byte_end":10234295,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234151,"byte_end":10234233,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234234,"byte_end":10234254,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234296,"byte_end":10234313,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":2984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2987},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234315,"byte_end":10234333,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":2984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234879,"byte_end":10234886,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234616,"byte_end":10234685,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234690,"byte_end":10234754,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234759,"byte_end":10234811,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234816,"byte_end":10234819,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234824,"byte_end":10234867,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236136,"byte_end":10236145,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234993,"byte_end":10235067,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235072,"byte_end":10235145,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235150,"byte_end":10235164,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235169,"byte_end":10235172,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235177,"byte_end":10235248,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235253,"byte_end":10235327,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235332,"byte_end":10235356,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235361,"byte_end":10235364,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235369,"byte_end":10235442,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235447,"byte_end":10235450,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235455,"byte_end":10235469,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235474,"byte_end":10235477,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235482,"byte_end":10235495,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235500,"byte_end":10235535,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235540,"byte_end":10235570,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235575,"byte_end":10235578,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235583,"byte_end":10235616,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235621,"byte_end":10235624,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235629,"byte_end":10235647,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235652,"byte_end":10235691,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235696,"byte_end":10235761,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235766,"byte_end":10235819,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235824,"byte_end":10235854,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235859,"byte_end":10235904,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235909,"byte_end":10235912,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235917,"byte_end":10235939,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235944,"byte_end":10235989,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10235994,"byte_end":10236012,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236017,"byte_end":10236020,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236025,"byte_end":10236039,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236044,"byte_end":10236049,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236054,"byte_end":10236061,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236066,"byte_end":10236069,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236074,"byte_end":10236124,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237610,"byte_end":10237614,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236311,"byte_end":10236381,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236386,"byte_end":10236455,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236460,"byte_end":10236499,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236504,"byte_end":10236507,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236512,"byte_end":10236580,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236585,"byte_end":10236588,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236593,"byte_end":10236633,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236638,"byte_end":10236641,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236646,"byte_end":10236660,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236665,"byte_end":10236668,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236673,"byte_end":10236686,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236691,"byte_end":10236721,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236726,"byte_end":10236758,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236763,"byte_end":10236789,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236794,"byte_end":10236797,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236802,"byte_end":10236820,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236825,"byte_end":10236876,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236881,"byte_end":10236909,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236914,"byte_end":10236979,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10236984,"byte_end":10237037,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237042,"byte_end":10237045,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237050,"byte_end":10237079,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237084,"byte_end":10237113,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237118,"byte_end":10237121,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237126,"byte_end":10237153,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237158,"byte_end":10237205,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237210,"byte_end":10237213,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237218,"byte_end":10237242,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237247,"byte_end":10237306,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237311,"byte_end":10237350,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237355,"byte_end":10237358,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237363,"byte_end":10237377,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237382,"byte_end":10237387,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237392,"byte_end":10237399,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237404,"byte_end":10237407,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237412,"byte_end":10237477,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237482,"byte_end":10237485,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237490,"byte_end":10237536,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237541,"byte_end":10237592,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238289,"byte_end":10238296,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238026,"byte_end":10238095,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238100,"byte_end":10238164,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238169,"byte_end":10238221,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238226,"byte_end":10238229,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238234,"byte_end":10238277,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238601,"byte_end":10238607,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238402,"byte_end":10238474,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238479,"byte_end":10238548,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238553,"byte_end":10238589,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2991},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10242679,"byte_end":10242688,"line_start":72,"line_end":72,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":2992}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10244209,"byte_end":10244216,"line_start":116,"line_end":116,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10242767,"byte_end":10242811,"line_start":78,"line_end":78,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10242816,"byte_end":10242819,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10242824,"byte_end":10242898,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address.  If `addr`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10242903,"byte_end":10242973,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ yields multiple addresses, connect will be attempted with each of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10242978,"byte_end":10243051,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ addresses until a connection is successful. If none of the addresses","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243056,"byte_end":10243128,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ result in a successful connection, the error returned from the last","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243133,"byte_end":10243204,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243209,"byte_end":10243263,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243268,"byte_end":10243271,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before connecting, you can use the [`TcpSocket`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243276,"byte_end":10243352,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243357,"byte_end":10243366,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243371,"byte_end":10243374,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243379,"byte_end":10243433,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243438,"byte_end":10243485,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243490,"byte_end":10243493,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243498,"byte_end":10243512,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243517,"byte_end":10243520,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243525,"byte_end":10243538,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243543,"byte_end":10243573,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243578,"byte_end":10243611,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243616,"byte_end":10243642,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243647,"byte_end":10243650,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243655,"byte_end":10243673,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243678,"byte_end":10243729,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243734,"byte_end":10243762,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243767,"byte_end":10243836,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243841,"byte_end":10243844,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243849,"byte_end":10243876,"line_start":105,"line_end":105,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243881,"byte_end":10243930,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243935,"byte_end":10243938,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243943,"byte_end":10243957,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243962,"byte_end":10243967,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243972,"byte_end":10243979,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243984,"byte_end":10243987,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10243992,"byte_end":10244063,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10244068,"byte_end":10244071,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10244076,"byte_end":10244133,"line_start":114,"line_end":114,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10244138,"byte_end":10244191,"line_start":115,"line_end":115,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246940,"byte_end":10246948,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10245823,"byte_end":10245880,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10245885,"byte_end":10245888,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10245893,"byte_end":10245963,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10245968,"byte_end":10246044,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246049,"byte_end":10246120,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246125,"byte_end":10246147,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246152,"byte_end":10246155,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246160,"byte_end":10246174,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246179,"byte_end":10246182,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246187,"byte_end":10246205,"line_start":174,"line_end":174,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246210,"byte_end":10246236,"line_start":175,"line_end":175,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246241,"byte_end":10246271,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246276,"byte_end":10246279,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246284,"byte_end":10246302,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246307,"byte_end":10246358,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246363,"byte_end":10246437,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246442,"byte_end":10246484,"line_start":181,"line_end":181,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246489,"byte_end":10246543,"line_start":182,"line_end":182,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246548,"byte_end":10246562,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246567,"byte_end":10246572,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246577,"byte_end":10246584,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246589,"byte_end":10246592,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246597,"byte_end":10246609,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246614,"byte_end":10246617,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246622,"byte_end":10246682,"line_start":189,"line_end":189,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246687,"byte_end":10246690,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246695,"byte_end":10246765,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246770,"byte_end":10246843,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10246848,"byte_end":10246928,"line_start":193,"line_end":193,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248590,"byte_end":10248598,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247141,"byte_end":10247209,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247214,"byte_end":10247217,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have `nonblocking mode` set as `true`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247222,"byte_end":10247306,"line_start":202,"line_end":202,"column_start":5,"column_end":89}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247311,"byte_end":10247377,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247382,"byte_end":10247385,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247390,"byte_end":10247404,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247409,"byte_end":10247412,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247417,"byte_end":10247424,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247429,"byte_end":10247455,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247460,"byte_end":10247482,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247487,"byte_end":10247519,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247524,"byte_end":10247556,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247561,"byte_end":10247596,"line_start":212,"line_end":212,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247601,"byte_end":10247604,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247609,"byte_end":10247627,"line_start":214,"line_end":214,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247632,"byte_end":10247683,"line_start":215,"line_end":215,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247688,"byte_end":10247721,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247726,"byte_end":10247793,"line_start":217,"line_end":217,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247798,"byte_end":10247839,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247844,"byte_end":10247937,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10247942,"byte_end":10247999,"line_start":220,"line_end":220,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248004,"byte_end":10248015,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248020,"byte_end":10248081,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248086,"byte_end":10248148,"line_start":223,"line_end":223,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248153,"byte_end":10248219,"line_start":224,"line_end":224,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248224,"byte_end":10248271,"line_start":225,"line_end":225,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248276,"byte_end":10248322,"line_start":226,"line_end":226,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248327,"byte_end":10248370,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248375,"byte_end":10248389,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248394,"byte_end":10248399,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248404,"byte_end":10248411,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248416,"byte_end":10248456,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248461,"byte_end":10248509,"line_start":232,"line_end":232,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10248514,"byte_end":10248578,"line_start":233,"line_end":233,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249508,"byte_end":10249518,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249109,"byte_end":10249168,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249173,"byte_end":10249176,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249181,"byte_end":10249195,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249200,"byte_end":10249203,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249208,"byte_end":10249221,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249226,"byte_end":10249256,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249261,"byte_end":10249264,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249269,"byte_end":10249333,"line_start":259,"line_end":259,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249338,"byte_end":10249399,"line_start":260,"line_end":260,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249404,"byte_end":10249407,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249412,"byte_end":10249455,"line_start":262,"line_end":262,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249460,"byte_end":10249472,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249477,"byte_end":10249484,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249489,"byte_end":10249496,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249997,"byte_end":10250006,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249594,"byte_end":10249658,"line_start":270,"line_end":270,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249663,"byte_end":10249666,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249671,"byte_end":10249685,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249690,"byte_end":10249693,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249698,"byte_end":10249711,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249716,"byte_end":10249746,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249751,"byte_end":10249754,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249759,"byte_end":10249823,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249828,"byte_end":10249889,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249894,"byte_end":10249897,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249902,"byte_end":10249944,"line_start":280,"line_end":280,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249949,"byte_end":10249961,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249966,"byte_end":10249973,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10249978,"byte_end":10249985,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251497,"byte_end":10251506,"line_start":330,"line_end":330,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250081,"byte_end":10250156,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250161,"byte_end":10250234,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250239,"byte_end":10250253,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250258,"byte_end":10250261,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250266,"byte_end":10250328,"line_start":292,"line_end":292,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250333,"byte_end":10250405,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250410,"byte_end":10250474,"line_start":294,"line_end":294,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250479,"byte_end":10250533,"line_start":295,"line_end":295,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250538,"byte_end":10250541,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250546,"byte_end":10250564,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250569,"byte_end":10250572,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250577,"byte_end":10250602,"line_start":299,"line_end":299,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250607,"byte_end":10250610,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250615,"byte_end":10250666,"line_start":301,"line_end":301,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250671,"byte_end":10250754,"line_start":302,"line_end":302,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250759,"byte_end":10250814,"line_start":303,"line_end":303,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250819,"byte_end":10250822,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250827,"byte_end":10250839,"line_start":305,"line_end":305,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250844,"byte_end":10250847,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250852,"byte_end":10250927,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250932,"byte_end":10250935,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250940,"byte_end":10250954,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250959,"byte_end":10250962,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250967,"byte_end":10250980,"line_start":311,"line_end":311,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10250985,"byte_end":10251020,"line_start":312,"line_end":312,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251025,"byte_end":10251055,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251060,"byte_end":10251063,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251068,"byte_end":10251101,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251106,"byte_end":10251109,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251114,"byte_end":10251132,"line_start":317,"line_end":317,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251137,"byte_end":10251176,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251181,"byte_end":10251246,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251251,"byte_end":10251281,"line_start":320,"line_end":320,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251286,"byte_end":10251331,"line_start":321,"line_end":321,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251336,"byte_end":10251339,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251344,"byte_end":10251366,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251371,"byte_end":10251413,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251418,"byte_end":10251436,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251441,"byte_end":10251444,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251449,"byte_end":10251463,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251468,"byte_end":10251473,"line_start":328,"line_end":328,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10251478,"byte_end":10251485,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254578,"byte_end":10254583,"line_start":416,"line_end":416,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252313,"byte_end":10252360,"line_start":356,"line_end":356,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252365,"byte_end":10252368,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252373,"byte_end":10252447,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252452,"byte_end":10252527,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252532,"byte_end":10252570,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252575,"byte_end":10252578,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252583,"byte_end":10252597,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252602,"byte_end":10252605,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252610,"byte_end":10252680,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252685,"byte_end":10252699,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252704,"byte_end":10252707,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252712,"byte_end":10252725,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252730,"byte_end":10252758,"line_start":368,"line_end":368,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252763,"byte_end":10252793,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252798,"byte_end":10252824,"line_start":370,"line_end":370,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252829,"byte_end":10252845,"line_start":371,"line_end":371,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252850,"byte_end":10252853,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252858,"byte_end":10252876,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252881,"byte_end":10252932,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10252937,"byte_end":10253002,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253007,"byte_end":10253010,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253015,"byte_end":10253029,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253034,"byte_end":10253119,"line_start":378,"line_end":378,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253124,"byte_end":10253127,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253132,"byte_end":10253168,"line_start":380,"line_end":380,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253173,"byte_end":10253218,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253223,"byte_end":10253297,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253302,"byte_end":10253364,"line_start":383,"line_end":383,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253369,"byte_end":10253419,"line_start":384,"line_end":384,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253424,"byte_end":10253454,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253459,"byte_end":10253520,"line_start":386,"line_end":386,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253525,"byte_end":10253546,"line_start":387,"line_end":387,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253551,"byte_end":10253627,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253632,"byte_end":10253665,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253670,"byte_end":10253691,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253696,"byte_end":10253727,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253732,"byte_end":10253777,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253782,"byte_end":10253803,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253808,"byte_end":10253825,"line_start":394,"line_end":394,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253830,"byte_end":10253833,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253838,"byte_end":10253851,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253856,"byte_end":10253859,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253864,"byte_end":10253900,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253905,"byte_end":10253980,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10253985,"byte_end":10254047,"line_start":400,"line_end":400,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254052,"byte_end":10254108,"line_start":401,"line_end":401,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254113,"byte_end":10254143,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254148,"byte_end":10254202,"line_start":403,"line_end":403,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254207,"byte_end":10254228,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254233,"byte_end":10254309,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254314,"byte_end":10254346,"line_start":406,"line_end":406,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254351,"byte_end":10254372,"line_start":407,"line_end":407,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254377,"byte_end":10254408,"line_start":408,"line_end":408,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254413,"byte_end":10254458,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254463,"byte_end":10254484,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254489,"byte_end":10254506,"line_start":411,"line_end":411,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254511,"byte_end":10254524,"line_start":412,"line_end":412,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254529,"byte_end":10254538,"line_start":413,"line_end":413,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254543,"byte_end":10254548,"line_start":414,"line_end":414,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254553,"byte_end":10254560,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256103,"byte_end":10256111,"line_start":464,"line_end":464,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254740,"byte_end":10254783,"line_start":421,"line_end":421,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254788,"byte_end":10254791,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254796,"byte_end":10254873,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254878,"byte_end":10254907,"line_start":424,"line_end":424,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254912,"byte_end":10254915,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254920,"byte_end":10254934,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254939,"byte_end":10254942,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254947,"byte_end":10254960,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10254965,"byte_end":10254995,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255000,"byte_end":10255026,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255031,"byte_end":10255047,"line_start":431,"line_end":431,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255052,"byte_end":10255055,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255060,"byte_end":10255078,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255083,"byte_end":10255134,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255139,"byte_end":10255167,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255172,"byte_end":10255237,"line_start":436,"line_end":436,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255242,"byte_end":10255245,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255250,"byte_end":10255286,"line_start":438,"line_end":438,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255291,"byte_end":10255294,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255299,"byte_end":10255313,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255318,"byte_end":10255367,"line_start":441,"line_end":441,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255372,"byte_end":10255409,"line_start":442,"line_end":442,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255414,"byte_end":10255417,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255422,"byte_end":10255492,"line_start":444,"line_end":444,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255497,"byte_end":10255555,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255560,"byte_end":10255605,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255610,"byte_end":10255636,"line_start":447,"line_end":447,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255641,"byte_end":10255677,"line_start":448,"line_end":448,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255682,"byte_end":10255708,"line_start":449,"line_end":449,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255713,"byte_end":10255730,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255735,"byte_end":10255807,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255812,"byte_end":10255841,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255846,"byte_end":10255863,"line_start":453,"line_end":453,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255868,"byte_end":10255895,"line_start":454,"line_end":454,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255900,"byte_end":10255941,"line_start":455,"line_end":455,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255946,"byte_end":10255963,"line_start":456,"line_end":456,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255968,"byte_end":10255981,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10255986,"byte_end":10255995,"line_start":458,"line_end":458,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256000,"byte_end":10256003,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256008,"byte_end":10256044,"line_start":460,"line_end":460,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256049,"byte_end":10256063,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256068,"byte_end":10256073,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256078,"byte_end":10256085,"line_start":463,"line_end":463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257483,"byte_end":10257498,"line_start":498,"line_end":498,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256212,"byte_end":10256241,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256246,"byte_end":10256249,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256254,"byte_end":10256328,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256333,"byte_end":10256407,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256412,"byte_end":10256485,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256490,"byte_end":10256500,"line_start":474,"line_end":474,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256505,"byte_end":10256508,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256513,"byte_end":10256581,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256586,"byte_end":10256657,"line_start":477,"line_end":477,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256662,"byte_end":10256721,"line_start":478,"line_end":478,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256726,"byte_end":10256786,"line_start":479,"line_end":479,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256791,"byte_end":10256794,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256799,"byte_end":10256874,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256879,"byte_end":10256954,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10256959,"byte_end":10257027,"line_start":483,"line_end":483,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257032,"byte_end":10257035,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257040,"byte_end":10257058,"line_start":485,"line_end":485,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257063,"byte_end":10257066,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257071,"byte_end":10257096,"line_start":487,"line_end":487,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257101,"byte_end":10257104,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257109,"byte_end":10257174,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257179,"byte_end":10257246,"line_start":490,"line_end":490,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257251,"byte_end":10257306,"line_start":491,"line_end":491,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257311,"byte_end":10257314,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257319,"byte_end":10257331,"line_start":493,"line_end":493,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257336,"byte_end":10257339,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257344,"byte_end":10257419,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257424,"byte_end":10257427,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257432,"byte_end":10257471,"line_start":497,"line_end":497,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259834,"byte_end":10259842,"line_start":561,"line_end":561,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257631,"byte_end":10257707,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257712,"byte_end":10257737,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257742,"byte_end":10257745,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257750,"byte_end":10257826,"line_start":505,"line_end":505,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257831,"byte_end":10257899,"line_start":506,"line_end":506,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257904,"byte_end":10257978,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10257983,"byte_end":10258038,"line_start":508,"line_end":508,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258043,"byte_end":10258046,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258051,"byte_end":10258121,"line_start":510,"line_end":510,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258126,"byte_end":10258129,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258134,"byte_end":10258175,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258180,"byte_end":10258215,"line_start":513,"line_end":513,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258220,"byte_end":10258223,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258228,"byte_end":10258240,"line_start":515,"line_end":515,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258245,"byte_end":10258248,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258253,"byte_end":10258324,"line_start":517,"line_end":517,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258329,"byte_end":10258405,"line_start":518,"line_end":518,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258410,"byte_end":10258484,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258489,"byte_end":10258538,"line_start":520,"line_end":520,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258543,"byte_end":10258546,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258551,"byte_end":10258565,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258570,"byte_end":10258573,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258578,"byte_end":10258591,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258596,"byte_end":10258626,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258631,"byte_end":10258657,"line_start":526,"line_end":526,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258662,"byte_end":10258678,"line_start":527,"line_end":527,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258683,"byte_end":10258686,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258691,"byte_end":10258709,"line_start":529,"line_end":529,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258714,"byte_end":10258765,"line_start":530,"line_end":530,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258770,"byte_end":10258798,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258803,"byte_end":10258868,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258873,"byte_end":10258876,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258881,"byte_end":10258895,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258900,"byte_end":10258949,"line_start":535,"line_end":535,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258954,"byte_end":10258991,"line_start":536,"line_end":536,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10258996,"byte_end":10258999,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259004,"byte_end":10259077,"line_start":538,"line_end":538,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259082,"byte_end":10259128,"line_start":539,"line_end":539,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259133,"byte_end":10259169,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259174,"byte_end":10259177,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259182,"byte_end":10259252,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259257,"byte_end":10259315,"line_start":543,"line_end":543,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259320,"byte_end":10259365,"line_start":544,"line_end":544,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259370,"byte_end":10259401,"line_start":545,"line_end":545,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259406,"byte_end":10259432,"line_start":546,"line_end":546,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259437,"byte_end":10259486,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259491,"byte_end":10259508,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259513,"byte_end":10259585,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259590,"byte_end":10259619,"line_start":550,"line_end":550,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259624,"byte_end":10259641,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259646,"byte_end":10259673,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259678,"byte_end":10259719,"line_start":553,"line_end":553,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259724,"byte_end":10259741,"line_start":554,"line_end":554,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259746,"byte_end":10259759,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259764,"byte_end":10259773,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259778,"byte_end":10259781,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259786,"byte_end":10259800,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259805,"byte_end":10259810,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10259815,"byte_end":10259822,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10262426,"byte_end":10262438,"line_start":627,"line_end":627,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<TcpStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264317,"byte_end":10264325,"line_start":687,"line_end":687,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263076,"byte_end":10263119,"line_start":648,"line_end":648,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263124,"byte_end":10263127,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263132,"byte_end":10263209,"line_start":650,"line_end":650,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263214,"byte_end":10263244,"line_start":651,"line_end":651,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263249,"byte_end":10263252,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263257,"byte_end":10263271,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263276,"byte_end":10263279,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263284,"byte_end":10263297,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263302,"byte_end":10263332,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263337,"byte_end":10263363,"line_start":657,"line_end":657,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263368,"byte_end":10263384,"line_start":658,"line_end":658,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263389,"byte_end":10263392,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263397,"byte_end":10263415,"line_start":660,"line_end":660,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263420,"byte_end":10263471,"line_start":661,"line_end":661,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263476,"byte_end":10263504,"line_start":662,"line_end":662,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263509,"byte_end":10263574,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263579,"byte_end":10263582,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263587,"byte_end":10263601,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263606,"byte_end":10263655,"line_start":666,"line_end":666,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263660,"byte_end":10263697,"line_start":667,"line_end":667,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263702,"byte_end":10263705,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263710,"byte_end":10263781,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263786,"byte_end":10263844,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263849,"byte_end":10263901,"line_start":671,"line_end":671,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263906,"byte_end":10263932,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263937,"byte_end":10263963,"line_start":673,"line_end":673,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263968,"byte_end":10263985,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10263990,"byte_end":10264062,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264067,"byte_end":10264096,"line_start":676,"line_end":676,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264101,"byte_end":10264118,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264123,"byte_end":10264150,"line_start":678,"line_end":678,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264155,"byte_end":10264196,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264201,"byte_end":10264218,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264223,"byte_end":10264236,"line_start":681,"line_end":681,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264241,"byte_end":10264250,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264255,"byte_end":10264258,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264263,"byte_end":10264277,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264282,"byte_end":10264287,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264292,"byte_end":10264299,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265686,"byte_end":10265702,"line_start":721,"line_end":721,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264426,"byte_end":10264456,"line_start":692,"line_end":692,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264461,"byte_end":10264464,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264469,"byte_end":10264543,"line_start":694,"line_end":694,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264548,"byte_end":10264622,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264627,"byte_end":10264700,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264705,"byte_end":10264715,"line_start":697,"line_end":697,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264720,"byte_end":10264723,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264728,"byte_end":10264803,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264808,"byte_end":10264876,"line_start":700,"line_end":700,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264881,"byte_end":10264953,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264958,"byte_end":10264989,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10264994,"byte_end":10264997,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265002,"byte_end":10265077,"line_start":704,"line_end":704,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265082,"byte_end":10265157,"line_start":705,"line_end":705,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265162,"byte_end":10265230,"line_start":706,"line_end":706,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265235,"byte_end":10265238,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265243,"byte_end":10265261,"line_start":708,"line_end":708,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265266,"byte_end":10265269,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265274,"byte_end":10265299,"line_start":710,"line_end":710,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265304,"byte_end":10265307,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265312,"byte_end":10265377,"line_start":712,"line_end":712,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265382,"byte_end":10265449,"line_start":713,"line_end":713,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265454,"byte_end":10265509,"line_start":714,"line_end":714,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265514,"byte_end":10265517,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265522,"byte_end":10265534,"line_start":716,"line_end":716,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265539,"byte_end":10265542,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265547,"byte_end":10265622,"line_start":718,"line_end":718,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265627,"byte_end":10265630,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265635,"byte_end":10265674,"line_start":720,"line_end":720,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267431,"byte_end":10267440,"line_start":773,"line_end":773,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265836,"byte_end":10265906,"line_start":725,"line_end":725,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265911,"byte_end":10265923,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265928,"byte_end":10265931,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10265936,"byte_end":10266008,"line_start":728,"line_end":728,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266013,"byte_end":10266056,"line_start":729,"line_end":729,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266061,"byte_end":10266064,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266069,"byte_end":10266123,"line_start":731,"line_end":731,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266128,"byte_end":10266131,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266136,"byte_end":10266148,"line_start":733,"line_end":733,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266153,"byte_end":10266156,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266161,"byte_end":10266235,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266240,"byte_end":10266310,"line_start":736,"line_end":736,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266315,"byte_end":10266364,"line_start":737,"line_end":737,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266369,"byte_end":10266372,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266377,"byte_end":10266391,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266396,"byte_end":10266399,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266404,"byte_end":10266417,"line_start":741,"line_end":741,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266422,"byte_end":10266452,"line_start":742,"line_end":742,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266457,"byte_end":10266483,"line_start":743,"line_end":743,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266488,"byte_end":10266504,"line_start":744,"line_end":744,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266509,"byte_end":10266512,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266517,"byte_end":10266535,"line_start":746,"line_end":746,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266540,"byte_end":10266591,"line_start":747,"line_end":747,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266596,"byte_end":10266624,"line_start":748,"line_end":748,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266629,"byte_end":10266694,"line_start":749,"line_end":749,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266699,"byte_end":10266702,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266707,"byte_end":10266721,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266726,"byte_end":10266775,"line_start":752,"line_end":752,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266780,"byte_end":10266817,"line_start":753,"line_end":753,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266822,"byte_end":10266825,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266830,"byte_end":10266901,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266906,"byte_end":10266964,"line_start":756,"line_end":756,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10266969,"byte_end":10267021,"line_start":757,"line_end":757,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267026,"byte_end":10267052,"line_start":758,"line_end":758,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267057,"byte_end":10267083,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267088,"byte_end":10267105,"line_start":760,"line_end":760,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267110,"byte_end":10267182,"line_start":761,"line_end":761,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267187,"byte_end":10267216,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267221,"byte_end":10267238,"line_start":763,"line_end":763,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267243,"byte_end":10267270,"line_start":764,"line_end":764,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267275,"byte_end":10267316,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267321,"byte_end":10267338,"line_start":766,"line_end":766,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267343,"byte_end":10267356,"line_start":767,"line_end":767,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267361,"byte_end":10267370,"line_start":768,"line_end":768,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267375,"byte_end":10267378,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267383,"byte_end":10267397,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267402,"byte_end":10267407,"line_start":771,"line_end":771,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267412,"byte_end":10267419,"line_start":772,"line_end":772,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268891,"byte_end":10268895,"line_start":818,"line_end":818,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267634,"byte_end":10267704,"line_start":781,"line_end":781,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267709,"byte_end":10267778,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267783,"byte_end":10267822,"line_start":783,"line_end":783,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267827,"byte_end":10267830,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267835,"byte_end":10267909,"line_start":785,"line_end":785,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267914,"byte_end":10267974,"line_start":786,"line_end":786,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267979,"byte_end":10267982,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10267987,"byte_end":10268001,"line_start":788,"line_end":788,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268006,"byte_end":10268009,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268014,"byte_end":10268027,"line_start":790,"line_end":790,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268032,"byte_end":10268062,"line_start":791,"line_end":791,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268067,"byte_end":10268099,"line_start":792,"line_end":792,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268104,"byte_end":10268130,"line_start":793,"line_end":793,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268135,"byte_end":10268138,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268143,"byte_end":10268161,"line_start":795,"line_end":795,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268166,"byte_end":10268217,"line_start":796,"line_end":796,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268222,"byte_end":10268250,"line_start":797,"line_end":797,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268255,"byte_end":10268324,"line_start":798,"line_end":798,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268329,"byte_end":10268332,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268337,"byte_end":10268366,"line_start":800,"line_end":800,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268371,"byte_end":10268400,"line_start":801,"line_end":801,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268405,"byte_end":10268408,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268413,"byte_end":10268440,"line_start":803,"line_end":803,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268445,"byte_end":10268489,"line_start":804,"line_end":804,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268494,"byte_end":10268497,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268502,"byte_end":10268526,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268531,"byte_end":10268587,"line_start":807,"line_end":807,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268592,"byte_end":10268631,"line_start":808,"line_end":808,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268636,"byte_end":10268639,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268644,"byte_end":10268658,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268663,"byte_end":10268668,"line_start":811,"line_end":811,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268673,"byte_end":10268680,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268685,"byte_end":10268688,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268693,"byte_end":10268758,"line_start":814,"line_end":814,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268763,"byte_end":10268766,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268771,"byte_end":10268817,"line_start":816,"line_end":816,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10268822,"byte_end":10268873,"line_start":817,"line_end":817,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269990,"byte_end":10269997,"line_start":852,"line_end":852,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269458,"byte_end":10269520,"line_start":834,"line_end":834,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269525,"byte_end":10269528,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269533,"byte_end":10269597,"line_start":836,"line_end":836,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269602,"byte_end":10269605,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269610,"byte_end":10269653,"line_start":838,"line_end":838,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269658,"byte_end":10269661,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269666,"byte_end":10269680,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269685,"byte_end":10269688,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269693,"byte_end":10269706,"line_start":842,"line_end":842,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269711,"byte_end":10269741,"line_start":843,"line_end":843,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269746,"byte_end":10269749,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269754,"byte_end":10269818,"line_start":845,"line_end":845,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269823,"byte_end":10269884,"line_start":846,"line_end":846,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269889,"byte_end":10269892,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269897,"byte_end":10269937,"line_start":848,"line_end":848,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269942,"byte_end":10269954,"line_start":849,"line_end":849,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269959,"byte_end":10269966,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10269971,"byte_end":10269978,"line_start":851,"line_end":851,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270794,"byte_end":10270805,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270064,"byte_end":10270126,"line_start":856,"line_end":856,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270131,"byte_end":10270134,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270139,"byte_end":10270208,"line_start":858,"line_end":858,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270213,"byte_end":10270286,"line_start":859,"line_end":859,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270291,"byte_end":10270364,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270369,"byte_end":10270444,"line_start":861,"line_end":861,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270449,"byte_end":10270467,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270472,"byte_end":10270475,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270480,"byte_end":10270494,"line_start":864,"line_end":864,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270499,"byte_end":10270502,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270507,"byte_end":10270520,"line_start":866,"line_end":866,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270525,"byte_end":10270555,"line_start":867,"line_end":867,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270560,"byte_end":10270563,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270568,"byte_end":10270632,"line_start":869,"line_end":869,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270637,"byte_end":10270698,"line_start":870,"line_end":870,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270703,"byte_end":10270706,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270711,"byte_end":10270741,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270746,"byte_end":10270758,"line_start":873,"line_end":873,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270763,"byte_end":10270770,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270775,"byte_end":10270782,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271450,"byte_end":10271456,"line_start":899,"line_end":899,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270896,"byte_end":10270968,"line_start":880,"line_end":880,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270973,"byte_end":10270984,"line_start":881,"line_end":881,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270989,"byte_end":10270992,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10270997,"byte_end":10271060,"line_start":883,"line_end":883,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271065,"byte_end":10271068,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271073,"byte_end":10271114,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271119,"byte_end":10271122,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271127,"byte_end":10271141,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271146,"byte_end":10271149,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271154,"byte_end":10271167,"line_start":889,"line_end":889,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271172,"byte_end":10271202,"line_start":890,"line_end":890,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271207,"byte_end":10271210,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271215,"byte_end":10271279,"line_start":892,"line_end":892,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271284,"byte_end":10271345,"line_start":893,"line_end":893,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271350,"byte_end":10271353,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271358,"byte_end":10271397,"line_start":895,"line_end":895,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271402,"byte_end":10271414,"line_start":896,"line_end":896,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271419,"byte_end":10271426,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271431,"byte_end":10271438,"line_start":898,"line_end":898,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272435,"byte_end":10272445,"line_start":926,"line_end":926,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271611,"byte_end":10271687,"line_start":905,"line_end":905,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271692,"byte_end":10271695,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271700,"byte_end":10271793,"line_start":907,"line_end":907,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271798,"byte_end":10271891,"line_start":908,"line_end":908,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271896,"byte_end":10271931,"line_start":909,"line_end":909,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271936,"byte_end":10271939,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10271944,"byte_end":10272037,"line_start":911,"line_end":911,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272042,"byte_end":10272109,"line_start":912,"line_end":912,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272114,"byte_end":10272117,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272122,"byte_end":10272136,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272141,"byte_end":10272144,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272149,"byte_end":10272162,"line_start":916,"line_end":916,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272167,"byte_end":10272197,"line_start":917,"line_end":917,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272202,"byte_end":10272205,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272210,"byte_end":10272274,"line_start":919,"line_end":919,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272279,"byte_end":10272340,"line_start":920,"line_end":920,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272345,"byte_end":10272348,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272353,"byte_end":10272382,"line_start":922,"line_end":922,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272387,"byte_end":10272399,"line_start":923,"line_end":923,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272404,"byte_end":10272411,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272416,"byte_end":10272423,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273419,"byte_end":10273422,"line_start":962,"line_end":962,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272907,"byte_end":10272965,"line_start":944,"line_end":944,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272970,"byte_end":10272973,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10272978,"byte_end":10273038,"line_start":946,"line_end":946,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273043,"byte_end":10273046,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273051,"byte_end":10273086,"line_start":948,"line_end":948,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273091,"byte_end":10273094,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273099,"byte_end":10273113,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273118,"byte_end":10273121,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273126,"byte_end":10273139,"line_start":952,"line_end":952,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273144,"byte_end":10273174,"line_start":953,"line_end":953,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273179,"byte_end":10273182,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273187,"byte_end":10273251,"line_start":955,"line_end":955,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273256,"byte_end":10273317,"line_start":956,"line_end":956,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273322,"byte_end":10273325,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273330,"byte_end":10273366,"line_start":958,"line_end":958,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273371,"byte_end":10273383,"line_start":959,"line_end":959,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273388,"byte_end":10273395,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273400,"byte_end":10273407,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273979,"byte_end":10273986,"line_start":983,"line_end":983,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273484,"byte_end":10273542,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273547,"byte_end":10273550,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273555,"byte_end":10273631,"line_start":968,"line_end":968,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273636,"byte_end":10273657,"line_start":969,"line_end":969,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273662,"byte_end":10273665,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273670,"byte_end":10273684,"line_start":971,"line_end":971,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273689,"byte_end":10273692,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273697,"byte_end":10273710,"line_start":973,"line_end":973,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273715,"byte_end":10273745,"line_start":974,"line_end":974,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273750,"byte_end":10273753,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273758,"byte_end":10273822,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273827,"byte_end":10273888,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273893,"byte_end":10273896,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273901,"byte_end":10273926,"line_start":979,"line_end":979,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273931,"byte_end":10273943,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273948,"byte_end":10273955,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10273960,"byte_end":10273967,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274578,"byte_end":10274583,"line_start":997,"line_end":997,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274201,"byte_end":10274237,"line_start":989,"line_end":989,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274242,"byte_end":10274319,"line_start":990,"line_end":990,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274324,"byte_end":10274370,"line_start":991,"line_end":991,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274375,"byte_end":10274378,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274383,"byte_end":10274462,"line_start":993,"line_end":993,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274467,"byte_end":10274510,"line_start":994,"line_end":994,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274515,"byte_end":10274518,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274523,"byte_end":10274566,"line_start":996,"line_end":996,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10275232,"byte_end":10275242,"line_start":1012,"line_end":1012,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274668,"byte_end":10274745,"line_start":1001,"line_end":1001,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274750,"byte_end":10274796,"line_start":1002,"line_end":1002,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274801,"byte_end":10274804,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274809,"byte_end":10274887,"line_start":1004,"line_end":1004,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274892,"byte_end":10274940,"line_start":1005,"line_end":1005,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274945,"byte_end":10274948,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10274953,"byte_end":10275031,"line_start":1007,"line_end":1007,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10275036,"byte_end":10275112,"line_start":1008,"line_end":1008,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10275117,"byte_end":10275120,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10275125,"byte_end":10275158,"line_start":1010,"line_end":1010,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10275163,"byte_end":10275220,"line_start":1011,"line_end":1011,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282547,"byte_end":10282556,"line_start":120,"line_end":120,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":2999}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10283093,"byte_end":10283097,"line_start":143,"line_end":143,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282635,"byte_end":10282707,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282712,"byte_end":10282736,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282741,"byte_end":10282744,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282749,"byte_end":10282762,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282767,"byte_end":10282770,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282775,"byte_end":10282788,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282793,"byte_end":10282823,"line_start":132,"line_end":132,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282828,"byte_end":10282844,"line_start":133,"line_end":133,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282849,"byte_end":10282852,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282857,"byte_end":10282875,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282880,"byte_end":10282919,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282924,"byte_end":10282982,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282987,"byte_end":10283008,"line_start":138,"line_end":138,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10283013,"byte_end":10283034,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10283039,"byte_end":10283053,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10283058,"byte_end":10283063,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10283068,"byte_end":10283075,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285336,"byte_end":10285344,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10283930,"byte_end":10284004,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284009,"byte_end":10284012,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284017,"byte_end":10284087,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284092,"byte_end":10284168,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284173,"byte_end":10284244,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284249,"byte_end":10284271,"line_start":177,"line_end":177,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284276,"byte_end":10284279,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284284,"byte_end":10284356,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284361,"byte_end":10284436,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284441,"byte_end":10284494,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284499,"byte_end":10284502,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284507,"byte_end":10284519,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284524,"byte_end":10284527,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284532,"byte_end":10284592,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284597,"byte_end":10284600,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284605,"byte_end":10284675,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284680,"byte_end":10284753,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284758,"byte_end":10284838,"line_start":189,"line_end":189,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284843,"byte_end":10284846,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284851,"byte_end":10284864,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284869,"byte_end":10284872,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284877,"byte_end":10284890,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284895,"byte_end":10284925,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284930,"byte_end":10284967,"line_start":195,"line_end":195,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284972,"byte_end":10284975,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10284980,"byte_end":10285000,"line_start":197,"line_end":197,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285005,"byte_end":10285046,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285051,"byte_end":10285112,"line_start":199,"line_end":199,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285117,"byte_end":10285169,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285174,"byte_end":10285210,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285215,"byte_end":10285261,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285266,"byte_end":10285283,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285288,"byte_end":10285300,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285305,"byte_end":10285312,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285317,"byte_end":10285324,"line_start":206,"line_end":206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286016,"byte_end":10286026,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285490,"byte_end":10285549,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285554,"byte_end":10285557,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285562,"byte_end":10285575,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285580,"byte_end":10285583,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285588,"byte_end":10285601,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285606,"byte_end":10285636,"line_start":217,"line_end":217,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285641,"byte_end":10285678,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285683,"byte_end":10285686,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285691,"byte_end":10285711,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285716,"byte_end":10285757,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285762,"byte_end":10285823,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285828,"byte_end":10285872,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285877,"byte_end":10285918,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285923,"byte_end":10285963,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285968,"byte_end":10285980,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285985,"byte_end":10285992,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10285997,"byte_end":10286004,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286946,"byte_end":10286953,"line_start":257,"line_end":257,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286102,"byte_end":10286176,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286181,"byte_end":10286254,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286259,"byte_end":10286270,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286275,"byte_end":10286278,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286283,"byte_end":10286296,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286301,"byte_end":10286304,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286309,"byte_end":10286322,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286327,"byte_end":10286357,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286362,"byte_end":10286399,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286404,"byte_end":10286407,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286412,"byte_end":10286432,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286437,"byte_end":10286478,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286483,"byte_end":10286568,"line_start":245,"line_end":245,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286573,"byte_end":10286576,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286581,"byte_end":10286652,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286657,"byte_end":10286694,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286699,"byte_end":10286727,"line_start":249,"line_end":249,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286732,"byte_end":10286760,"line_start":250,"line_end":250,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286765,"byte_end":10286806,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286811,"byte_end":10286837,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286842,"byte_end":10286887,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286892,"byte_end":10286904,"line_start":254,"line_end":254,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286909,"byte_end":10286916,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10286921,"byte_end":10286928,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289760,"byte_end":10289765,"line_start":335,"line_end":335,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287476,"byte_end":10287523,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287528,"byte_end":10287531,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287536,"byte_end":10287609,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287614,"byte_end":10287688,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287693,"byte_end":10287731,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287736,"byte_end":10287739,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287744,"byte_end":10287815,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287820,"byte_end":10287883,"line_start":283,"line_end":283,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287888,"byte_end":10287920,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287925,"byte_end":10287928,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287933,"byte_end":10287947,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287952,"byte_end":10287955,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10287960,"byte_end":10288029,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288034,"byte_end":10288056,"line_start":289,"line_end":289,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288061,"byte_end":10288064,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288069,"byte_end":10288082,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288087,"byte_end":10288123,"line_start":292,"line_end":292,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288128,"byte_end":10288158,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288163,"byte_end":10288166,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288171,"byte_end":10288189,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288194,"byte_end":10288233,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288238,"byte_end":10288300,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288305,"byte_end":10288353,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288358,"byte_end":10288361,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288366,"byte_end":10288380,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288385,"byte_end":10288470,"line_start":301,"line_end":301,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288475,"byte_end":10288478,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288483,"byte_end":10288519,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288524,"byte_end":10288611,"line_start":304,"line_end":304,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288616,"byte_end":10288648,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288653,"byte_end":10288694,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288699,"byte_end":10288753,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288758,"byte_end":10288788,"line_start":308,"line_end":308,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288793,"byte_end":10288855,"line_start":309,"line_end":309,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288860,"byte_end":10288881,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288886,"byte_end":10288933,"line_start":311,"line_end":311,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10288938,"byte_end":10289015,"line_start":312,"line_end":312,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289020,"byte_end":10289051,"line_start":313,"line_end":313,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289056,"byte_end":10289094,"line_start":314,"line_end":314,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289099,"byte_end":10289120,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289125,"byte_end":10289142,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289147,"byte_end":10289160,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289165,"byte_end":10289168,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289173,"byte_end":10289209,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289214,"byte_end":10289248,"line_start":320,"line_end":320,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289253,"byte_end":10289308,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289313,"byte_end":10289343,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289348,"byte_end":10289401,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289406,"byte_end":10289427,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289432,"byte_end":10289479,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289484,"byte_end":10289561,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289566,"byte_end":10289597,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289602,"byte_end":10289640,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289645,"byte_end":10289666,"line_start":329,"line_end":329,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289671,"byte_end":10289688,"line_start":330,"line_end":330,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289693,"byte_end":10289706,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289711,"byte_end":10289720,"line_start":332,"line_end":332,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289725,"byte_end":10289730,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289735,"byte_end":10289742,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291367,"byte_end":10291375,"line_start":383,"line_end":383,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289922,"byte_end":10289965,"line_start":340,"line_end":340,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289970,"byte_end":10289973,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10289978,"byte_end":10290047,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290052,"byte_end":10290108,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290113,"byte_end":10290116,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290121,"byte_end":10290195,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290200,"byte_end":10290265,"line_start":346,"line_end":346,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290270,"byte_end":10290302,"line_start":347,"line_end":347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290307,"byte_end":10290310,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290315,"byte_end":10290329,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290334,"byte_end":10290337,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290342,"byte_end":10290355,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290360,"byte_end":10290390,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290395,"byte_end":10290411,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290416,"byte_end":10290419,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290424,"byte_end":10290442,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290447,"byte_end":10290486,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290491,"byte_end":10290513,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290518,"byte_end":10290580,"line_start":358,"line_end":358,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290585,"byte_end":10290633,"line_start":359,"line_end":359,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290638,"byte_end":10290641,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290646,"byte_end":10290660,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290665,"byte_end":10290714,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290719,"byte_end":10290756,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290761,"byte_end":10290764,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290769,"byte_end":10290839,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290844,"byte_end":10290902,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290907,"byte_end":10290958,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290963,"byte_end":10290989,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10290994,"byte_end":10291020,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291025,"byte_end":10291042,"line_start":370,"line_end":370,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291047,"byte_end":10291119,"line_start":371,"line_end":371,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291124,"byte_end":10291153,"line_start":372,"line_end":372,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291158,"byte_end":10291175,"line_start":373,"line_end":373,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291180,"byte_end":10291207,"line_start":374,"line_end":374,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291212,"byte_end":10291246,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291251,"byte_end":10291268,"line_start":376,"line_end":376,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291273,"byte_end":10291286,"line_start":377,"line_end":377,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291291,"byte_end":10291300,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291305,"byte_end":10291308,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291313,"byte_end":10291327,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291332,"byte_end":10291337,"line_start":381,"line_end":381,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291342,"byte_end":10291349,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292395,"byte_end":10292399,"line_start":419,"line_end":419,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291476,"byte_end":10291545,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291550,"byte_end":10291567,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291572,"byte_end":10291575,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291580,"byte_end":10291652,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291657,"byte_end":10291714,"line_start":392,"line_end":392,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291719,"byte_end":10291722,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291727,"byte_end":10291764,"line_start":394,"line_end":394,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291769,"byte_end":10291772,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291777,"byte_end":10291789,"line_start":396,"line_end":396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291794,"byte_end":10291797,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291802,"byte_end":10291870,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291875,"byte_end":10291909,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291914,"byte_end":10291917,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291922,"byte_end":10291936,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291941,"byte_end":10291944,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291949,"byte_end":10291962,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291967,"byte_end":10291985,"line_start":404,"line_end":404,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10291990,"byte_end":10292020,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292025,"byte_end":10292028,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292033,"byte_end":10292051,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292056,"byte_end":10292095,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292100,"byte_end":10292122,"line_start":409,"line_end":409,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292127,"byte_end":10292189,"line_start":410,"line_end":410,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292194,"byte_end":10292242,"line_start":411,"line_end":411,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292247,"byte_end":10292250,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292255,"byte_end":10292280,"line_start":413,"line_end":413,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292285,"byte_end":10292328,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292333,"byte_end":10292336,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292341,"byte_end":10292355,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292360,"byte_end":10292365,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292370,"byte_end":10292377,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293487,"byte_end":10293496,"line_start":449,"line_end":449,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292580,"byte_end":10292653,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292658,"byte_end":10292689,"line_start":427,"line_end":427,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292694,"byte_end":10292697,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292702,"byte_end":10292774,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292779,"byte_end":10292836,"line_start":430,"line_end":430,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292841,"byte_end":10292844,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292849,"byte_end":10292924,"line_start":432,"line_end":432,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10292929,"byte_end":10293004,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293009,"byte_end":10293046,"line_start":434,"line_end":434,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293051,"byte_end":10293054,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293059,"byte_end":10293077,"line_start":436,"line_end":436,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293082,"byte_end":10293085,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293090,"byte_end":10293115,"line_start":438,"line_end":438,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293120,"byte_end":10293123,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293128,"byte_end":10293189,"line_start":440,"line_end":440,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293194,"byte_end":10293252,"line_start":441,"line_end":441,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293257,"byte_end":10293312,"line_start":442,"line_end":442,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293317,"byte_end":10293320,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293325,"byte_end":10293337,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293342,"byte_end":10293345,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293350,"byte_end":10293425,"line_start":446,"line_end":446,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293430,"byte_end":10293433,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293438,"byte_end":10293475,"line_start":448,"line_end":448,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295240,"byte_end":10295248,"line_start":503,"line_end":503,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293675,"byte_end":10293746,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293751,"byte_end":10293765,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293770,"byte_end":10293773,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293778,"byte_end":10293849,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293854,"byte_end":10293918,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293923,"byte_end":10293926,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293931,"byte_end":10293944,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293949,"byte_end":10293952,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10293957,"byte_end":10294029,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294034,"byte_end":10294084,"line_start":464,"line_end":464,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294089,"byte_end":10294134,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294139,"byte_end":10294142,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294147,"byte_end":10294161,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294166,"byte_end":10294169,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294174,"byte_end":10294187,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294192,"byte_end":10294222,"line_start":470,"line_end":470,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294227,"byte_end":10294243,"line_start":471,"line_end":471,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294248,"byte_end":10294251,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294256,"byte_end":10294274,"line_start":473,"line_end":473,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294279,"byte_end":10294318,"line_start":474,"line_end":474,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294323,"byte_end":10294351,"line_start":475,"line_end":475,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294356,"byte_end":10294418,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294423,"byte_end":10294426,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294431,"byte_end":10294459,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294464,"byte_end":10294512,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294517,"byte_end":10294520,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294525,"byte_end":10294539,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294544,"byte_end":10294593,"line_start":482,"line_end":482,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294598,"byte_end":10294635,"line_start":483,"line_end":483,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294640,"byte_end":10294643,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294648,"byte_end":10294718,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294723,"byte_end":10294781,"line_start":486,"line_end":486,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294786,"byte_end":10294837,"line_start":487,"line_end":487,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294842,"byte_end":10294868,"line_start":488,"line_end":488,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294873,"byte_end":10294899,"line_start":489,"line_end":489,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294904,"byte_end":10294921,"line_start":490,"line_end":490,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10294926,"byte_end":10294998,"line_start":491,"line_end":491,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295003,"byte_end":10295032,"line_start":492,"line_end":492,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295037,"byte_end":10295054,"line_start":493,"line_end":493,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295059,"byte_end":10295086,"line_start":494,"line_end":494,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295091,"byte_end":10295125,"line_start":495,"line_end":495,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295130,"byte_end":10295147,"line_start":496,"line_end":496,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295152,"byte_end":10295165,"line_start":497,"line_end":497,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295170,"byte_end":10295179,"line_start":498,"line_end":498,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295184,"byte_end":10295187,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295192,"byte_end":10295206,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295211,"byte_end":10295216,"line_start":501,"line_end":501,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295221,"byte_end":10295228,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297061,"byte_end":10297069,"line_start":557,"line_end":557,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295408,"byte_end":10295451,"line_start":509,"line_end":509,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295456,"byte_end":10295459,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295464,"byte_end":10295541,"line_start":511,"line_end":511,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295546,"byte_end":10295575,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295580,"byte_end":10295583,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295588,"byte_end":10295662,"line_start":514,"line_end":514,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295667,"byte_end":10295732,"line_start":515,"line_end":515,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295737,"byte_end":10295769,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295774,"byte_end":10295777,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295782,"byte_end":10295796,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295801,"byte_end":10295804,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295809,"byte_end":10295822,"line_start":520,"line_end":520,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295827,"byte_end":10295857,"line_start":521,"line_end":521,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295862,"byte_end":10295878,"line_start":522,"line_end":522,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295883,"byte_end":10295886,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295891,"byte_end":10295909,"line_start":524,"line_end":524,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295914,"byte_end":10295953,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295958,"byte_end":10295986,"line_start":526,"line_end":526,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10295991,"byte_end":10296053,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296058,"byte_end":10296106,"line_start":528,"line_end":528,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296111,"byte_end":10296114,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296119,"byte_end":10296133,"line_start":530,"line_end":530,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296138,"byte_end":10296187,"line_start":531,"line_end":531,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296192,"byte_end":10296229,"line_start":532,"line_end":532,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296234,"byte_end":10296237,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296242,"byte_end":10296314,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296319,"byte_end":10296358,"line_start":535,"line_end":535,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296363,"byte_end":10296399,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296404,"byte_end":10296407,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296412,"byte_end":10296482,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296487,"byte_end":10296545,"line_start":539,"line_end":539,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296550,"byte_end":10296595,"line_start":540,"line_end":540,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296600,"byte_end":10296626,"line_start":541,"line_end":541,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296631,"byte_end":10296683,"line_start":542,"line_end":542,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296688,"byte_end":10296714,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296719,"byte_end":10296736,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296741,"byte_end":10296813,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296818,"byte_end":10296847,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296852,"byte_end":10296869,"line_start":547,"line_end":547,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296874,"byte_end":10296901,"line_start":548,"line_end":548,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296906,"byte_end":10296940,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296945,"byte_end":10296962,"line_start":550,"line_end":550,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296967,"byte_end":10296980,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296985,"byte_end":10296994,"line_start":552,"line_end":552,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10296999,"byte_end":10297002,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297007,"byte_end":10297021,"line_start":554,"line_end":554,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297026,"byte_end":10297031,"line_start":555,"line_end":555,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297036,"byte_end":10297043,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298282,"byte_end":10298286,"line_start":592,"line_end":592,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297170,"byte_end":10297246,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297251,"byte_end":10297326,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297331,"byte_end":10297334,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297339,"byte_end":10297412,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297417,"byte_end":10297491,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297496,"byte_end":10297547,"line_start":567,"line_end":567,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297552,"byte_end":10297555,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297560,"byte_end":10297632,"line_start":569,"line_end":569,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297637,"byte_end":10297694,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297699,"byte_end":10297702,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297707,"byte_end":10297744,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297749,"byte_end":10297752,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297757,"byte_end":10297770,"line_start":574,"line_end":574,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297775,"byte_end":10297805,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297810,"byte_end":10297826,"line_start":576,"line_end":576,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297831,"byte_end":10297834,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297839,"byte_end":10297857,"line_start":578,"line_end":578,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297862,"byte_end":10297901,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297906,"byte_end":10297928,"line_start":580,"line_end":580,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10297933,"byte_end":10297995,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298000,"byte_end":10298048,"line_start":582,"line_end":582,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298053,"byte_end":10298056,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298061,"byte_end":10298095,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298100,"byte_end":10298145,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298150,"byte_end":10298153,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298158,"byte_end":10298215,"line_start":587,"line_end":587,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298220,"byte_end":10298223,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298228,"byte_end":10298242,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298247,"byte_end":10298252,"line_start":590,"line_end":590,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298257,"byte_end":10298264,"line_start":591,"line_end":591,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299411,"byte_end":10299420,"line_start":622,"line_end":622,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298471,"byte_end":10298550,"line_start":599,"line_end":599,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298555,"byte_end":10298594,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298599,"byte_end":10298602,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298607,"byte_end":10298691,"line_start":602,"line_end":602,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298696,"byte_end":10298752,"line_start":603,"line_end":603,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298757,"byte_end":10298760,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298765,"byte_end":10298849,"line_start":605,"line_end":605,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298854,"byte_end":10298936,"line_start":606,"line_end":606,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298941,"byte_end":10298962,"line_start":607,"line_end":607,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298967,"byte_end":10298970,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298975,"byte_end":10298993,"line_start":609,"line_end":609,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10298998,"byte_end":10299001,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299006,"byte_end":10299031,"line_start":611,"line_end":611,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299036,"byte_end":10299039,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299044,"byte_end":10299100,"line_start":613,"line_end":613,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299105,"byte_end":10299176,"line_start":614,"line_end":614,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299181,"byte_end":10299236,"line_start":615,"line_end":615,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299241,"byte_end":10299244,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299249,"byte_end":10299261,"line_start":617,"line_end":617,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299266,"byte_end":10299269,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299274,"byte_end":10299349,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299354,"byte_end":10299357,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10299362,"byte_end":10299399,"line_start":621,"line_end":621,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301841,"byte_end":10301849,"line_start":690,"line_end":690,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300014,"byte_end":10300088,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300093,"byte_end":10300164,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300169,"byte_end":10300184,"line_start":642,"line_end":642,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300189,"byte_end":10300192,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300197,"byte_end":10300273,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300278,"byte_end":10300347,"line_start":645,"line_end":645,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300352,"byte_end":10300403,"line_start":646,"line_end":646,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300408,"byte_end":10300411,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300416,"byte_end":10300486,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300491,"byte_end":10300555,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300560,"byte_end":10300563,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300568,"byte_end":10300582,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300587,"byte_end":10300590,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300595,"byte_end":10300608,"line_start":653,"line_end":653,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300613,"byte_end":10300643,"line_start":654,"line_end":654,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300648,"byte_end":10300664,"line_start":655,"line_end":655,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300669,"byte_end":10300672,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300677,"byte_end":10300695,"line_start":657,"line_end":657,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300700,"byte_end":10300739,"line_start":658,"line_end":658,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300744,"byte_end":10300772,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300777,"byte_end":10300839,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300844,"byte_end":10300892,"line_start":661,"line_end":661,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300897,"byte_end":10300900,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300905,"byte_end":10300919,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300924,"byte_end":10300973,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10300978,"byte_end":10301015,"line_start":665,"line_end":665,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301020,"byte_end":10301023,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301028,"byte_end":10301100,"line_start":667,"line_end":667,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301105,"byte_end":10301144,"line_start":668,"line_end":668,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301149,"byte_end":10301185,"line_start":669,"line_end":669,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301190,"byte_end":10301193,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301198,"byte_end":10301268,"line_start":671,"line_end":671,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301273,"byte_end":10301331,"line_start":672,"line_end":672,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301336,"byte_end":10301381,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301386,"byte_end":10301412,"line_start":674,"line_end":674,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301417,"byte_end":10301469,"line_start":675,"line_end":675,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301474,"byte_end":10301500,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301505,"byte_end":10301522,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301527,"byte_end":10301599,"line_start":678,"line_end":678,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301604,"byte_end":10301633,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301638,"byte_end":10301655,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301660,"byte_end":10301687,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301692,"byte_end":10301726,"line_start":682,"line_end":682,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301731,"byte_end":10301748,"line_start":683,"line_end":683,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301753,"byte_end":10301766,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301771,"byte_end":10301780,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301785,"byte_end":10301788,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301793,"byte_end":10301807,"line_start":687,"line_end":687,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301812,"byte_end":10301817,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10301822,"byte_end":10301829,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10303928,"byte_end":10303940,"line_start":744,"line_end":744,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UdpSocket>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10306368,"byte_end":10306385,"line_start":808,"line_end":808,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UdpSocket>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308072,"byte_end":10308079,"line_start":857,"line_end":857,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307027,"byte_end":10307101,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307106,"byte_end":10307134,"line_start":828,"line_end":828,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307139,"byte_end":10307142,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307147,"byte_end":10307222,"line_start":830,"line_end":830,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307227,"byte_end":10307267,"line_start":831,"line_end":831,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307272,"byte_end":10307275,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307280,"byte_end":10307352,"line_start":833,"line_end":833,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307357,"byte_end":10307420,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307425,"byte_end":10307428,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307433,"byte_end":10307507,"line_start":836,"line_end":836,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307512,"byte_end":10307563,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307568,"byte_end":10307571,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307576,"byte_end":10307624,"line_start":839,"line_end":839,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307629,"byte_end":10307632,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307637,"byte_end":10307650,"line_start":841,"line_end":841,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307655,"byte_end":10307658,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307663,"byte_end":10307676,"line_start":843,"line_end":843,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307681,"byte_end":10307711,"line_start":844,"line_end":844,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307716,"byte_end":10307732,"line_start":845,"line_end":845,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307737,"byte_end":10307740,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307745,"byte_end":10307763,"line_start":847,"line_end":847,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307768,"byte_end":10307807,"line_start":848,"line_end":848,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307812,"byte_end":10307874,"line_start":849,"line_end":849,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307879,"byte_end":10307953,"line_start":850,"line_end":850,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307958,"byte_end":10307961,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10307966,"byte_end":10308005,"line_start":852,"line_end":852,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308010,"byte_end":10308013,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308018,"byte_end":10308032,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308037,"byte_end":10308042,"line_start":855,"line_end":855,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308047,"byte_end":10308054,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309130,"byte_end":10309142,"line_start":886,"line_end":886,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308473,"byte_end":10308532,"line_start":869,"line_end":869,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308537,"byte_end":10308540,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308545,"byte_end":10308629,"line_start":871,"line_end":871,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308634,"byte_end":10308716,"line_start":872,"line_end":872,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308721,"byte_end":10308742,"line_start":873,"line_end":873,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308747,"byte_end":10308750,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308755,"byte_end":10308773,"line_start":875,"line_end":875,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308778,"byte_end":10308781,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308786,"byte_end":10308811,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308816,"byte_end":10308819,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308824,"byte_end":10308881,"line_start":879,"line_end":879,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308886,"byte_end":10308945,"line_start":880,"line_end":880,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10308950,"byte_end":10309005,"line_start":881,"line_end":881,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309010,"byte_end":10309013,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309018,"byte_end":10309030,"line_start":883,"line_end":883,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309035,"byte_end":10309038,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309043,"byte_end":10309118,"line_start":885,"line_end":885,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2903},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310942,"byte_end":10310953,"line_start":944,"line_end":944,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309391,"byte_end":10309466,"line_start":897,"line_end":897,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309471,"byte_end":10309511,"line_start":898,"line_end":898,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309516,"byte_end":10309519,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309524,"byte_end":10309578,"line_start":900,"line_end":900,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309583,"byte_end":10309586,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309591,"byte_end":10309604,"line_start":902,"line_end":902,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309609,"byte_end":10309612,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309617,"byte_end":10309669,"line_start":904,"line_end":904,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309674,"byte_end":10309677,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309682,"byte_end":10309746,"line_start":906,"line_end":906,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309751,"byte_end":10309825,"line_start":907,"line_end":907,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309830,"byte_end":10309898,"line_start":908,"line_end":908,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309903,"byte_end":10309906,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309911,"byte_end":10309972,"line_start":910,"line_end":910,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309977,"byte_end":10309980,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10309985,"byte_end":10309998,"line_start":912,"line_end":912,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310003,"byte_end":10310006,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310011,"byte_end":10310024,"line_start":914,"line_end":914,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310029,"byte_end":10310059,"line_start":915,"line_end":915,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310064,"byte_end":10310090,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310095,"byte_end":10310111,"line_start":917,"line_end":917,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310116,"byte_end":10310119,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310124,"byte_end":10310142,"line_start":919,"line_end":919,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310147,"byte_end":10310198,"line_start":920,"line_end":920,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310203,"byte_end":10310265,"line_start":921,"line_end":921,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310270,"byte_end":10310273,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310278,"byte_end":10310322,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310327,"byte_end":10310330,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310335,"byte_end":10310349,"line_start":925,"line_end":925,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310354,"byte_end":10310391,"line_start":926,"line_end":926,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310396,"byte_end":10310399,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310404,"byte_end":10310468,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310473,"byte_end":10310502,"line_start":929,"line_end":929,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310507,"byte_end":10310559,"line_start":930,"line_end":930,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310564,"byte_end":10310590,"line_start":931,"line_end":931,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310595,"byte_end":10310612,"line_start":932,"line_end":932,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310617,"byte_end":10310689,"line_start":933,"line_end":933,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310694,"byte_end":10310741,"line_start":934,"line_end":934,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310746,"byte_end":10310775,"line_start":935,"line_end":935,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310780,"byte_end":10310797,"line_start":936,"line_end":936,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310802,"byte_end":10310849,"line_start":937,"line_end":937,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310854,"byte_end":10310867,"line_start":938,"line_end":938,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310872,"byte_end":10310881,"line_start":939,"line_end":939,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310886,"byte_end":10310889,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310894,"byte_end":10310908,"line_start":941,"line_end":941,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310913,"byte_end":10310918,"line_start":942,"line_end":942,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10310923,"byte_end":10310930,"line_start":943,"line_end":943,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312225,"byte_end":10312234,"line_start":982,"line_end":982,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311377,"byte_end":10311450,"line_start":957,"line_end":957,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311455,"byte_end":10311499,"line_start":958,"line_end":958,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311504,"byte_end":10311507,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311512,"byte_end":10311585,"line_start":960,"line_end":960,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311590,"byte_end":10311664,"line_start":961,"line_end":961,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311669,"byte_end":10311720,"line_start":962,"line_end":962,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311725,"byte_end":10311728,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311733,"byte_end":10311746,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311751,"byte_end":10311754,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311759,"byte_end":10311772,"line_start":966,"line_end":966,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311777,"byte_end":10311807,"line_start":967,"line_end":967,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311812,"byte_end":10311828,"line_start":968,"line_end":968,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311833,"byte_end":10311836,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311841,"byte_end":10311859,"line_start":970,"line_end":970,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311864,"byte_end":10311903,"line_start":971,"line_end":971,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311908,"byte_end":10311970,"line_start":972,"line_end":972,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311975,"byte_end":10311978,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10311983,"byte_end":10312019,"line_start":974,"line_end":974,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312024,"byte_end":10312084,"line_start":975,"line_end":975,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312089,"byte_end":10312092,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312097,"byte_end":10312158,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312163,"byte_end":10312166,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312171,"byte_end":10312185,"line_start":979,"line_end":979,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312190,"byte_end":10312195,"line_start":980,"line_end":980,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312200,"byte_end":10312207,"line_start":981,"line_end":981,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10313122,"byte_end":10313136,"line_start":1006,"line_end":1006,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312438,"byte_end":10312494,"line_start":989,"line_end":989,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312499,"byte_end":10312502,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312507,"byte_end":10312591,"line_start":991,"line_end":991,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312596,"byte_end":10312678,"line_start":992,"line_end":992,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312683,"byte_end":10312704,"line_start":993,"line_end":993,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312709,"byte_end":10312712,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312717,"byte_end":10312735,"line_start":995,"line_end":995,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312740,"byte_end":10312743,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312748,"byte_end":10312773,"line_start":997,"line_end":997,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312778,"byte_end":10312781,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312786,"byte_end":10312842,"line_start":999,"line_end":999,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312847,"byte_end":10312937,"line_start":1000,"line_end":1000,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10312942,"byte_end":10312997,"line_start":1001,"line_end":1001,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10313002,"byte_end":10313005,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10313010,"byte_end":10313022,"line_start":1003,"line_end":1003,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10313027,"byte_end":10313030,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10313035,"byte_end":10313110,"line_start":1005,"line_end":1005,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315530,"byte_end":10315543,"line_start":1076,"line_end":1076,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10313784,"byte_end":10313855,"line_start":1028,"line_end":1028,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10313860,"byte_end":10313912,"line_start":1029,"line_end":1029,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10313917,"byte_end":10313920,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10313925,"byte_end":10314001,"line_start":1031,"line_end":1031,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314006,"byte_end":10314075,"line_start":1032,"line_end":1032,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314080,"byte_end":10314131,"line_start":1033,"line_end":1033,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314136,"byte_end":10314139,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314144,"byte_end":10314214,"line_start":1035,"line_end":1035,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314219,"byte_end":10314283,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314288,"byte_end":10314291,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314296,"byte_end":10314310,"line_start":1038,"line_end":1038,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314315,"byte_end":10314318,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314323,"byte_end":10314336,"line_start":1040,"line_end":1040,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314341,"byte_end":10314371,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314376,"byte_end":10314392,"line_start":1042,"line_end":1042,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314397,"byte_end":10314400,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314405,"byte_end":10314423,"line_start":1044,"line_end":1044,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314428,"byte_end":10314467,"line_start":1045,"line_end":1045,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314472,"byte_end":10314500,"line_start":1046,"line_end":1046,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314505,"byte_end":10314567,"line_start":1047,"line_end":1047,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314572,"byte_end":10314575,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314580,"byte_end":10314594,"line_start":1049,"line_end":1049,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314599,"byte_end":10314648,"line_start":1050,"line_end":1050,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314653,"byte_end":10314690,"line_start":1051,"line_end":1051,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314695,"byte_end":10314698,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314703,"byte_end":10314775,"line_start":1053,"line_end":1053,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314780,"byte_end":10314819,"line_start":1054,"line_end":1054,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314824,"byte_end":10314860,"line_start":1055,"line_end":1055,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314865,"byte_end":10314868,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314873,"byte_end":10314943,"line_start":1057,"line_end":1057,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10314948,"byte_end":10315006,"line_start":1058,"line_end":1058,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315011,"byte_end":10315061,"line_start":1059,"line_end":1059,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315066,"byte_end":10315101,"line_start":1060,"line_end":1060,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315106,"byte_end":10315158,"line_start":1061,"line_end":1061,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315163,"byte_end":10315189,"line_start":1062,"line_end":1062,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315194,"byte_end":10315211,"line_start":1063,"line_end":1063,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315216,"byte_end":10315288,"line_start":1064,"line_end":1064,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315293,"byte_end":10315322,"line_start":1065,"line_end":1065,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315327,"byte_end":10315344,"line_start":1066,"line_end":1066,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315349,"byte_end":10315376,"line_start":1067,"line_end":1067,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315381,"byte_end":10315415,"line_start":1068,"line_end":1068,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315420,"byte_end":10315437,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315442,"byte_end":10315455,"line_start":1070,"line_end":1070,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315460,"byte_end":10315469,"line_start":1071,"line_end":1071,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315474,"byte_end":10315477,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315482,"byte_end":10315496,"line_start":1073,"line_end":1073,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315501,"byte_end":10315506,"line_start":1074,"line_end":1074,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315511,"byte_end":10315518,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316803,"byte_end":10316812,"line_start":1112,"line_end":1112,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315726,"byte_end":10315802,"line_start":1082,"line_end":1082,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315807,"byte_end":10315883,"line_start":1083,"line_end":1083,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315888,"byte_end":10315906,"line_start":1084,"line_end":1084,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315911,"byte_end":10315914,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315919,"byte_end":10315930,"line_start":1086,"line_end":1086,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315935,"byte_end":10315938,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10315943,"byte_end":10316018,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316023,"byte_end":10316101,"line_start":1089,"line_end":1089,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316106,"byte_end":10316154,"line_start":1090,"line_end":1090,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316159,"byte_end":10316226,"line_start":1091,"line_end":1091,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316231,"byte_end":10316299,"line_start":1092,"line_end":1092,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316304,"byte_end":10316307,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316312,"byte_end":10316326,"line_start":1094,"line_end":1094,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316331,"byte_end":10316334,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316339,"byte_end":10316352,"line_start":1096,"line_end":1096,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316357,"byte_end":10316387,"line_start":1097,"line_end":1097,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316392,"byte_end":10316408,"line_start":1098,"line_end":1098,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316413,"byte_end":10316416,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316421,"byte_end":10316439,"line_start":1100,"line_end":1100,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316444,"byte_end":10316483,"line_start":1101,"line_end":1101,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316488,"byte_end":10316550,"line_start":1102,"line_end":1102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316555,"byte_end":10316558,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316563,"byte_end":10316599,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316604,"byte_end":10316664,"line_start":1105,"line_end":1105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316669,"byte_end":10316672,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316677,"byte_end":10316736,"line_start":1107,"line_end":1107,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316741,"byte_end":10316744,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316749,"byte_end":10316763,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316768,"byte_end":10316773,"line_start":1110,"line_end":1110,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10316778,"byte_end":10316785,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318161,"byte_end":10318175,"line_start":1145,"line_end":1145,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317016,"byte_end":10317092,"line_start":1119,"line_end":1119,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317097,"byte_end":10317146,"line_start":1120,"line_end":1120,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317151,"byte_end":10317154,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317159,"byte_end":10317170,"line_start":1122,"line_end":1122,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317175,"byte_end":10317178,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317183,"byte_end":10317267,"line_start":1124,"line_end":1124,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317272,"byte_end":10317354,"line_start":1125,"line_end":1125,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317359,"byte_end":10317379,"line_start":1126,"line_end":1126,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317384,"byte_end":10317387,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317392,"byte_end":10317467,"line_start":1128,"line_end":1128,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317472,"byte_end":10317545,"line_start":1129,"line_end":1129,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317550,"byte_end":10317598,"line_start":1130,"line_end":1130,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317603,"byte_end":10317670,"line_start":1131,"line_end":1131,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317675,"byte_end":10317743,"line_start":1132,"line_end":1132,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317748,"byte_end":10317751,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317756,"byte_end":10317774,"line_start":1134,"line_end":1134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317779,"byte_end":10317782,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317787,"byte_end":10317812,"line_start":1136,"line_end":1136,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317817,"byte_end":10317820,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317825,"byte_end":10317881,"line_start":1138,"line_end":1138,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317886,"byte_end":10317976,"line_start":1139,"line_end":1139,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10317981,"byte_end":10318036,"line_start":1140,"line_end":1140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318041,"byte_end":10318044,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318049,"byte_end":10318061,"line_start":1142,"line_end":1142,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318066,"byte_end":10318069,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318074,"byte_end":10318149,"line_start":1144,"line_end":1144,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319040,"byte_end":10319049,"line_start":1172,"line_end":1172,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318823,"byte_end":10318887,"line_start":1167,"line_end":1167,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318892,"byte_end":10318895,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318900,"byte_end":10318966,"line_start":1169,"line_end":1169,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318971,"byte_end":10318974,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10318979,"byte_end":10319028,"line_start":1171,"line_end":1171,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319295,"byte_end":10319308,"line_start":1180,"line_end":1180,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319118,"byte_end":10319182,"line_start":1176,"line_end":1176,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319187,"byte_end":10319190,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319195,"byte_end":10319266,"line_start":1178,"line_end":1178,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319271,"byte_end":10319283,"line_start":1179,"line_end":1179,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319637,"byte_end":10319654,"line_start":1189,"line_end":1189,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319391,"byte_end":10319460,"line_start":1184,"line_end":1184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319465,"byte_end":10319468,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319473,"byte_end":10319547,"line_start":1186,"line_end":1186,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319552,"byte_end":10319555,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319560,"byte_end":10319625,"line_start":1188,"line_end":1188,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319984,"byte_end":10320005,"line_start":1200,"line_end":1200,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319731,"byte_end":10319800,"line_start":1193,"line_end":1193,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319805,"byte_end":10319808,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319813,"byte_end":10319887,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319892,"byte_end":10319895,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319900,"byte_end":10319910,"line_start":1197,"line_end":1197,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319915,"byte_end":10319918,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10319923,"byte_end":10319972,"line_start":1199,"line_end":1199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320338,"byte_end":10320354,"line_start":1209,"line_end":1209,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320096,"byte_end":10320164,"line_start":1204,"line_end":1204,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320169,"byte_end":10320172,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320177,"byte_end":10320250,"line_start":1206,"line_end":1206,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320255,"byte_end":10320258,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320263,"byte_end":10320326,"line_start":1208,"line_end":1208,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2926},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320823,"byte_end":10320843,"line_start":1222,"line_end":1222,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320429,"byte_end":10320497,"line_start":1213,"line_end":1213,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320502,"byte_end":10320505,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320510,"byte_end":10320580,"line_start":1215,"line_end":1215,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320585,"byte_end":10320659,"line_start":1216,"line_end":1216,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320664,"byte_end":10320726,"line_start":1217,"line_end":1217,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320731,"byte_end":10320734,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320739,"byte_end":10320749,"line_start":1219,"line_end":1219,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320754,"byte_end":10320757,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320762,"byte_end":10320811,"line_start":1221,"line_end":1221,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321182,"byte_end":10321199,"line_start":1231,"line_end":1231,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10320934,"byte_end":10321005,"line_start":1226,"line_end":1226,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321010,"byte_end":10321013,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321018,"byte_end":10321092,"line_start":1228,"line_end":1228,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321097,"byte_end":10321100,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321105,"byte_end":10321170,"line_start":1230,"line_end":1230,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321533,"byte_end":10321554,"line_start":1242,"line_end":1242,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321276,"byte_end":10321347,"line_start":1235,"line_end":1235,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321352,"byte_end":10321355,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321360,"byte_end":10321436,"line_start":1237,"line_end":1237,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321441,"byte_end":10321444,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321449,"byte_end":10321459,"line_start":1239,"line_end":1239,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321464,"byte_end":10321467,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321472,"byte_end":10321521,"line_start":1241,"line_end":1241,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322151,"byte_end":10322154,"line_start":1265,"line_end":1265,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321645,"byte_end":10321703,"line_start":1246,"line_end":1246,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321708,"byte_end":10321711,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321716,"byte_end":10321776,"line_start":1248,"line_end":1248,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321781,"byte_end":10321784,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321789,"byte_end":10321826,"line_start":1250,"line_end":1250,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321831,"byte_end":10321834,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321839,"byte_end":10321853,"line_start":1252,"line_end":1252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321858,"byte_end":10321861,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321866,"byte_end":10321879,"line_start":1254,"line_end":1254,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321884,"byte_end":10321914,"line_start":1255,"line_end":1255,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321919,"byte_end":10321937,"line_start":1256,"line_end":1256,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321942,"byte_end":10321945,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321950,"byte_end":10321990,"line_start":1258,"line_end":1258,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10321995,"byte_end":10322051,"line_start":1259,"line_end":1259,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322056,"byte_end":10322059,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322064,"byte_end":10322098,"line_start":1261,"line_end":1261,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322103,"byte_end":10322115,"line_start":1262,"line_end":1262,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322120,"byte_end":10322127,"line_start":1263,"line_end":1263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322132,"byte_end":10322139,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322702,"byte_end":10322709,"line_start":1287,"line_end":1287,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322216,"byte_end":10322274,"line_start":1269,"line_end":1269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322279,"byte_end":10322282,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322287,"byte_end":10322363,"line_start":1271,"line_end":1271,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322368,"byte_end":10322389,"line_start":1272,"line_end":1272,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322394,"byte_end":10322397,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322402,"byte_end":10322416,"line_start":1274,"line_end":1274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322421,"byte_end":10322424,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322429,"byte_end":10322442,"line_start":1276,"line_end":1276,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322447,"byte_end":10322477,"line_start":1277,"line_end":1277,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322482,"byte_end":10322500,"line_start":1278,"line_end":1278,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322505,"byte_end":10322508,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322513,"byte_end":10322553,"line_start":1280,"line_end":1280,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322558,"byte_end":10322614,"line_start":1281,"line_end":1281,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322619,"byte_end":10322641,"line_start":1282,"line_end":1282,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322646,"byte_end":10322649,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322654,"byte_end":10322666,"line_start":1284,"line_end":1284,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322671,"byte_end":10322678,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322683,"byte_end":10322690,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323217,"byte_end":10323234,"line_start":1298,"line_end":1298,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322787,"byte_end":10322845,"line_start":1291,"line_end":1291,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322850,"byte_end":10322853,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322858,"byte_end":10322932,"line_start":1293,"line_end":1293,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10322937,"byte_end":10323010,"line_start":1294,"line_end":1294,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323015,"byte_end":10323087,"line_start":1295,"line_end":1295,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323092,"byte_end":10323162,"line_start":1296,"line_end":1296,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323167,"byte_end":10323205,"line_start":1297,"line_end":1297,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2932},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323689,"byte_end":10323706,"line_start":1307,"line_end":1307,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323373,"byte_end":10323433,"line_start":1302,"line_end":1302,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323438,"byte_end":10323441,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323446,"byte_end":10323520,"line_start":1304,"line_end":1304,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323525,"byte_end":10323598,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323603,"byte_end":10323677,"line_start":1306,"line_end":1306,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324063,"byte_end":10324081,"line_start":1316,"line_end":1316,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323839,"byte_end":10323898,"line_start":1311,"line_end":1311,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323903,"byte_end":10323906,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323911,"byte_end":10323981,"line_start":1313,"line_end":1313,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323986,"byte_end":10323989,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10323994,"byte_end":10324051,"line_start":1315,"line_end":1315,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324447,"byte_end":10324465,"line_start":1325,"line_end":1325,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324221,"byte_end":10324282,"line_start":1320,"line_end":1320,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324287,"byte_end":10324290,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324295,"byte_end":10324365,"line_start":1322,"line_end":1322,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324370,"byte_end":10324373,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324378,"byte_end":10324435,"line_start":1324,"line_end":1324,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325102,"byte_end":10325112,"line_start":1348,"line_end":1348,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324599,"byte_end":10324646,"line_start":1329,"line_end":1329,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324651,"byte_end":10324654,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324659,"byte_end":10324673,"line_start":1331,"line_end":1331,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324678,"byte_end":10324685,"line_start":1332,"line_end":1332,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324690,"byte_end":10324720,"line_start":1333,"line_end":1333,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324725,"byte_end":10324741,"line_start":1334,"line_end":1334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324746,"byte_end":10324749,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324754,"byte_end":10324772,"line_start":1336,"line_end":1336,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324777,"byte_end":10324816,"line_start":1337,"line_end":1337,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324821,"byte_end":10324847,"line_start":1338,"line_end":1338,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324852,"byte_end":10324912,"line_start":1339,"line_end":1339,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324917,"byte_end":10324920,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324925,"byte_end":10324977,"line_start":1341,"line_end":1341,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10324982,"byte_end":10325027,"line_start":1342,"line_end":1342,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325032,"byte_end":10325041,"line_start":1343,"line_end":1343,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325046,"byte_end":10325049,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325054,"byte_end":10325068,"line_start":1345,"line_end":1345,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325073,"byte_end":10325078,"line_start":1346,"line_end":1346,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325083,"byte_end":10325090,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":103103,"byte_end":103109,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":103040,"byte_end":103093,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":103162,"byte_end":103167,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":103124,"byte_end":103152,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3097},{"krate":0,"index":3636},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3939},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4003},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4114},{"krate":0,"index":4118},{"krate":0,"index":4120},{"krate":0,"index":4124},{"krate":0,"index":4101},{"krate":0,"index":4102}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10327745,"byte_end":10327767,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10327768,"byte_end":10327771,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10327772,"byte_end":10327845,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10327846,"byte_end":10327919,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10327920,"byte_end":10327923,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10327924,"byte_end":10328002,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328003,"byte_end":10328060,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328061,"byte_end":10328131,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328132,"byte_end":10328204,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328205,"byte_end":10328208,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328209,"byte_end":10328289,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328290,"byte_end":10328370,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328371,"byte_end":10328452,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328453,"byte_end":10328533,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328534,"byte_end":10328537,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328538,"byte_end":10328549,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328550,"byte_end":10328553,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328554,"byte_end":10328633,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328634,"byte_end":10328643,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328644,"byte_end":10328647,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328648,"byte_end":10328661,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328662,"byte_end":10328694,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328695,"byte_end":10328744,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328745,"byte_end":10328748,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328749,"byte_end":10328767,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328768,"byte_end":10328831,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328832,"byte_end":10328898,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328899,"byte_end":10328902,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328903,"byte_end":10328917,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328918,"byte_end":10328977,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328978,"byte_end":10328981,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10328982,"byte_end":10329019,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329020,"byte_end":10329060,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329061,"byte_end":10329064,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329065,"byte_end":10329145,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329146,"byte_end":10329168,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329169,"byte_end":10329232,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329233,"byte_end":10329273,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329274,"byte_end":10329324,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329325,"byte_end":10329360,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329361,"byte_end":10329396,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329397,"byte_end":10329479,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329480,"byte_end":10329515,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329516,"byte_end":10329541,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329542,"byte_end":10329564,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329565,"byte_end":10329568,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329569,"byte_end":10329611,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329612,"byte_end":10329684,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329685,"byte_end":10329762,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329763,"byte_end":10329794,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329795,"byte_end":10329816,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329817,"byte_end":10329834,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329835,"byte_end":10329850,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329851,"byte_end":10329860,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329861,"byte_end":10329866,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329867,"byte_end":10329874,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329875,"byte_end":10329878,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329879,"byte_end":10329957,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10329958,"byte_end":10330036,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330037,"byte_end":10330098,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330099,"byte_end":10330102,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330103,"byte_end":10330156,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330157,"byte_end":10330160,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330161,"byte_end":10330174,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330175,"byte_end":10330207,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330208,"byte_end":10330257,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330258,"byte_end":10330290,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330291,"byte_end":10330294,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330295,"byte_end":10330352,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330353,"byte_end":10330382,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330383,"byte_end":10330417,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330418,"byte_end":10330421,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330422,"byte_end":10330452,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330453,"byte_end":10330480,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330481,"byte_end":10330551,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330552,"byte_end":10330555,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330556,"byte_end":10330574,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330575,"byte_end":10330638,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330639,"byte_end":10330642,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330643,"byte_end":10330684,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330685,"byte_end":10330729,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330730,"byte_end":10330733,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330734,"byte_end":10330818,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330819,"byte_end":10330845,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330846,"byte_end":10330913,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330914,"byte_end":10330958,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10330959,"byte_end":10331013,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331014,"byte_end":10331053,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331054,"byte_end":10331093,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331094,"byte_end":10331180,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331181,"byte_end":10331220,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331221,"byte_end":10331250,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331251,"byte_end":10331277,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331278,"byte_end":10331281,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331282,"byte_end":10331328,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331329,"byte_end":10331405,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331406,"byte_end":10331487,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331488,"byte_end":10331523,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331524,"byte_end":10331549,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331550,"byte_end":10331571,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331572,"byte_end":10331591,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331592,"byte_end":10331605,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331606,"byte_end":10331616,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331617,"byte_end":10331622,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331623,"byte_end":10331630,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331631,"byte_end":10331634,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331635,"byte_end":10331664,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331665,"byte_end":10331668,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331669,"byte_end":10331747,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331748,"byte_end":10331824,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331825,"byte_end":10331867,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331868,"byte_end":10331871,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331872,"byte_end":10331903,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331904,"byte_end":10331907,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331908,"byte_end":10331983,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10331984,"byte_end":10332062,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332063,"byte_end":10332141,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332142,"byte_end":10332226,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332227,"byte_end":10332272,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332273,"byte_end":10332280,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332281,"byte_end":10332304,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332305,"byte_end":10332308,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332309,"byte_end":10332368,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332369,"byte_end":10332416,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332417,"byte_end":10332431,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332432,"byte_end":10332439,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332440,"byte_end":10332443,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332444,"byte_end":10332519,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332520,"byte_end":10332595,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332596,"byte_end":10332599,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332600,"byte_end":10332633,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332634,"byte_end":10332637,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332638,"byte_end":10332716,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332717,"byte_end":10332796,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332797,"byte_end":10332823,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332824,"byte_end":10332831,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332832,"byte_end":10332855,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332856,"byte_end":10332859,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332860,"byte_end":10332919,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332920,"byte_end":10332977,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332978,"byte_end":10332996,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10332997,"byte_end":10333011,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333012,"byte_end":10333019,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333020,"byte_end":10333023,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333024,"byte_end":10333049,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333050,"byte_end":10333053,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333054,"byte_end":10333128,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333129,"byte_end":10333209,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333210,"byte_end":10333289,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333290,"byte_end":10333369,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333370,"byte_end":10333439,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333440,"byte_end":10333443,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333444,"byte_end":10333478,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333479,"byte_end":10333482,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333483,"byte_end":10333562,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333563,"byte_end":10333647,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333648,"byte_end":10333658,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333659,"byte_end":10333662,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333663,"byte_end":10333741,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333742,"byte_end":10333821,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333822,"byte_end":10333880,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333881,"byte_end":10333884,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333885,"byte_end":10333909,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333910,"byte_end":10333934,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333935,"byte_end":10333969,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10333970,"byte_end":10334008,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334009,"byte_end":10334055,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334056,"byte_end":10334106,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334107,"byte_end":10334181,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334182,"byte_end":10334262,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334263,"byte_end":10334325,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334326,"byte_end":10334392,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10334393,"byte_end":10334457,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10369614,"byte_end":10369623,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3619}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370112,"byte_end":10370124,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370032,"byte_end":10370100,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370578,"byte_end":10370586,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370199,"byte_end":10370261,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370266,"byte_end":10370269,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370274,"byte_end":10370288,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370293,"byte_end":10370296,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370301,"byte_end":10370308,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370313,"byte_end":10370332,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370337,"byte_end":10370340,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370345,"byte_end":10370363,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370368,"byte_end":10370389,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370394,"byte_end":10370432,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370437,"byte_end":10370464,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370469,"byte_end":10370499,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370504,"byte_end":10370507,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370512,"byte_end":10370544,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370549,"byte_end":10370554,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370559,"byte_end":10370566,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371441,"byte_end":10371451,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370660,"byte_end":10370739,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370744,"byte_end":10370747,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370752,"byte_end":10370764,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370769,"byte_end":10370772,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370777,"byte_end":10370851,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370856,"byte_end":10370931,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370936,"byte_end":10370994,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10370999,"byte_end":10371002,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371007,"byte_end":10371021,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371026,"byte_end":10371029,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371034,"byte_end":10371053,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371058,"byte_end":10371077,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371082,"byte_end":10371085,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371090,"byte_end":10371108,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371113,"byte_end":10371134,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371139,"byte_end":10371177,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371182,"byte_end":10371209,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371214,"byte_end":10371244,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371249,"byte_end":10371252,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371257,"byte_end":10371284,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371289,"byte_end":10371337,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371342,"byte_end":10371393,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371398,"byte_end":10371407,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371412,"byte_end":10371417,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371422,"byte_end":10371429,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372216,"byte_end":10372230,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371592,"byte_end":10371661,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371666,"byte_end":10371738,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371743,"byte_end":10371756,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371761,"byte_end":10371764,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371769,"byte_end":10371783,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371788,"byte_end":10371791,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371796,"byte_end":10371815,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371820,"byte_end":10371839,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371844,"byte_end":10371847,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371852,"byte_end":10371870,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371875,"byte_end":10371896,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371901,"byte_end":10371939,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371944,"byte_end":10371971,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10371976,"byte_end":10372006,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372011,"byte_end":10372014,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372019,"byte_end":10372069,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372074,"byte_end":10372122,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372127,"byte_end":10372168,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372173,"byte_end":10372182,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372187,"byte_end":10372192,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372197,"byte_end":10372204,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392214,"byte_end":10392224,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3622},{"krate":0,"index":3623}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393527,"byte_end":10393532,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392570,"byte_end":10392616,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392621,"byte_end":10392624,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392629,"byte_end":10392698,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392703,"byte_end":10392773,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392778,"byte_end":10392831,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392836,"byte_end":10392839,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392844,"byte_end":10392855,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392860,"byte_end":10392880,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392885,"byte_end":10392888,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392893,"byte_end":10392911,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392916,"byte_end":10392937,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392942,"byte_end":10392978,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392983,"byte_end":10392986,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392991,"byte_end":10393031,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393036,"byte_end":10393095,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393100,"byte_end":10393114,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393119,"byte_end":10393130,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393135,"byte_end":10393138,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393143,"byte_end":10393183,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393188,"byte_end":10393247,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393252,"byte_end":10393267,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393272,"byte_end":10393283,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393288,"byte_end":10393291,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393296,"byte_end":10393327,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393332,"byte_end":10393358,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393363,"byte_end":10393371,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393376,"byte_end":10393379,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393384,"byte_end":10393414,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393419,"byte_end":10393480,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393485,"byte_end":10393493,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393498,"byte_end":10393503,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393508,"byte_end":10393515,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445252,"byte_end":10445259,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444296,"byte_end":10444354,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444355,"byte_end":10444358,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444359,"byte_end":10444431,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444432,"byte_end":10444480,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444481,"byte_end":10444484,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444485,"byte_end":10444562,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444563,"byte_end":10444602,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444603,"byte_end":10444606,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444607,"byte_end":10444684,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444685,"byte_end":10444698,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444699,"byte_end":10444702,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444703,"byte_end":10444736,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444737,"byte_end":10444801,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444802,"byte_end":10444870,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444871,"byte_end":10444874,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444875,"byte_end":10444889,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444890,"byte_end":10444893,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444894,"byte_end":10444901,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444902,"byte_end":10444934,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444935,"byte_end":10444938,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444939,"byte_end":10444954,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444955,"byte_end":10444979,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10444980,"byte_end":10445029,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445030,"byte_end":10445060,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445061,"byte_end":10445103,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445104,"byte_end":10445151,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445152,"byte_end":10445172,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445173,"byte_end":10445195,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445196,"byte_end":10445199,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445200,"byte_end":10445226,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445227,"byte_end":10445232,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10445233,"byte_end":10445240,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10446620,"byte_end":10446638,"line_start":89,"line_end":89,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10446465,"byte_end":10446534,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10446539,"byte_end":10446542,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10446547,"byte_end":10446608,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448509,"byte_end":10448519,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448016,"byte_end":10448054,"line_start":138,"line_end":138,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448059,"byte_end":10448062,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448067,"byte_end":10448138,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448143,"byte_end":10448219,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448224,"byte_end":10448278,"line_start":142,"line_end":142,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448283,"byte_end":10448286,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448291,"byte_end":10448305,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448310,"byte_end":10448313,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448318,"byte_end":10448325,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448330,"byte_end":10448353,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448358,"byte_end":10448361,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448366,"byte_end":10448415,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448420,"byte_end":10448441,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448446,"byte_end":10448462,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448467,"byte_end":10448485,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448490,"byte_end":10448497,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450210,"byte_end":10450224,"line_start":212,"line_end":212,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448747,"byte_end":10448808,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448813,"byte_end":10448816,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 0 and 32,768 though it is advised to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448821,"byte_end":10448893,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/ keep this value on the smaller side.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448898,"byte_end":10448938,"line_start":166,"line_end":166,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448943,"byte_end":10448946,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448951,"byte_end":10448964,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448969,"byte_end":10448972,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10448977,"byte_end":10449046,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449051,"byte_end":10449054,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449059,"byte_end":10449070,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449075,"byte_end":10449078,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449083,"byte_end":10449156,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449161,"byte_end":10449222,"line_start":175,"line_end":175,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449227,"byte_end":10449230,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449235,"byte_end":10449238,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449243,"byte_end":10449257,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449262,"byte_end":10449265,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449270,"byte_end":10449314,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449319,"byte_end":10449322,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449327,"byte_end":10449334,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449339,"byte_end":10449362,"line_start":183,"line_end":183,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449367,"byte_end":10449370,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449375,"byte_end":10449444,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449449,"byte_end":10449498,"line_start":186,"line_end":186,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449503,"byte_end":10449529,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449534,"byte_end":10449550,"line_start":188,"line_end":188,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449555,"byte_end":10449573,"line_start":189,"line_end":189,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449578,"byte_end":10449581,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449586,"byte_end":10449614,"line_start":191,"line_end":191,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449619,"byte_end":10449626,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449631,"byte_end":10449634,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449639,"byte_end":10449730,"line_start":194,"line_end":194,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449735,"byte_end":10449738,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449743,"byte_end":10449750,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449755,"byte_end":10449778,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449783,"byte_end":10449786,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449791,"byte_end":10449848,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449853,"byte_end":10449883,"line_start":200,"line_end":200,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449888,"byte_end":10449939,"line_start":201,"line_end":201,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449944,"byte_end":10449960,"line_start":202,"line_end":202,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449965,"byte_end":10449983,"line_start":203,"line_end":203,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449988,"byte_end":10449991,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10449996,"byte_end":10450061,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450066,"byte_end":10450097,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450102,"byte_end":10450109,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450114,"byte_end":10450117,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450122,"byte_end":10450133,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450138,"byte_end":10450141,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450146,"byte_end":10450198,"line_start":211,"line_end":211,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450856,"byte_end":10450876,"line_start":231,"line_end":231,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads spawned by the Runtime used for blocking operations.","sig":null,"attributes":[{"value":"/ Specifies limit for threads spawned by the Runtime used for blocking operations.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450391,"byte_end":10450475,"line_start":218,"line_end":218,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450480,"byte_end":10450483,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450488,"byte_end":10450491,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `worker_threads`, this number should be between 1 and 32,768.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450496,"byte_end":10450578,"line_start":221,"line_end":221,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450583,"byte_end":10450586,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450591,"byte_end":10450620,"line_start":223,"line_end":223,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450625,"byte_end":10450628,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `worker_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450633,"byte_end":10450724,"line_start":225,"line_end":225,"column_start":5,"column_end":96}},{"value":"/ blocking annotations).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450729,"byte_end":10450755,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450760,"byte_end":10450763,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450768,"byte_end":10450779,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450784,"byte_end":10450787,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10450792,"byte_end":10450844,"line_start":230,"line_end":230,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451432,"byte_end":10451443,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451049,"byte_end":10451113,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451118,"byte_end":10451121,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451126,"byte_end":10451173,"line_start":239,"line_end":239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451178,"byte_end":10451181,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451186,"byte_end":10451200,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451205,"byte_end":10451208,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451213,"byte_end":10451220,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451225,"byte_end":10451250,"line_start":244,"line_end":244,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451255,"byte_end":10451258,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451263,"byte_end":10451284,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451289,"byte_end":10451338,"line_start":247,"line_end":247,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451343,"byte_end":10451374,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451379,"byte_end":10451396,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451401,"byte_end":10451408,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451413,"byte_end":10451420,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452292,"byte_end":10452306,"line_start":278,"line_end":278,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451617,"byte_end":10451713,"line_start":258,"line_end":258,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451718,"byte_end":10451721,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451726,"byte_end":10451788,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451793,"byte_end":10451796,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451801,"byte_end":10451815,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451820,"byte_end":10451823,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451828,"byte_end":10451835,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451840,"byte_end":10451865,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451870,"byte_end":10451923,"line_start":266,"line_end":266,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451928,"byte_end":10451931,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451936,"byte_end":10451957,"line_start":268,"line_end":268,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10451962,"byte_end":10452011,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452016,"byte_end":10452044,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452049,"byte_end":10452112,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452117,"byte_end":10452178,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452183,"byte_end":10452219,"line_start":273,"line_end":273,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452224,"byte_end":10452234,"line_start":274,"line_end":274,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452239,"byte_end":10452256,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452261,"byte_end":10452268,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452273,"byte_end":10452280,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453071,"byte_end":10453088,"line_start":305,"line_end":305,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452482,"byte_end":10452536,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452541,"byte_end":10452544,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452549,"byte_end":10452621,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452626,"byte_end":10452659,"line_start":289,"line_end":289,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452664,"byte_end":10452667,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452672,"byte_end":10452740,"line_start":291,"line_end":291,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452745,"byte_end":10452806,"line_start":292,"line_end":292,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452811,"byte_end":10452814,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452819,"byte_end":10452833,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452838,"byte_end":10452841,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452846,"byte_end":10452853,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452858,"byte_end":10452883,"line_start":297,"line_end":297,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452888,"byte_end":10452891,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452896,"byte_end":10452917,"line_start":299,"line_end":299,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452922,"byte_end":10452971,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10452976,"byte_end":10453013,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453018,"byte_end":10453035,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453040,"byte_end":10453047,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453052,"byte_end":10453059,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453708,"byte_end":10453723,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453195,"byte_end":10453270,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453275,"byte_end":10453290,"line_start":311,"line_end":311,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453295,"byte_end":10453298,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453303,"byte_end":10453365,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453370,"byte_end":10453373,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453378,"byte_end":10453392,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453397,"byte_end":10453400,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453405,"byte_end":10453412,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453417,"byte_end":10453442,"line_start":318,"line_end":318,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453447,"byte_end":10453450,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453455,"byte_end":10453476,"line_start":320,"line_end":320,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453481,"byte_end":10453535,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453540,"byte_end":10453569,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453574,"byte_end":10453613,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453618,"byte_end":10453628,"line_start":324,"line_end":324,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453633,"byte_end":10453650,"line_start":325,"line_end":325,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453655,"byte_end":10453662,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453667,"byte_end":10453674,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453679,"byte_end":10453696,"line_start":328,"line_end":328,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454364,"byte_end":10454378,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453895,"byte_end":10453946,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453951,"byte_end":10453954,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10453959,"byte_end":10454021,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454026,"byte_end":10454029,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454034,"byte_end":10454048,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454053,"byte_end":10454056,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454061,"byte_end":10454068,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454073,"byte_end":10454098,"line_start":344,"line_end":344,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454103,"byte_end":10454106,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454111,"byte_end":10454132,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454137,"byte_end":10454191,"line_start":347,"line_end":347,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454196,"byte_end":10454224,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454229,"byte_end":10454269,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454274,"byte_end":10454284,"line_start":350,"line_end":350,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454289,"byte_end":10454306,"line_start":351,"line_end":351,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454311,"byte_end":10454318,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454323,"byte_end":10454330,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454335,"byte_end":10454352,"line_start":354,"line_end":354,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454942,"byte_end":10454947,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454550,"byte_end":10454587,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454592,"byte_end":10454595,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454600,"byte_end":10454660,"line_start":365,"line_end":365,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454665,"byte_end":10454668,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454673,"byte_end":10454687,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454692,"byte_end":10454695,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454700,"byte_end":10454707,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454712,"byte_end":10454744,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454749,"byte_end":10454752,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454757,"byte_end":10454816,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454821,"byte_end":10454824,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454829,"byte_end":10454852,"line_start":374,"line_end":374,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454857,"byte_end":10454906,"line_start":375,"line_end":375,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454911,"byte_end":10454918,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10454923,"byte_end":10454930,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3919},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10456126,"byte_end":10456143,"line_start":416,"line_end":416,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455617,"byte_end":10455677,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455682,"byte_end":10455685,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455690,"byte_end":10455761,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455766,"byte_end":10455810,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455815,"byte_end":10455818,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455823,"byte_end":10455836,"line_start":404,"line_end":404,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455841,"byte_end":10455844,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455849,"byte_end":10455856,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455861,"byte_end":10455886,"line_start":407,"line_end":407,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455891,"byte_end":10455921,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455926,"byte_end":10455929,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455934,"byte_end":10455955,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10455960,"byte_end":10456009,"line_start":411,"line_end":411,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10456014,"byte_end":10456068,"line_start":412,"line_end":412,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10456073,"byte_end":10456090,"line_start":413,"line_end":413,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10456095,"byte_end":10456102,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10456107,"byte_end":10456114,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10457890,"byte_end":10457899,"line_start":469,"line_end":469,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4030},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10458423,"byte_end":10458434,"line_start":492,"line_end":492,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469362,"byte_end":10469368,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469093,"byte_end":10469119,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469120,"byte_end":10469123,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469124,"byte_end":10469212,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469213,"byte_end":10469263,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469264,"byte_end":10469267,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469268,"byte_end":10469326,"line_start":14,"line_end":14,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470055,"byte_end":10470065,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":4079},{"krate":0,"index":4080}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469819,"byte_end":10469845,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469846,"byte_end":10469849,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469850,"byte_end":10469931,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469932,"byte_end":10469964,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469965,"byte_end":10469968,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10469969,"byte_end":10470026,"line_start":40,"line_end":40,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470539,"byte_end":10470544,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470149,"byte_end":10470224,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470229,"byte_end":10470307,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470312,"byte_end":10470380,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470385,"byte_end":10470388,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470393,"byte_end":10470433,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470438,"byte_end":10470485,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470490,"byte_end":10470527,"line_start":54,"line_end":54,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472038,"byte_end":10472045,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470689,"byte_end":10470753,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470758,"byte_end":10470761,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470766,"byte_end":10470777,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470782,"byte_end":10470785,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470790,"byte_end":10470884,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470889,"byte_end":10470981,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470986,"byte_end":10471062,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471067,"byte_end":10471070,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471075,"byte_end":10471089,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471094,"byte_end":10471097,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471102,"byte_end":10471184,"line_start":72,"line_end":72,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471189,"byte_end":10471235,"line_start":73,"line_end":73,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471240,"byte_end":10471243,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471248,"byte_end":10471255,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471260,"byte_end":10471282,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471287,"byte_end":10471321,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471326,"byte_end":10471342,"line_start":78,"line_end":78,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471347,"byte_end":10471386,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471391,"byte_end":10471413,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471418,"byte_end":10471449,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471454,"byte_end":10471457,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471462,"byte_end":10471503,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471508,"byte_end":10471543,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471548,"byte_end":10471572,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471577,"byte_end":10471633,"line_start":86,"line_end":86,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471638,"byte_end":10471645,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471650,"byte_end":10471653,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471658,"byte_end":10471676,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471681,"byte_end":10471708,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471713,"byte_end":10471798,"line_start":91,"line_end":91,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471803,"byte_end":10471844,"line_start":92,"line_end":92,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471849,"byte_end":10471894,"line_start":93,"line_end":93,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471899,"byte_end":10471942,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471947,"byte_end":10471954,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471959,"byte_end":10471988,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10471993,"byte_end":10472002,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472007,"byte_end":10472014,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472019,"byte_end":10472026,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3983},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472319,"byte_end":10472330,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472126,"byte_end":10472186,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472191,"byte_end":10472194,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472199,"byte_end":10472250,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472255,"byte_end":10472258,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472263,"byte_end":10472307,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3984},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473285,"byte_end":10473290,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472433,"byte_end":10472475,"line_start":113,"line_end":113,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472480,"byte_end":10472483,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472488,"byte_end":10472559,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472564,"byte_end":10472639,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472644,"byte_end":10472667,"line_start":117,"line_end":117,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472672,"byte_end":10472675,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472680,"byte_end":10472739,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472744,"byte_end":10472747,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472752,"byte_end":10472773,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472778,"byte_end":10472781,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472786,"byte_end":10472800,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472805,"byte_end":10472808,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472813,"byte_end":10472820,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472825,"byte_end":10472857,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472862,"byte_end":10472865,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472870,"byte_end":10472886,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472891,"byte_end":10472916,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472921,"byte_end":10472958,"line_start":130,"line_end":130,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10472963,"byte_end":10473000,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473005,"byte_end":10473034,"line_start":132,"line_end":132,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473039,"byte_end":10473042,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473047,"byte_end":10473102,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473107,"byte_end":10473131,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473136,"byte_end":10473187,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473192,"byte_end":10473199,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473204,"byte_end":10473211,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473216,"byte_end":10473223,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473259,"byte_end":10473271,"line_start":140,"line_end":140,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10474193,"byte_end":10474207,"line_start":171,"line_end":171,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473590,"byte_end":10473656,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473661,"byte_end":10473676,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473681,"byte_end":10473684,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473689,"byte_end":10473703,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473708,"byte_end":10473711,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473716,"byte_end":10473723,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473728,"byte_end":10473760,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473765,"byte_end":10473768,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473773,"byte_end":10473789,"line_start":159,"line_end":159,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473794,"byte_end":10473819,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473824,"byte_end":10473861,"line_start":161,"line_end":161,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473866,"byte_end":10473903,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473908,"byte_end":10473937,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473942,"byte_end":10473945,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10473950,"byte_end":10474016,"line_start":165,"line_end":165,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10474021,"byte_end":10474051,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10474056,"byte_end":10474107,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10474112,"byte_end":10474119,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10474124,"byte_end":10474131,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10474167,"byte_end":10474179,"line_start":170,"line_end":170,"column_start":36,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3989},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10475476,"byte_end":10475491,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10475396,"byte_end":10475464,"line_start":206,"line_end":206,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4114},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10336834,"byte_end":10336841,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4103},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10339465,"byte_end":10339471,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10340395,"byte_end":10340400,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10340365,"byte_end":10340377,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4106},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10341173,"byte_end":10341187,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10341143,"byte_end":10341155,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4109},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10343112,"byte_end":10343120,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10344608,"byte_end":10344613,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10346183,"byte_end":10346199,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4113},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10347628,"byte_end":10347647,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4156},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4167},{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4170},{"krate":0,"index":4333},{"krate":0,"index":4739},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":11572},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":5007},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5135},{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138},{"krate":0,"index":5139},{"krate":0,"index":5243},{"krate":0,"index":5244},{"krate":0,"index":5245},{"krate":0,"index":5246},{"krate":0,"index":5247},{"krate":0,"index":5292},{"krate":0,"index":5293}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477029,"byte_end":10477093,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477094,"byte_end":10477097,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477098,"byte_end":10477173,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477174,"byte_end":10477254,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477255,"byte_end":10477334,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477335,"byte_end":10477369,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477370,"byte_end":10477373,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477374,"byte_end":10477398,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477399,"byte_end":10477402,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477403,"byte_end":10477424,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477425,"byte_end":10477428,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477429,"byte_end":10477502,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477503,"byte_end":10477582,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477583,"byte_end":10477652,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477653,"byte_end":10477656,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477657,"byte_end":10477736,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477737,"byte_end":10477814,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477815,"byte_end":10477890,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477891,"byte_end":10477963,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10477964,"byte_end":10478036,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478037,"byte_end":10478115,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478116,"byte_end":10478129,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478130,"byte_end":10478133,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478134,"byte_end":10478212,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478213,"byte_end":10478274,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478275,"byte_end":10478278,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478279,"byte_end":10478303,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478304,"byte_end":10478307,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478308,"byte_end":10478387,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478388,"byte_end":10478466,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478467,"byte_end":10478511,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478512,"byte_end":10478515,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478516,"byte_end":10478596,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478597,"byte_end":10478613,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478614,"byte_end":10478617,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478618,"byte_end":10478625,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478626,"byte_end":10478655,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478656,"byte_end":10478659,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478660,"byte_end":10478703,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478704,"byte_end":10478766,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478767,"byte_end":10478772,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478773,"byte_end":10478776,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478777,"byte_end":10478795,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478796,"byte_end":10478817,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478818,"byte_end":10478860,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478861,"byte_end":10478864,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478865,"byte_end":10478898,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478899,"byte_end":10478946,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478947,"byte_end":10478981,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478982,"byte_end":10478993,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478994,"byte_end":10478997,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10478998,"byte_end":10479075,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479076,"byte_end":10479079,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479080,"byte_end":10479122,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479123,"byte_end":10479159,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479160,"byte_end":10479165,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479166,"byte_end":10479173,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479174,"byte_end":10479177,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479178,"byte_end":10479242,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479243,"byte_end":10479307,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479308,"byte_end":10479370,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479371,"byte_end":10479441,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479442,"byte_end":10479507,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479508,"byte_end":10479518,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479519,"byte_end":10479522,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479523,"byte_end":10479539,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479540,"byte_end":10479543,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479544,"byte_end":10479551,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479552,"byte_end":10479595,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479596,"byte_end":10479647,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479648,"byte_end":10479653,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479654,"byte_end":10479657,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479658,"byte_end":10479676,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479677,"byte_end":10479698,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479699,"byte_end":10479750,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479751,"byte_end":10479787,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479788,"byte_end":10479799,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479800,"byte_end":10479803,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479804,"byte_end":10479881,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479882,"byte_end":10479885,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479886,"byte_end":10479928,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479929,"byte_end":10479974,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479975,"byte_end":10479980,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479981,"byte_end":10479988,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479989,"byte_end":10479992,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10479993,"byte_end":10480015,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480016,"byte_end":10480059,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480060,"byte_end":10480063,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480064,"byte_end":10480085,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480086,"byte_end":10480089,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480090,"byte_end":10480167,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480168,"byte_end":10480248,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480249,"byte_end":10480304,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480305,"byte_end":10480308,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480309,"byte_end":10480387,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480388,"byte_end":10480408,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480409,"byte_end":10480412,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480413,"byte_end":10480420,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480421,"byte_end":10480447,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480448,"byte_end":10480451,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480452,"byte_end":10480505,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480506,"byte_end":10480560,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480561,"byte_end":10480566,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480567,"byte_end":10480570,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480571,"byte_end":10480589,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480590,"byte_end":10480611,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480612,"byte_end":10480658,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480659,"byte_end":10480662,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480663,"byte_end":10480696,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480697,"byte_end":10480725,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480726,"byte_end":10480778,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480779,"byte_end":10480823,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480824,"byte_end":10480837,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480838,"byte_end":10480849,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480850,"byte_end":10480853,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480854,"byte_end":10480901,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480902,"byte_end":10480940,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480941,"byte_end":10480950,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480951,"byte_end":10480956,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480957,"byte_end":10480964,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480965,"byte_end":10480968,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10480969,"byte_end":10481049,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481050,"byte_end":10481127,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481128,"byte_end":10481201,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481202,"byte_end":10481277,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481278,"byte_end":10481291,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481292,"byte_end":10481295,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481296,"byte_end":10481371,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481372,"byte_end":10481451,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481452,"byte_end":10481530,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481531,"byte_end":10481610,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481611,"byte_end":10481691,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481692,"byte_end":10481757,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481758,"byte_end":10481761,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481762,"byte_end":10481842,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481843,"byte_end":10481855,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481856,"byte_end":10481859,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481860,"byte_end":10481873,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481874,"byte_end":10481915,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481916,"byte_end":10481946,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481947,"byte_end":10481973,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481974,"byte_end":10481977,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481978,"byte_end":10481996,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10481997,"byte_end":10482036,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482037,"byte_end":10482112,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482113,"byte_end":10482159,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482160,"byte_end":10482163,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482164,"byte_end":10482188,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482189,"byte_end":10482268,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482269,"byte_end":10482300,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482301,"byte_end":10482333,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482334,"byte_end":10482337,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482338,"byte_end":10482375,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482376,"byte_end":10482438,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482439,"byte_end":10482454,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482455,"byte_end":10482464,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482465,"byte_end":10482468,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482469,"byte_end":10482548,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482549,"byte_end":10482624,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482625,"byte_end":10482703,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482704,"byte_end":10482751,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482752,"byte_end":10482769,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482770,"byte_end":10482773,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482774,"byte_end":10482821,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482822,"byte_end":10482863,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482864,"byte_end":10482873,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482874,"byte_end":10482877,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482878,"byte_end":10482892,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482893,"byte_end":10482898,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482899,"byte_end":10482906,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482907,"byte_end":10482910,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482911,"byte_end":10482986,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10482987,"byte_end":10483062,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483063,"byte_end":10483142,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483143,"byte_end":10483208,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483209,"byte_end":10483286,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483287,"byte_end":10483290,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483291,"byte_end":10483369,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483370,"byte_end":10483450,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483451,"byte_end":10483496,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483497,"byte_end":10483500,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483501,"byte_end":10483508,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483509,"byte_end":10483546,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483547,"byte_end":10483574,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483575,"byte_end":10483578,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483579,"byte_end":10483597,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483598,"byte_end":10483616,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483617,"byte_end":10483660,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483661,"byte_end":10483666,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483667,"byte_end":10483670,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483671,"byte_end":10483689,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483690,"byte_end":10483711,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483712,"byte_end":10483801,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483802,"byte_end":10483805,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483806,"byte_end":10483851,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483852,"byte_end":10483885,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483886,"byte_end":10483923,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483924,"byte_end":10483927,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483928,"byte_end":10483995,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10483996,"byte_end":10484023,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484024,"byte_end":10484058,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484059,"byte_end":10484102,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484103,"byte_end":10484140,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484141,"byte_end":10484194,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484195,"byte_end":10484216,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484217,"byte_end":10484234,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484235,"byte_end":10484248,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484249,"byte_end":10484260,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484261,"byte_end":10484264,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484265,"byte_end":10484303,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484304,"byte_end":10484307,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484308,"byte_end":10484368,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484369,"byte_end":10484393,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484394,"byte_end":10484434,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484435,"byte_end":10484438,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484439,"byte_end":10484494,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484495,"byte_end":10484555,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484556,"byte_end":10484559,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484560,"byte_end":10484630,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484631,"byte_end":10484680,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484681,"byte_end":10484684,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484685,"byte_end":10484738,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484739,"byte_end":10484755,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484756,"byte_end":10484765,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484766,"byte_end":10484769,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484770,"byte_end":10484811,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484812,"byte_end":10484863,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484864,"byte_end":10484903,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484904,"byte_end":10484913,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484914,"byte_end":10484919,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484920,"byte_end":10484927,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484928,"byte_end":10484931,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484932,"byte_end":10484948,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484949,"byte_end":10484952,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484953,"byte_end":10484979,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484980,"byte_end":10484983,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10484984,"byte_end":10485051,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485052,"byte_end":10485124,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485125,"byte_end":10485198,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485199,"byte_end":10485252,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485253,"byte_end":10485256,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485257,"byte_end":10485337,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485338,"byte_end":10485360,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485361,"byte_end":10485364,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485365,"byte_end":10485380,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485381,"byte_end":10485384,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485385,"byte_end":10485392,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485393,"byte_end":10485424,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485425,"byte_end":10485428,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485429,"byte_end":10485447,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485448,"byte_end":10485469,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485470,"byte_end":10485521,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485522,"byte_end":10485559,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485560,"byte_end":10485563,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485564,"byte_end":10485597,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485598,"byte_end":10485652,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485653,"byte_end":10485707,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485708,"byte_end":10485719,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485720,"byte_end":10485723,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485724,"byte_end":10485757,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485758,"byte_end":10485812,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485813,"byte_end":10485867,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485868,"byte_end":10485879,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485880,"byte_end":10485883,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485884,"byte_end":10485913,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485914,"byte_end":10485943,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485944,"byte_end":10485949,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485950,"byte_end":10485957,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485958,"byte_end":10485961,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10485962,"byte_end":10486011,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486012,"byte_end":10486015,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486016,"byte_end":10486038,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486039,"byte_end":10486042,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486043,"byte_end":10486119,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486120,"byte_end":10486198,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486199,"byte_end":10486278,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486279,"byte_end":10486344,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486345,"byte_end":10486348,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486349,"byte_end":10486429,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486430,"byte_end":10486433,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486434,"byte_end":10486508,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486509,"byte_end":10486582,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486583,"byte_end":10486596,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486597,"byte_end":10486600,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486601,"byte_end":10486674,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486675,"byte_end":10486755,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486756,"byte_end":10486831,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486832,"byte_end":10486835,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486836,"byte_end":10486843,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486844,"byte_end":10486871,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486872,"byte_end":10486919,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486920,"byte_end":10486923,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486924,"byte_end":10486940,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486941,"byte_end":10486944,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486945,"byte_end":10486987,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10486988,"byte_end":10487007,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487008,"byte_end":10487034,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487035,"byte_end":10487040,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487041,"byte_end":10487044,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487045,"byte_end":10487062,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487063,"byte_end":10487120,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487121,"byte_end":10487179,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487180,"byte_end":10487232,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487233,"byte_end":10487242,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487243,"byte_end":10487248,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487249,"byte_end":10487252,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487253,"byte_end":10487288,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487289,"byte_end":10487317,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487318,"byte_end":10487323,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487324,"byte_end":10487327,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487328,"byte_end":10487346,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487347,"byte_end":10487368,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487369,"byte_end":10487412,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487413,"byte_end":10487478,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487479,"byte_end":10487482,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487483,"byte_end":10487561,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487562,"byte_end":10487616,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487617,"byte_end":10487620,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487621,"byte_end":10487665,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487666,"byte_end":10487699,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487700,"byte_end":10487718,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487719,"byte_end":10487768,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487769,"byte_end":10487828,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487829,"byte_end":10487832,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487833,"byte_end":10487879,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487880,"byte_end":10487953,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487954,"byte_end":10487957,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10487958,"byte_end":10488032,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488033,"byte_end":10488073,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488074,"byte_end":10488115,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488116,"byte_end":10488173,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488174,"byte_end":10488214,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488215,"byte_end":10488232,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488233,"byte_end":10488246,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488247,"byte_end":10488258,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488259,"byte_end":10488262,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488263,"byte_end":10488296,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488297,"byte_end":10488300,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488301,"byte_end":10488379,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488380,"byte_end":10488434,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488435,"byte_end":10488445,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488446,"byte_end":10488523,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488524,"byte_end":10488602,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488603,"byte_end":10488638,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488639,"byte_end":10488662,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488663,"byte_end":10488726,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488727,"byte_end":10488763,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488764,"byte_end":10488767,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488768,"byte_end":10488818,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488819,"byte_end":10488898,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488899,"byte_end":10488974,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10488975,"byte_end":10489028,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489029,"byte_end":10489075,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489076,"byte_end":10489108,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489109,"byte_end":10489112,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489113,"byte_end":10489160,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489161,"byte_end":10489212,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489213,"byte_end":10489216,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489217,"byte_end":10489267,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489268,"byte_end":10489339,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489340,"byte_end":10489375,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489376,"byte_end":10489379,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489380,"byte_end":10489402,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489403,"byte_end":10489439,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489440,"byte_end":10489483,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489484,"byte_end":10489548,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489549,"byte_end":10489606,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489607,"byte_end":10489610,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489611,"byte_end":10489666,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489667,"byte_end":10489721,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489722,"byte_end":10489725,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489726,"byte_end":10489776,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489777,"byte_end":10489859,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489860,"byte_end":10489885,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489886,"byte_end":10489931,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489932,"byte_end":10489987,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489988,"byte_end":10489991,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10489992,"byte_end":10490069,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490070,"byte_end":10490139,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490140,"byte_end":10490214,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490215,"byte_end":10490240,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490241,"byte_end":10490281,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490282,"byte_end":10490337,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490338,"byte_end":10490372,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490373,"byte_end":10490398,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490399,"byte_end":10490420,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490421,"byte_end":10490438,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490439,"byte_end":10490454,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490455,"byte_end":10490458,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490459,"byte_end":10490492,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490493,"byte_end":10490502,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490503,"byte_end":10490506,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490507,"byte_end":10490548,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490549,"byte_end":10490583,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490584,"byte_end":10490593,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490594,"byte_end":10490599,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490600,"byte_end":10490607,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490608,"byte_end":10490611,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490612,"byte_end":10490657,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490658,"byte_end":10490711,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490712,"byte_end":10490715,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490716,"byte_end":10490743,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490744,"byte_end":10490747,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490748,"byte_end":10490822,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490823,"byte_end":10490897,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490898,"byte_end":10490968,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10490969,"byte_end":10491019,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491020,"byte_end":10491023,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491024,"byte_end":10491101,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491102,"byte_end":10491179,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491180,"byte_end":10491183,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491184,"byte_end":10491261,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491262,"byte_end":10491317,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491318,"byte_end":10491321,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491322,"byte_end":10491401,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491402,"byte_end":10491480,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491481,"byte_end":10491506,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491507,"byte_end":10491510,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491511,"byte_end":10491586,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491587,"byte_end":10491663,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491664,"byte_end":10491731,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491732,"byte_end":10491735,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491736,"byte_end":10491812,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491813,"byte_end":10491889,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491890,"byte_end":10491964,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10491965,"byte_end":10491992,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494301,"byte_end":10494308,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":5347},{"krate":0,"index":5348},{"krate":0,"index":5349}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493348,"byte_end":10493436,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493437,"byte_end":10493440,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493441,"byte_end":10493448,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493449,"byte_end":10493469,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493470,"byte_end":10493493,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493494,"byte_end":10493523,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493524,"byte_end":10493527,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493528,"byte_end":10493562,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493563,"byte_end":10493586,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493587,"byte_end":10493590,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493591,"byte_end":10493636,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493637,"byte_end":10493682,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493683,"byte_end":10493703,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493704,"byte_end":10493736,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493737,"byte_end":10493791,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493792,"byte_end":10493837,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493838,"byte_end":10493871,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493872,"byte_end":10493908,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493909,"byte_end":10493945,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493946,"byte_end":10493981,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493982,"byte_end":10493996,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10493997,"byte_end":10494008,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494009,"byte_end":10494014,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494015,"byte_end":10494089,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494090,"byte_end":10494128,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494129,"byte_end":10494184,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494185,"byte_end":10494256,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494257,"byte_end":10494264,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494265,"byte_end":10494272,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4161},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494771,"byte_end":10494774,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494531,"byte_end":10494598,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494603,"byte_end":10494606,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494611,"byte_end":10494699,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494704,"byte_end":10494759,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10495847,"byte_end":10495851,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10495373,"byte_end":10495433,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10495438,"byte_end":10495441,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10495446,"byte_end":10495522,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10495527,"byte_end":10495552,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10495557,"byte_end":10495560,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10495565,"byte_end":10495658,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10495663,"byte_end":10495756,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10495761,"byte_end":10495829,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5358},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10497772,"byte_end":10497789,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10497636,"byte_end":10497736,"line_start":126,"line_end":126,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":4166},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10498037,"byte_end":10498046,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10497827,"byte_end":10497894,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10497899,"byte_end":10497902,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10497907,"byte_end":10497999,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10498004,"byte_end":10498025,"line_start":134,"line_end":134,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":4170},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":4171},{"krate":0,"index":4172},{"krate":0,"index":4173},{"krate":0,"index":4174},{"krate":0,"index":4175},{"krate":0,"index":4176},{"krate":0,"index":4177},{"krate":0,"index":4178},{"krate":0,"index":4179},{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":11386},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":11392},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4195},{"krate":0,"index":4199},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4219},{"krate":0,"index":4224},{"krate":0,"index":4230},{"krate":0,"index":4235},{"krate":0,"index":4239},{"krate":0,"index":4244},{"krate":0,"index":4247},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4253},{"krate":0,"index":4255},{"krate":0,"index":4257},{"krate":0,"index":4259},{"krate":0,"index":4261},{"krate":0,"index":4270},{"krate":0,"index":4272},{"krate":0,"index":4274},{"krate":0,"index":4277},{"krate":0,"index":4280},{"krate":0,"index":4284},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4298},{"krate":0,"index":4303},{"krate":0,"index":4309},{"krate":0,"index":4315},{"krate":0,"index":4318},{"krate":0,"index":4321},{"krate":0,"index":4326},{"krate":0,"index":4331}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498088,"byte_end":10498168,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498169,"byte_end":10498187,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498188,"byte_end":10498191,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498192,"byte_end":10498270,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498271,"byte_end":10498346,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498347,"byte_end":10498425,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498426,"byte_end":10498480,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498481,"byte_end":10498484,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498485,"byte_end":10498561,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498562,"byte_end":10498642,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498643,"byte_end":10498720,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498721,"byte_end":10498771,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498772,"byte_end":10498775,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498776,"byte_end":10498854,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498855,"byte_end":10498912,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498913,"byte_end":10498916,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498917,"byte_end":10498995,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10498996,"byte_end":10499068,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499069,"byte_end":10499085,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499086,"byte_end":10499089,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499090,"byte_end":10499104,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499105,"byte_end":10499108,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499109,"byte_end":10499189,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499190,"byte_end":10499269,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499270,"byte_end":10499347,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499348,"byte_end":10499426,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499427,"byte_end":10499434,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499435,"byte_end":10499438,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499439,"byte_end":10499516,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499517,"byte_end":10499592,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499593,"byte_end":10499673,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499674,"byte_end":10499677,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499678,"byte_end":10499750,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499751,"byte_end":10499829,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499830,"byte_end":10499906,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499907,"byte_end":10499966,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499967,"byte_end":10499970,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10499971,"byte_end":10500049,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500050,"byte_end":10500124,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500125,"byte_end":10500161,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500162,"byte_end":10500165,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500166,"byte_end":10500245,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500246,"byte_end":10500323,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500324,"byte_end":10500399,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500400,"byte_end":10500431,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500432,"byte_end":10500435,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500436,"byte_end":10500450,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500451,"byte_end":10500454,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500455,"byte_end":10500530,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500531,"byte_end":10500609,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500610,"byte_end":10500687,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500688,"byte_end":10500719,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500720,"byte_end":10500723,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500724,"byte_end":10500770,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500771,"byte_end":10500839,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500840,"byte_end":10500890,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500891,"byte_end":10500939,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10500940,"byte_end":10501015,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501016,"byte_end":10501091,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501092,"byte_end":10501144,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501145,"byte_end":10501148,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501149,"byte_end":10501163,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501164,"byte_end":10501167,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501168,"byte_end":10501183,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501184,"byte_end":10501187,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501188,"byte_end":10501195,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501196,"byte_end":10501227,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501228,"byte_end":10501231,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501232,"byte_end":10501250,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501251,"byte_end":10501272,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501273,"byte_end":10501324,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501325,"byte_end":10501362,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501363,"byte_end":10501366,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501367,"byte_end":10501400,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501401,"byte_end":10501455,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501456,"byte_end":10501510,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501511,"byte_end":10501522,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501523,"byte_end":10501526,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501527,"byte_end":10501560,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501561,"byte_end":10501615,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501616,"byte_end":10501670,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501671,"byte_end":10501682,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501683,"byte_end":10501686,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501687,"byte_end":10501716,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501717,"byte_end":10501746,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501747,"byte_end":10501752,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501753,"byte_end":10501760,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501761,"byte_end":10501764,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501765,"byte_end":10501781,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501782,"byte_end":10501785,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501786,"byte_end":10501793,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501794,"byte_end":10501825,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501826,"byte_end":10501829,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501830,"byte_end":10501848,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501849,"byte_end":10501870,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501871,"byte_end":10501920,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501921,"byte_end":10501924,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501925,"byte_end":10501954,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501955,"byte_end":10501984,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10501985,"byte_end":10502014,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502015,"byte_end":10502018,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502019,"byte_end":10502056,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502057,"byte_end":10502099,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502100,"byte_end":10502103,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502104,"byte_end":10502173,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502174,"byte_end":10502177,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502178,"byte_end":10502227,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502228,"byte_end":10502277,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502278,"byte_end":10502283,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502284,"byte_end":10502291,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4192},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503488,"byte_end":10503494,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4194}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502695,"byte_end":10502741,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502742,"byte_end":10502745,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502746,"byte_end":10502806,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502807,"byte_end":10502834,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502835,"byte_end":10502838,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502839,"byte_end":10502853,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502854,"byte_end":10502857,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502858,"byte_end":10502865,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502866,"byte_end":10502897,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502898,"byte_end":10502901,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502902,"byte_end":10502920,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502921,"byte_end":10502942,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502943,"byte_end":10502994,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10502995,"byte_end":10503032,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503033,"byte_end":10503036,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503037,"byte_end":10503070,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503071,"byte_end":10503125,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503126,"byte_end":10503180,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503181,"byte_end":10503192,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503193,"byte_end":10503196,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503197,"byte_end":10503230,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503231,"byte_end":10503285,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503286,"byte_end":10503340,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503341,"byte_end":10503352,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503353,"byte_end":10503356,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503357,"byte_end":10503386,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503387,"byte_end":10503416,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503417,"byte_end":10503422,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503423,"byte_end":10503430,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503431,"byte_end":10503434,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503435,"byte_end":10503476,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504542,"byte_end":10504550,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4197},{"krate":0,"index":4198}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503531,"byte_end":10503579,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503580,"byte_end":10503583,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503584,"byte_end":10503650,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503651,"byte_end":10503680,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503681,"byte_end":10503684,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503685,"byte_end":10503763,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503764,"byte_end":10503776,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503777,"byte_end":10503780,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503781,"byte_end":10503888,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503889,"byte_end":10503892,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503893,"byte_end":10503907,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503908,"byte_end":10503911,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503912,"byte_end":10503919,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503920,"byte_end":10503951,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503952,"byte_end":10503955,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503956,"byte_end":10503974,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503975,"byte_end":10503996,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10503997,"byte_end":10504048,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504049,"byte_end":10504086,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504087,"byte_end":10504090,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504091,"byte_end":10504124,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504125,"byte_end":10504179,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504180,"byte_end":10504234,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504235,"byte_end":10504246,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504247,"byte_end":10504250,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504251,"byte_end":10504284,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504285,"byte_end":10504339,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504340,"byte_end":10504394,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504395,"byte_end":10504406,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504407,"byte_end":10504410,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504411,"byte_end":10504440,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504441,"byte_end":10504470,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504471,"byte_end":10504476,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504477,"byte_end":10504484,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504485,"byte_end":10504488,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504489,"byte_end":10504530,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":4199},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504699,"byte_end":10504704,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":4200},{"krate":0,"index":5365},{"krate":0,"index":5369},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":5372},{"krate":0,"index":5382},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":4206},{"krate":0,"index":4208},{"krate":0,"index":5384},{"krate":0,"index":5396},{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":4209},{"krate":0,"index":4211}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504711,"byte_end":10504736,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":5365},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505208,"byte_end":10505217,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504761,"byte_end":10504826,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504831,"byte_end":10504834,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504839,"byte_end":10504911,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504916,"byte_end":10504993,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10504998,"byte_end":10505057,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505062,"byte_end":10505065,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505070,"byte_end":10505120,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505125,"byte_end":10505171,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5368},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505221,"byte_end":10505226,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":5365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5373},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505823,"byte_end":10505829,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":5372},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505718,"byte_end":10505793,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505802,"byte_end":10505814,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5375},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506055,"byte_end":10506061,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":5372},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505840,"byte_end":10505912,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505921,"byte_end":10505981,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505990,"byte_end":10505993,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506002,"byte_end":10506046,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5372},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505698,"byte_end":10505707,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":5373},{"krate":0,"index":5375}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505465,"byte_end":10505532,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505537,"byte_end":10505540,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505545,"byte_end":10505597,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505602,"byte_end":10505652,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5385},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506901,"byte_end":10506906,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":5384},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506701,"byte_end":10506759,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506768,"byte_end":10506825,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506834,"byte_end":10506837,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506846,"byte_end":10506892,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5387},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507022,"byte_end":10507028,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":5384},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506917,"byte_end":10506992,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507001,"byte_end":10507013,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5389},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507301,"byte_end":10507307,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":5384},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507039,"byte_end":10507113,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507122,"byte_end":10507190,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507199,"byte_end":10507227,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507236,"byte_end":10507239,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507248,"byte_end":10507292,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5384},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506678,"byte_end":10506690,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`] handles, so data may yet become available.\n    ///\n    /// [`Sender`]: crate::sync::broadcast::Sender\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":5385},{"krate":0,"index":5387},{"krate":0,"index":5389}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506433,"byte_end":10506504,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506509,"byte_end":10506512,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506517,"byte_end":10506577,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506582,"byte_end":10506632,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511502,"byte_end":10511509,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10509876,"byte_end":10509952,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10509953,"byte_end":10510002,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510003,"byte_end":10510006,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510007,"byte_end":10510076,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510077,"byte_end":10510127,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510128,"byte_end":10510131,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510132,"byte_end":10510206,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510207,"byte_end":10510282,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510283,"byte_end":10510351,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510352,"byte_end":10510355,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510356,"byte_end":10510432,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510433,"byte_end":10510514,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510515,"byte_end":10510554,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510555,"byte_end":10510558,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510559,"byte_end":10510605,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510606,"byte_end":10510674,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510675,"byte_end":10510725,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510726,"byte_end":10510778,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510779,"byte_end":10510838,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510839,"byte_end":10510898,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510899,"byte_end":10510902,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510903,"byte_end":10510917,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510918,"byte_end":10510921,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510922,"byte_end":10510929,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510930,"byte_end":10510961,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510962,"byte_end":10510965,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510966,"byte_end":10510984,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10510985,"byte_end":10511006,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511007,"byte_end":10511058,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511059,"byte_end":10511096,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511097,"byte_end":10511100,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511101,"byte_end":10511134,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511135,"byte_end":10511189,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511190,"byte_end":10511244,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511245,"byte_end":10511256,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511257,"byte_end":10511260,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511261,"byte_end":10511294,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511295,"byte_end":10511349,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511350,"byte_end":10511404,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511405,"byte_end":10511416,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511417,"byte_end":10511420,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511421,"byte_end":10511450,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511451,"byte_end":10511480,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511481,"byte_end":10511486,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10511487,"byte_end":10511494,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4263},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514561,"byte_end":10514565,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512711,"byte_end":10512785,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512790,"byte_end":10512826,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512831,"byte_end":10512834,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512839,"byte_end":10512914,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512919,"byte_end":10512985,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512990,"byte_end":10513041,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513046,"byte_end":10513049,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513054,"byte_end":10513066,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513071,"byte_end":10513074,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513079,"byte_end":10513153,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513158,"byte_end":10513234,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513239,"byte_end":10513292,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513297,"byte_end":10513300,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513305,"byte_end":10513315,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513320,"byte_end":10513323,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513328,"byte_end":10513400,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513405,"byte_end":10513480,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513485,"byte_end":10513546,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513551,"byte_end":10513554,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513559,"byte_end":10513632,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513637,"byte_end":10513702,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513707,"byte_end":10513725,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513730,"byte_end":10513733,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513738,"byte_end":10513788,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513793,"byte_end":10513853,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513858,"byte_end":10513861,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513866,"byte_end":10513880,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513885,"byte_end":10513888,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513893,"byte_end":10513900,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513905,"byte_end":10513936,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513941,"byte_end":10513944,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513949,"byte_end":10513967,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513972,"byte_end":10513993,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10513998,"byte_end":10514049,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514054,"byte_end":10514091,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514096,"byte_end":10514099,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514104,"byte_end":10514137,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514142,"byte_end":10514196,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514201,"byte_end":10514255,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514260,"byte_end":10514271,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514276,"byte_end":10514279,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514284,"byte_end":10514317,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514322,"byte_end":10514376,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514381,"byte_end":10514435,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514440,"byte_end":10514451,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514456,"byte_end":10514459,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514464,"byte_end":10514493,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514498,"byte_end":10514527,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514532,"byte_end":10514537,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514542,"byte_end":10514549,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4265},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515325,"byte_end":10515334,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514730,"byte_end":10514807,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514812,"byte_end":10514841,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514846,"byte_end":10514849,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514854,"byte_end":10514868,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514873,"byte_end":10514876,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514881,"byte_end":10514888,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514893,"byte_end":10514924,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514929,"byte_end":10514932,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514937,"byte_end":10514955,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514960,"byte_end":10514981,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10514986,"byte_end":10515033,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515038,"byte_end":10515041,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515046,"byte_end":10515073,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515078,"byte_end":10515107,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515112,"byte_end":10515115,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515120,"byte_end":10515156,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515161,"byte_end":10515164,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515169,"byte_end":10515198,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515203,"byte_end":10515206,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515211,"byte_end":10515256,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515261,"byte_end":10515291,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515296,"byte_end":10515301,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515306,"byte_end":10515313,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4266},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516593,"byte_end":10516607,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515441,"byte_end":10515483,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515488,"byte_end":10515491,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515496,"byte_end":10515572,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515577,"byte_end":10515650,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515655,"byte_end":10515675,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515680,"byte_end":10515683,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515688,"byte_end":10515698,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515703,"byte_end":10515706,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515711,"byte_end":10515781,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515786,"byte_end":10515854,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515859,"byte_end":10515872,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515877,"byte_end":10515880,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515885,"byte_end":10515937,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515942,"byte_end":10515992,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10515997,"byte_end":10516043,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516048,"byte_end":10516108,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516113,"byte_end":10516161,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516166,"byte_end":10516169,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516174,"byte_end":10516188,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516193,"byte_end":10516196,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516201,"byte_end":10516208,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516213,"byte_end":10516244,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516249,"byte_end":10516252,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516257,"byte_end":10516275,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516280,"byte_end":10516301,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516306,"byte_end":10516354,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516359,"byte_end":10516362,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516367,"byte_end":10516410,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516415,"byte_end":10516418,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516423,"byte_end":10516461,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516466,"byte_end":10516469,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516474,"byte_end":10516517,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516522,"byte_end":10516525,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516530,"byte_end":10516559,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516564,"byte_end":10516569,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10516574,"byte_end":10516581,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526170,"byte_end":10526174,"line_start":877,"line_end":877,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10523942,"byte_end":10523988,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10523993,"byte_end":10523996,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524001,"byte_end":10524069,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524074,"byte_end":10524106,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524111,"byte_end":10524114,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524119,"byte_end":10524189,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524194,"byte_end":10524268,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524273,"byte_end":10524276,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524281,"byte_end":10524357,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524362,"byte_end":10524438,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524443,"byte_end":10524511,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524516,"byte_end":10524589,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524594,"byte_end":10524663,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524668,"byte_end":10524713,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524718,"byte_end":10524721,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524726,"byte_end":10524776,"line_start":827,"line_end":827,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524781,"byte_end":10524833,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524838,"byte_end":10524841,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524846,"byte_end":10524860,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524865,"byte_end":10524868,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524873,"byte_end":10524880,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524885,"byte_end":10524916,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524921,"byte_end":10524924,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524929,"byte_end":10524947,"line_start":835,"line_end":835,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524952,"byte_end":10524973,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10524978,"byte_end":10525029,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525034,"byte_end":10525071,"line_start":838,"line_end":838,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525076,"byte_end":10525079,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525084,"byte_end":10525117,"line_start":840,"line_end":840,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525122,"byte_end":10525176,"line_start":841,"line_end":841,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525181,"byte_end":10525235,"line_start":842,"line_end":842,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525240,"byte_end":10525251,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525256,"byte_end":10525259,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525264,"byte_end":10525297,"line_start":845,"line_end":845,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525302,"byte_end":10525356,"line_start":846,"line_end":846,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525361,"byte_end":10525415,"line_start":847,"line_end":847,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525420,"byte_end":10525431,"line_start":848,"line_end":848,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525436,"byte_end":10525439,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525444,"byte_end":10525473,"line_start":850,"line_end":850,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525478,"byte_end":10525507,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525512,"byte_end":10525517,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525522,"byte_end":10525529,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525534,"byte_end":10525537,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525542,"byte_end":10525558,"line_start":855,"line_end":855,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525563,"byte_end":10525566,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525571,"byte_end":10525578,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525583,"byte_end":10525614,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525619,"byte_end":10525622,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525627,"byte_end":10525645,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525650,"byte_end":10525671,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525676,"byte_end":10525725,"line_start":862,"line_end":862,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525730,"byte_end":10525733,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525738,"byte_end":10525767,"line_start":864,"line_end":864,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525772,"byte_end":10525801,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525806,"byte_end":10525835,"line_start":866,"line_end":866,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525840,"byte_end":10525843,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525848,"byte_end":10525885,"line_start":868,"line_end":868,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525890,"byte_end":10525932,"line_start":869,"line_end":869,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525937,"byte_end":10525940,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10525945,"byte_end":10526014,"line_start":871,"line_end":871,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526019,"byte_end":10526022,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526027,"byte_end":10526076,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526081,"byte_end":10526130,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526135,"byte_end":10526140,"line_start":875,"line_end":875,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526145,"byte_end":10526152,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4289},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527935,"byte_end":10527943,"line_start":922,"line_end":922,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526276,"byte_end":10526349,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526354,"byte_end":10526357,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526362,"byte_end":10526434,"line_start":884,"line_end":884,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526439,"byte_end":10526463,"line_start":885,"line_end":885,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526468,"byte_end":10526471,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526476,"byte_end":10526556,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526561,"byte_end":10526635,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526640,"byte_end":10526643,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526648,"byte_end":10526721,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526726,"byte_end":10526800,"line_start":891,"line_end":891,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526805,"byte_end":10526808,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526813,"byte_end":10526889,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526894,"byte_end":10526970,"line_start":894,"line_end":894,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10526975,"byte_end":10527046,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527051,"byte_end":10527124,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527129,"byte_end":10527202,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527207,"byte_end":10527278,"line_start":898,"line_end":898,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527283,"byte_end":10527335,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527340,"byte_end":10527343,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527348,"byte_end":10527400,"line_start":901,"line_end":901,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527405,"byte_end":10527465,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527470,"byte_end":10527520,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527525,"byte_end":10527528,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527533,"byte_end":10527547,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527552,"byte_end":10527555,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527560,"byte_end":10527567,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527572,"byte_end":10527603,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527608,"byte_end":10527611,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527616,"byte_end":10527634,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527639,"byte_end":10527660,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527665,"byte_end":10527715,"line_start":912,"line_end":912,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527720,"byte_end":10527723,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527728,"byte_end":10527768,"line_start":914,"line_end":914,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527773,"byte_end":10527776,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527781,"byte_end":10527810,"line_start":916,"line_end":916,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527815,"byte_end":10527818,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527823,"byte_end":10527866,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527871,"byte_end":10527901,"line_start":919,"line_end":919,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527906,"byte_end":10527911,"line_start":920,"line_end":920,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10527916,"byte_end":10527923,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4333},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":4334},{"krate":0,"index":4408},{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4620},{"krate":0,"index":4665},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4719},{"krate":0,"index":4738}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532216,"byte_end":10532286,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532287,"byte_end":10532310,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532311,"byte_end":10532314,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532315,"byte_end":10532395,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532396,"byte_end":10532474,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532475,"byte_end":10532551,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532552,"byte_end":10532631,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532632,"byte_end":10532712,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532713,"byte_end":10532784,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532785,"byte_end":10532807,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532808,"byte_end":10532811,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532812,"byte_end":10532889,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532890,"byte_end":10532961,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10532962,"byte_end":10533027,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533028,"byte_end":10533112,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533113,"byte_end":10533191,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533192,"byte_end":10533269,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533270,"byte_end":10533348,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533349,"byte_end":10533428,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533429,"byte_end":10533446,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533447,"byte_end":10533450,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533451,"byte_end":10533454,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533455,"byte_end":10533474,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533475,"byte_end":10533478,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533479,"byte_end":10533545,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533546,"byte_end":10533626,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533627,"byte_end":10533704,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533705,"byte_end":10533708,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533709,"byte_end":10533779,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533780,"byte_end":10533859,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533860,"byte_end":10533883,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533884,"byte_end":10533887,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533888,"byte_end":10533908,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533909,"byte_end":10533912,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533913,"byte_end":10533993,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10533994,"byte_end":10534074,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534075,"byte_end":10534153,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534154,"byte_end":10534226,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534227,"byte_end":10534301,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534302,"byte_end":10534314,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534315,"byte_end":10534318,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534319,"byte_end":10534366,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534367,"byte_end":10534370,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534371,"byte_end":10534452,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534453,"byte_end":10534488,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534489,"byte_end":10534492,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534493,"byte_end":10534573,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534574,"byte_end":10534655,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534656,"byte_end":10534730,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534731,"byte_end":10534812,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534813,"byte_end":10534858,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534859,"byte_end":10534862,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534863,"byte_end":10534943,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10534944,"byte_end":10535022,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535023,"byte_end":10535089,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535090,"byte_end":10535172,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535173,"byte_end":10535237,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535238,"byte_end":10535241,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535242,"byte_end":10535283,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535284,"byte_end":10535329,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535330,"byte_end":10535383,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535384,"byte_end":10535439,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535440,"byte_end":10535503,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535504,"byte_end":10535569,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535570,"byte_end":10535629,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535630,"byte_end":10535693,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535694,"byte_end":10535754,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535755,"byte_end":10535800,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10535801,"byte_end":10535891,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":4420},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550011,"byte_end":10550017,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4422}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10549886,"byte_end":10549931,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10549932,"byte_end":10549935,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10549936,"byte_end":10549999,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550392,"byte_end":10550398,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":4426}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550060,"byte_end":10550106,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550107,"byte_end":10550110,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550111,"byte_end":10550198,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550199,"byte_end":10550282,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550283,"byte_end":10550286,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550287,"byte_end":10550329,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550330,"byte_end":10550380,"line_start":29,"line_end":29,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":4427},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550765,"byte_end":10550773,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4429}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550449,"byte_end":10550497,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550498,"byte_end":10550501,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550502,"byte_end":10550565,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550566,"byte_end":10550569,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550570,"byte_end":10550643,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550644,"byte_end":10550647,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550648,"byte_end":10550753,"line_start":40,"line_end":40,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":4430},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552231,"byte_end":10552238,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550845,"byte_end":10550924,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550925,"byte_end":10550947,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550948,"byte_end":10550951,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10550952,"byte_end":10551028,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551029,"byte_end":10551109,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551110,"byte_end":10551189,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551190,"byte_end":10551193,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551194,"byte_end":10551271,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551272,"byte_end":10551297,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551298,"byte_end":10551301,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551302,"byte_end":10551381,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551382,"byte_end":10551430,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551431,"byte_end":10551434,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551435,"byte_end":10551514,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551515,"byte_end":10551590,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551591,"byte_end":10551657,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551658,"byte_end":10551661,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551662,"byte_end":10551674,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551675,"byte_end":10551678,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551679,"byte_end":10551718,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551719,"byte_end":10551722,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551723,"byte_end":10551737,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551738,"byte_end":10551741,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551742,"byte_end":10551753,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551754,"byte_end":10551780,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551781,"byte_end":10551784,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551785,"byte_end":10551803,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551804,"byte_end":10551825,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551826,"byte_end":10551872,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551873,"byte_end":10551876,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551877,"byte_end":10551910,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551911,"byte_end":10551939,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551940,"byte_end":10551990,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10551991,"byte_end":10552040,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552041,"byte_end":10552068,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552069,"byte_end":10552086,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552087,"byte_end":10552100,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552101,"byte_end":10552112,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552113,"byte_end":10552116,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552117,"byte_end":10552162,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552163,"byte_end":10552199,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552200,"byte_end":10552209,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552210,"byte_end":10552215,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552216,"byte_end":10552223,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4436},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554600,"byte_end":10554604,"line_start":162,"line_end":162,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552838,"byte_end":10552884,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552889,"byte_end":10552892,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552897,"byte_end":10552972,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552977,"byte_end":10553050,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553055,"byte_end":10553131,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553136,"byte_end":10553211,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553216,"byte_end":10553219,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553224,"byte_end":10553297,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553302,"byte_end":10553376,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553381,"byte_end":10553407,"line_start":119,"line_end":119,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553412,"byte_end":10553415,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553420,"byte_end":10553489,"line_start":121,"line_end":121,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553494,"byte_end":10553566,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ closed by `recv` until the permits are released.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553571,"byte_end":10553623,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553628,"byte_end":10553631,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553636,"byte_end":10553662,"line_start":125,"line_end":125,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553667,"byte_end":10553716,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553721,"byte_end":10553724,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553729,"byte_end":10553743,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553748,"byte_end":10553751,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553756,"byte_end":10553763,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553768,"byte_end":10553794,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553799,"byte_end":10553802,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553807,"byte_end":10553825,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553830,"byte_end":10553851,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553856,"byte_end":10553902,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553907,"byte_end":10553910,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553915,"byte_end":10553948,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10553953,"byte_end":10553997,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554002,"byte_end":10554013,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554018,"byte_end":10554021,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554026,"byte_end":10554077,"line_start":141,"line_end":141,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554082,"byte_end":10554124,"line_start":142,"line_end":142,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554129,"byte_end":10554134,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554139,"byte_end":10554146,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554151,"byte_end":10554154,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554159,"byte_end":10554183,"line_start":146,"line_end":146,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554188,"byte_end":10554191,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554196,"byte_end":10554203,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554208,"byte_end":10554234,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554239,"byte_end":10554242,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554247,"byte_end":10554265,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554270,"byte_end":10554291,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554296,"byte_end":10554342,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554347,"byte_end":10554350,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554355,"byte_end":10554395,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554400,"byte_end":10554440,"line_start":156,"line_end":156,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554445,"byte_end":10554448,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554453,"byte_end":10554504,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554509,"byte_end":10554560,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554565,"byte_end":10554570,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554575,"byte_end":10554582,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4441},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556668,"byte_end":10556681,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554725,"byte_end":10554787,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554792,"byte_end":10554795,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554800,"byte_end":10554875,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554880,"byte_end":10554953,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10554958,"byte_end":10555034,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555039,"byte_end":10555114,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555119,"byte_end":10555122,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555127,"byte_end":10555200,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555205,"byte_end":10555279,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555284,"byte_end":10555310,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555315,"byte_end":10555318,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555323,"byte_end":10555391,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555396,"byte_end":10555471,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555476,"byte_end":10555531,"line_start":180,"line_end":180,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555536,"byte_end":10555539,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555544,"byte_end":10555613,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555618,"byte_end":10555690,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555695,"byte_end":10555756,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555761,"byte_end":10555764,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555769,"byte_end":10555795,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555800,"byte_end":10555849,"line_start":187,"line_end":187,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555854,"byte_end":10555920,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555925,"byte_end":10555928,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555933,"byte_end":10555945,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555950,"byte_end":10555953,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10555958,"byte_end":10556025,"line_start":192,"line_end":192,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556030,"byte_end":10556042,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556047,"byte_end":10556050,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556055,"byte_end":10556069,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556074,"byte_end":10556077,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556082,"byte_end":10556089,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556094,"byte_end":10556114,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556119,"byte_end":10556151,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556156,"byte_end":10556182,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556187,"byte_end":10556190,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556195,"byte_end":10556210,"line_start":202,"line_end":202,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556215,"byte_end":10556266,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556271,"byte_end":10556274,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556279,"byte_end":10556326,"line_start":205,"line_end":205,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556331,"byte_end":10556384,"line_start":206,"line_end":206,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556389,"byte_end":10556400,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556405,"byte_end":10556408,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556413,"byte_end":10556435,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556440,"byte_end":10556461,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556466,"byte_end":10556500,"line_start":211,"line_end":211,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556505,"byte_end":10556547,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556552,"byte_end":10556567,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556572,"byte_end":10556605,"line_start":214,"line_end":214,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556610,"byte_end":10556615,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556620,"byte_end":10556627,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10556632,"byte_end":10556656,"line_start":217,"line_end":217,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4442},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558769,"byte_end":10558774,"line_start":278,"line_end":278,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10557497,"byte_end":10557560,"line_start":239,"line_end":239,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10557565,"byte_end":10557568,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10557573,"byte_end":10557648,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10557653,"byte_end":10557725,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10557730,"byte_end":10557800,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10557805,"byte_end":10557808,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10557813,"byte_end":10557884,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10557889,"byte_end":10557955,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] values, the `recv` method will not return `None`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10557960,"byte_end":10558035,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ until those are released.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558040,"byte_end":10558069,"line_start":248,"line_end":248,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558074,"byte_end":10558077,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558082,"byte_end":10558104,"line_start":250,"line_end":250,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558109,"byte_end":10558112,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558117,"byte_end":10558131,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558136,"byte_end":10558139,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558144,"byte_end":10558151,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558156,"byte_end":10558182,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558187,"byte_end":10558190,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558195,"byte_end":10558213,"line_start":257,"line_end":257,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558218,"byte_end":10558239,"line_start":258,"line_end":258,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558244,"byte_end":10558289,"line_start":259,"line_end":259,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558294,"byte_end":10558297,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558302,"byte_end":10558335,"line_start":261,"line_end":261,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558340,"byte_end":10558366,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558371,"byte_end":10558426,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558431,"byte_end":10558462,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558467,"byte_end":10558490,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558495,"byte_end":10558508,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558513,"byte_end":10558524,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558529,"byte_end":10558532,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558537,"byte_end":10558556,"line_start":269,"line_end":269,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558561,"byte_end":10558564,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558569,"byte_end":10558616,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558621,"byte_end":10558657,"line_start":272,"line_end":272,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558662,"byte_end":10558671,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558676,"byte_end":10558679,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558684,"byte_end":10558735,"line_start":275,"line_end":275,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558740,"byte_end":10558745,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558750,"byte_end":10558757,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4443},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559615,"byte_end":10559624,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558826,"byte_end":10558880,"line_start":282,"line_end":282,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558885,"byte_end":10558888,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558893,"byte_end":10558917,"line_start":284,"line_end":284,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558922,"byte_end":10558925,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10558930,"byte_end":10559004,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559009,"byte_end":10559023,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559028,"byte_end":10559090,"line_start":288,"line_end":288,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559095,"byte_end":10559169,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559174,"byte_end":10559226,"line_start":290,"line_end":290,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559231,"byte_end":10559234,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559239,"byte_end":10559311,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559316,"byte_end":10559392,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559397,"byte_end":10559473,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559478,"byte_end":10559549,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559554,"byte_end":10559603,"line_start":296,"line_end":296,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561720,"byte_end":10561724,"line_start":362,"line_end":362,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560080,"byte_end":10560131,"line_start":317,"line_end":317,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560136,"byte_end":10560139,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560144,"byte_end":10560220,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560225,"byte_end":10560301,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560306,"byte_end":10560380,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560385,"byte_end":10560460,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560465,"byte_end":10560534,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560539,"byte_end":10560611,"line_start":324,"line_end":324,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560616,"byte_end":10560647,"line_start":325,"line_end":325,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560652,"byte_end":10560655,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560660,"byte_end":10560672,"line_start":327,"line_end":327,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560677,"byte_end":10560680,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560685,"byte_end":10560758,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560763,"byte_end":10560837,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560842,"byte_end":10560902,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560907,"byte_end":10560910,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560915,"byte_end":10560945,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560950,"byte_end":10560976,"line_start":334,"line_end":334,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560981,"byte_end":10560984,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10560989,"byte_end":10561003,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561008,"byte_end":10561011,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561016,"byte_end":10561086,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561091,"byte_end":10561130,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561135,"byte_end":10561138,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561143,"byte_end":10561154,"line_start":341,"line_end":341,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561159,"byte_end":10561185,"line_start":342,"line_end":342,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561190,"byte_end":10561193,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561198,"byte_end":10561216,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561221,"byte_end":10561242,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561247,"byte_end":10561291,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561296,"byte_end":10561299,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561304,"byte_end":10561337,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561342,"byte_end":10561370,"line_start":349,"line_end":349,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561375,"byte_end":10561425,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561430,"byte_end":10561479,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561484,"byte_end":10561511,"line_start":352,"line_end":352,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561516,"byte_end":10561533,"line_start":353,"line_end":353,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561538,"byte_end":10561551,"line_start":354,"line_end":354,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561556,"byte_end":10561567,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561572,"byte_end":10561575,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561580,"byte_end":10561625,"line_start":357,"line_end":357,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561630,"byte_end":10561666,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561671,"byte_end":10561680,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561685,"byte_end":10561690,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561695,"byte_end":10561702,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4455},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562857,"byte_end":10562863,"line_start":403,"line_end":403,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10561976,"byte_end":10562020,"line_start":372,"line_end":372,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562025,"byte_end":10562028,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562033,"byte_end":10562108,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562113,"byte_end":10562168,"line_start":375,"line_end":375,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562173,"byte_end":10562176,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562181,"byte_end":10562195,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562200,"byte_end":10562203,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562208,"byte_end":10562215,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562220,"byte_end":10562246,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562251,"byte_end":10562254,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562259,"byte_end":10562277,"line_start":382,"line_end":382,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562282,"byte_end":10562303,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562308,"byte_end":10562355,"line_start":384,"line_end":384,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562360,"byte_end":10562390,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562395,"byte_end":10562425,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562430,"byte_end":10562460,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562465,"byte_end":10562495,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562500,"byte_end":10562533,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562538,"byte_end":10562559,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562564,"byte_end":10562575,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562580,"byte_end":10562583,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562588,"byte_end":10562611,"line_start":393,"line_end":393,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562616,"byte_end":10562641,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562646,"byte_end":10562671,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562676,"byte_end":10562701,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562706,"byte_end":10562731,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562736,"byte_end":10562760,"line_start":398,"line_end":398,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562765,"byte_end":10562775,"line_start":399,"line_end":399,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562780,"byte_end":10562817,"line_start":400,"line_end":400,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562822,"byte_end":10562827,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562832,"byte_end":10562839,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565037,"byte_end":10565045,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562917,"byte_end":10562976,"line_start":407,"line_end":407,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562981,"byte_end":10562984,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10562989,"byte_end":10563068,"line_start":409,"line_end":409,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563073,"byte_end":10563148,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563153,"byte_end":10563231,"line_start":411,"line_end":411,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563236,"byte_end":10563278,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563283,"byte_end":10563286,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563291,"byte_end":10563303,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563308,"byte_end":10563311,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563316,"byte_end":10563387,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563392,"byte_end":10563468,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563473,"byte_end":10563495,"line_start":418,"line_end":418,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563500,"byte_end":10563503,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563508,"byte_end":10563581,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563586,"byte_end":10563660,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563665,"byte_end":10563725,"line_start":422,"line_end":422,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563730,"byte_end":10563733,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563738,"byte_end":10563764,"line_start":424,"line_end":424,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563769,"byte_end":10563793,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563798,"byte_end":10563828,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563833,"byte_end":10563836,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563841,"byte_end":10563855,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563860,"byte_end":10563863,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563868,"byte_end":10563875,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563880,"byte_end":10563906,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563911,"byte_end":10563914,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563919,"byte_end":10563937,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563942,"byte_end":10563963,"line_start":434,"line_end":434,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10563968,"byte_end":10564014,"line_start":435,"line_end":435,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564019,"byte_end":10564064,"line_start":436,"line_end":436,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564069,"byte_end":10564099,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564104,"byte_end":10564107,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564112,"byte_end":10564145,"line_start":439,"line_end":439,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564150,"byte_end":10564189,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564194,"byte_end":10564233,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564238,"byte_end":10564300,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564305,"byte_end":10564316,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564321,"byte_end":10564324,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564329,"byte_end":10564362,"line_start":445,"line_end":445,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564367,"byte_end":10564416,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564421,"byte_end":10564468,"line_start":447,"line_end":447,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564473,"byte_end":10564509,"line_start":448,"line_end":448,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564514,"byte_end":10564525,"line_start":449,"line_end":449,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564530,"byte_end":10564533,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564538,"byte_end":10564558,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564563,"byte_end":10564602,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564607,"byte_end":10564652,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564657,"byte_end":10564660,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564665,"byte_end":10564704,"line_start":455,"line_end":455,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564709,"byte_end":10564754,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564759,"byte_end":10564762,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564767,"byte_end":10564816,"line_start":458,"line_end":458,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564821,"byte_end":10564852,"line_start":459,"line_end":459,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564857,"byte_end":10564919,"line_start":460,"line_end":460,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564924,"byte_end":10564989,"line_start":461,"line_end":461,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10564994,"byte_end":10565003,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565008,"byte_end":10565013,"line_start":463,"line_end":463,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565018,"byte_end":10565025,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4459},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567134,"byte_end":10567146,"line_start":524,"line_end":524,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565450,"byte_end":10565530,"line_start":477,"line_end":477,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565535,"byte_end":10565538,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565543,"byte_end":10565620,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565625,"byte_end":10565703,"line_start":480,"line_end":480,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565708,"byte_end":10565756,"line_start":481,"line_end":481,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565761,"byte_end":10565764,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565769,"byte_end":10565795,"line_start":483,"line_end":483,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565800,"byte_end":10565803,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565808,"byte_end":10565820,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565825,"byte_end":10565828,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565833,"byte_end":10565906,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565911,"byte_end":10565968,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10565973,"byte_end":10566054,"line_start":489,"line_end":489,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566059,"byte_end":10566062,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566067,"byte_end":10566097,"line_start":491,"line_end":491,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566102,"byte_end":10566128,"line_start":492,"line_end":492,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566133,"byte_end":10566136,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566141,"byte_end":10566155,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566160,"byte_end":10566163,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566168,"byte_end":10566246,"line_start":496,"line_end":496,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566251,"byte_end":10566322,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566327,"byte_end":10566330,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566335,"byte_end":10566346,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566351,"byte_end":10566377,"line_start":500,"line_end":500,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566382,"byte_end":10566421,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566426,"byte_end":10566429,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566434,"byte_end":10566452,"line_start":503,"line_end":503,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566457,"byte_end":10566478,"line_start":504,"line_end":504,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566483,"byte_end":10566527,"line_start":505,"line_end":505,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566532,"byte_end":10566535,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566540,"byte_end":10566573,"line_start":507,"line_end":507,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566578,"byte_end":10566606,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566611,"byte_end":10566697,"line_start":509,"line_end":509,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566702,"byte_end":10566755,"line_start":510,"line_end":510,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566760,"byte_end":10566787,"line_start":511,"line_end":511,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566792,"byte_end":10566809,"line_start":512,"line_end":512,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566814,"byte_end":10566827,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566832,"byte_end":10566843,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566848,"byte_end":10566851,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566856,"byte_end":10566901,"line_start":516,"line_end":516,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566906,"byte_end":10566942,"line_start":517,"line_end":517,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10566947,"byte_end":10566999,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567004,"byte_end":10567013,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567018,"byte_end":10567023,"line_start":520,"line_end":520,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567028,"byte_end":10567035,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567040,"byte_end":10567064,"line_start":522,"line_end":522,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4462},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568711,"byte_end":10568724,"line_start":577,"line_end":577,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567639,"byte_end":10567698,"line_start":543,"line_end":543,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567703,"byte_end":10567706,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567711,"byte_end":10567779,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567784,"byte_end":10567852,"line_start":546,"line_end":546,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567857,"byte_end":10567924,"line_start":547,"line_end":547,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567929,"byte_end":10567932,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10567937,"byte_end":10568005,"line_start":549,"line_end":549,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568010,"byte_end":10568013,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568018,"byte_end":10568030,"line_start":551,"line_end":551,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568035,"byte_end":10568038,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568043,"byte_end":10568110,"line_start":553,"line_end":553,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568115,"byte_end":10568127,"line_start":554,"line_end":554,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568132,"byte_end":10568135,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568140,"byte_end":10568154,"line_start":556,"line_end":556,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568159,"byte_end":10568162,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568167,"byte_end":10568174,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568179,"byte_end":10568199,"line_start":559,"line_end":559,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568204,"byte_end":10568236,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568241,"byte_end":10568267,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568272,"byte_end":10568275,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568280,"byte_end":10568295,"line_start":563,"line_end":563,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568300,"byte_end":10568350,"line_start":564,"line_end":564,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568355,"byte_end":10568358,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568363,"byte_end":10568410,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568415,"byte_end":10568457,"line_start":567,"line_end":567,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568462,"byte_end":10568473,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568478,"byte_end":10568481,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568486,"byte_end":10568539,"line_start":570,"line_end":570,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568544,"byte_end":10568594,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568599,"byte_end":10568610,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568615,"byte_end":10568648,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568653,"byte_end":10568658,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568663,"byte_end":10568670,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568675,"byte_end":10568699,"line_start":576,"line_end":576,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4463},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569415,"byte_end":10569424,"line_start":599,"line_end":599,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568833,"byte_end":10568897,"line_start":581,"line_end":581,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568902,"byte_end":10568972,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568977,"byte_end":10568988,"line_start":583,"line_end":583,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10568993,"byte_end":10568996,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569001,"byte_end":10569046,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569051,"byte_end":10569110,"line_start":586,"line_end":586,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569115,"byte_end":10569118,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569123,"byte_end":10569130,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569135,"byte_end":10569191,"line_start":589,"line_end":589,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569196,"byte_end":10569225,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569230,"byte_end":10569233,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569238,"byte_end":10569263,"line_start":592,"line_end":592,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569268,"byte_end":10569298,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569303,"byte_end":10569306,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569311,"byte_end":10569324,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569329,"byte_end":10569357,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569362,"byte_end":10569391,"line_start":597,"line_end":597,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569396,"byte_end":10569403,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570815,"byte_end":10570822,"line_start":641,"line_end":641,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569483,"byte_end":10569550,"line_start":603,"line_end":603,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569555,"byte_end":10569600,"line_start":604,"line_end":604,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569605,"byte_end":10569608,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569613,"byte_end":10569688,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569693,"byte_end":10569768,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569773,"byte_end":10569846,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569851,"byte_end":10569926,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569931,"byte_end":10569953,"line_start":610,"line_end":610,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569958,"byte_end":10569961,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10569966,"byte_end":10570042,"line_start":612,"line_end":612,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570047,"byte_end":10570066,"line_start":613,"line_end":613,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570071,"byte_end":10570074,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570079,"byte_end":10570101,"line_start":615,"line_end":615,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570106,"byte_end":10570132,"line_start":616,"line_end":616,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570137,"byte_end":10570140,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570145,"byte_end":10570159,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570164,"byte_end":10570167,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570172,"byte_end":10570179,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570184,"byte_end":10570210,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570215,"byte_end":10570218,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570223,"byte_end":10570241,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570246,"byte_end":10570267,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570272,"byte_end":10570316,"line_start":625,"line_end":625,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570321,"byte_end":10570324,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570329,"byte_end":10570356,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570361,"byte_end":10570410,"line_start":628,"line_end":628,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570415,"byte_end":10570418,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570423,"byte_end":10570489,"line_start":630,"line_end":630,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570494,"byte_end":10570524,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570529,"byte_end":10570572,"line_start":632,"line_end":632,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570577,"byte_end":10570580,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570585,"byte_end":10570626,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570631,"byte_end":10570656,"line_start":635,"line_end":635,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570661,"byte_end":10570664,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570669,"byte_end":10570720,"line_start":637,"line_end":637,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570725,"byte_end":10570775,"line_start":638,"line_end":638,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570780,"byte_end":10570785,"line_start":639,"line_end":639,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10570790,"byte_end":10570797,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4467},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572585,"byte_end":10572596,"line_start":693,"line_end":693,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571064,"byte_end":10571143,"line_start":650,"line_end":650,"column_start":5,"column_end":84}},{"value":"/ available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571148,"byte_end":10571162,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571167,"byte_end":10571170,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571175,"byte_end":10571255,"line_start":653,"line_end":653,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571260,"byte_end":10571345,"line_start":654,"line_end":654,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571350,"byte_end":10571432,"line_start":655,"line_end":655,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571437,"byte_end":10571511,"line_start":656,"line_end":656,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571516,"byte_end":10571519,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571524,"byte_end":10571600,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571605,"byte_end":10571624,"line_start":659,"line_end":659,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571629,"byte_end":10571632,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571637,"byte_end":10571659,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571664,"byte_end":10571690,"line_start":662,"line_end":662,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571695,"byte_end":10571727,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571732,"byte_end":10571735,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571740,"byte_end":10571754,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571759,"byte_end":10571762,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571767,"byte_end":10571774,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571779,"byte_end":10571805,"line_start":668,"line_end":668,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571810,"byte_end":10571813,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571818,"byte_end":10571836,"line_start":670,"line_end":670,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571841,"byte_end":10571862,"line_start":671,"line_end":671,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571867,"byte_end":10571911,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571916,"byte_end":10571919,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571924,"byte_end":10571951,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10571956,"byte_end":10572003,"line_start":675,"line_end":675,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572008,"byte_end":10572011,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572016,"byte_end":10572082,"line_start":677,"line_end":677,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572087,"byte_end":10572117,"line_start":678,"line_end":678,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572122,"byte_end":10572165,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572170,"byte_end":10572173,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572178,"byte_end":10572242,"line_start":681,"line_end":681,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572247,"byte_end":10572292,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572297,"byte_end":10572340,"line_start":683,"line_end":683,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572345,"byte_end":10572348,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572353,"byte_end":10572394,"line_start":685,"line_end":685,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572399,"byte_end":10572424,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572429,"byte_end":10572432,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572437,"byte_end":10572488,"line_start":688,"line_end":688,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572493,"byte_end":10572543,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572548,"byte_end":10572551,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572556,"byte_end":10572561,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572566,"byte_end":10572573,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4476},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574313,"byte_end":10574317,"line_start":754,"line_end":754,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573240,"byte_end":10573286,"line_start":722,"line_end":722,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573291,"byte_end":10573294,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573299,"byte_end":10573374,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573379,"byte_end":10573453,"line_start":725,"line_end":725,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573458,"byte_end":10573532,"line_start":726,"line_end":726,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573537,"byte_end":10573585,"line_start":727,"line_end":727,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573590,"byte_end":10573593,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573598,"byte_end":10573638,"line_start":729,"line_end":729,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573643,"byte_end":10573646,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573651,"byte_end":10573665,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573670,"byte_end":10573673,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573678,"byte_end":10573685,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573690,"byte_end":10573716,"line_start":734,"line_end":734,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573721,"byte_end":10573724,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573729,"byte_end":10573747,"line_start":736,"line_end":736,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573752,"byte_end":10573773,"line_start":737,"line_end":737,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573778,"byte_end":10573822,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573827,"byte_end":10573830,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573835,"byte_end":10573862,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573867,"byte_end":10573916,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573921,"byte_end":10573924,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573929,"byte_end":10573995,"line_start":743,"line_end":743,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574000,"byte_end":10574030,"line_start":744,"line_end":744,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574035,"byte_end":10574078,"line_start":745,"line_end":745,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574083,"byte_end":10574086,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574091,"byte_end":10574130,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574135,"byte_end":10574160,"line_start":748,"line_end":748,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574165,"byte_end":10574168,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574173,"byte_end":10574224,"line_start":750,"line_end":750,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574229,"byte_end":10574279,"line_start":751,"line_end":751,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574284,"byte_end":10574289,"line_start":752,"line_end":752,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574294,"byte_end":10574301,"line_start":753,"line_end":753,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4673},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10596569,"byte_end":10596584,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":4675}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10596411,"byte_end":10596465,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10596466,"byte_end":10596469,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10596470,"byte_end":10596502,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10596503,"byte_end":10596557,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597377,"byte_end":10597394,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":4684}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597001,"byte_end":10597058,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597059,"byte_end":10597062,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597063,"byte_end":10597095,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597096,"byte_end":10597150,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597151,"byte_end":10597154,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597155,"byte_end":10597237,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597238,"byte_end":10597241,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597242,"byte_end":10597365,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":4688},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598226,"byte_end":10598243,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597693,"byte_end":10597769,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597770,"byte_end":10597801,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597802,"byte_end":10597805,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597806,"byte_end":10597886,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597887,"byte_end":10597966,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597967,"byte_end":10597980,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597981,"byte_end":10597984,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597985,"byte_end":10598064,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598065,"byte_end":10598141,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598142,"byte_end":10598218,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4694},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599722,"byte_end":10599726,"line_start":119,"line_end":119,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598652,"byte_end":10598698,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598703,"byte_end":10598706,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598711,"byte_end":10598783,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598788,"byte_end":10598842,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598847,"byte_end":10598850,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598855,"byte_end":10598869,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598874,"byte_end":10598877,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598882,"byte_end":10598889,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598894,"byte_end":10598920,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598925,"byte_end":10598928,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598933,"byte_end":10598951,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598956,"byte_end":10598977,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598982,"byte_end":10599035,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599040,"byte_end":10599043,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599048,"byte_end":10599081,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599086,"byte_end":10599124,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599129,"byte_end":10599140,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599145,"byte_end":10599148,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599153,"byte_end":10599204,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599209,"byte_end":10599251,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599256,"byte_end":10599261,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599266,"byte_end":10599273,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599278,"byte_end":10599281,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599286,"byte_end":10599310,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599315,"byte_end":10599318,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599323,"byte_end":10599330,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599335,"byte_end":10599361,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599366,"byte_end":10599369,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599374,"byte_end":10599392,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599397,"byte_end":10599418,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599423,"byte_end":10599476,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599481,"byte_end":10599484,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599489,"byte_end":10599523,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599528,"byte_end":10599562,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599567,"byte_end":10599570,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599575,"byte_end":10599626,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599631,"byte_end":10599682,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599687,"byte_end":10599692,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599697,"byte_end":10599704,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4699},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600533,"byte_end":10600546,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599848,"byte_end":10599910,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599915,"byte_end":10599918,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599923,"byte_end":10599935,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599940,"byte_end":10599943,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10599948,"byte_end":10600015,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600020,"byte_end":10600032,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600037,"byte_end":10600040,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600045,"byte_end":10600059,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600064,"byte_end":10600067,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600072,"byte_end":10600079,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600084,"byte_end":10600104,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600109,"byte_end":10600135,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600140,"byte_end":10600143,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600148,"byte_end":10600166,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600171,"byte_end":10600192,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600197,"byte_end":10600256,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600261,"byte_end":10600264,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600269,"byte_end":10600316,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600321,"byte_end":10600374,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600379,"byte_end":10600390,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600395,"byte_end":10600398,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600403,"byte_end":10600431,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600436,"byte_end":10600470,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600475,"byte_end":10600480,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600485,"byte_end":10600492,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600497,"byte_end":10600521,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4700},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600866,"byte_end":10600871,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600629,"byte_end":10600693,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600698,"byte_end":10600701,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600706,"byte_end":10600781,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600786,"byte_end":10600854,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4701},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601712,"byte_end":10601721,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600923,"byte_end":10600977,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600982,"byte_end":10600985,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10600990,"byte_end":10601014,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601019,"byte_end":10601022,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601027,"byte_end":10601101,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601106,"byte_end":10601120,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601125,"byte_end":10601187,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601192,"byte_end":10601266,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601271,"byte_end":10601323,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601328,"byte_end":10601331,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601336,"byte_end":10601408,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601413,"byte_end":10601489,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601494,"byte_end":10601570,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601575,"byte_end":10601646,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601651,"byte_end":10601700,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4705},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602649,"byte_end":10602653,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601961,"byte_end":10602035,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602040,"byte_end":10602043,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602048,"byte_end":10602133,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602138,"byte_end":10602219,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602224,"byte_end":10602292,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602297,"byte_end":10602300,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602305,"byte_end":10602378,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602383,"byte_end":10602454,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602459,"byte_end":10602536,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602541,"byte_end":10602544,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602549,"byte_end":10602588,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10602593,"byte_end":10602637,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4711},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604582,"byte_end":10604588,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603691,"byte_end":10603735,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603740,"byte_end":10603743,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603748,"byte_end":10603823,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603828,"byte_end":10603883,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603888,"byte_end":10603891,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603896,"byte_end":10603910,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603915,"byte_end":10603918,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603923,"byte_end":10603930,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603935,"byte_end":10603961,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603966,"byte_end":10603969,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603974,"byte_end":10603992,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10603997,"byte_end":10604018,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604023,"byte_end":10604079,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604084,"byte_end":10604114,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604119,"byte_end":10604149,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604154,"byte_end":10604184,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604189,"byte_end":10604219,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604224,"byte_end":10604257,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604262,"byte_end":10604283,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604288,"byte_end":10604299,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604304,"byte_end":10604307,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604312,"byte_end":10604335,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604340,"byte_end":10604365,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604370,"byte_end":10604395,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604400,"byte_end":10604425,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604430,"byte_end":10604455,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604460,"byte_end":10604484,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604489,"byte_end":10604499,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604547,"byte_end":10604552,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604557,"byte_end":10604564,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4714},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605285,"byte_end":10605294,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604641,"byte_end":10604705,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604710,"byte_end":10604759,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604764,"byte_end":10604814,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604819,"byte_end":10604822,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604827,"byte_end":10604890,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604895,"byte_end":10604972,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604977,"byte_end":10604980,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604985,"byte_end":10604992,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10604997,"byte_end":10605061,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605066,"byte_end":10605095,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605100,"byte_end":10605103,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605108,"byte_end":10605133,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605138,"byte_end":10605168,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605173,"byte_end":10605176,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605181,"byte_end":10605194,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605199,"byte_end":10605227,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605232,"byte_end":10605261,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10605266,"byte_end":10605273,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4719},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":5402},{"krate":0,"index":5406},{"krate":0,"index":4722},{"krate":0,"index":4725},{"krate":0,"index":5409},{"krate":0,"index":5417},{"krate":0,"index":4727},{"krate":0,"index":4729},{"krate":0,"index":4732},{"krate":0,"index":5420},{"krate":0,"index":5423},{"krate":0,"index":4735},{"krate":0,"index":4737},{"krate":0,"index":5430},{"krate":0,"index":5438},{"krate":0,"index":5425},{"krate":0,"index":5427}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605351,"byte_end":10605374,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5402},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605478,"byte_end":10605487,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605414,"byte_end":10605449,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5405},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605491,"byte_end":10605496,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":5402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5411},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606040,"byte_end":10606044,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":5409},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605908,"byte_end":10605976,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605981,"byte_end":10606035,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5414},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606145,"byte_end":10606151,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":5409},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606054,"byte_end":10606123,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606128,"byte_end":10606140,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":5409},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605886,"byte_end":10605898,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":5411},{"krate":0,"index":5414}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605740,"byte_end":10605811,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605812,"byte_end":10605859,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5420},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606789,"byte_end":10606798,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606727,"byte_end":10606760,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5432},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10608304,"byte_end":10608311,"line_start":109,"line_end":109,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":5430},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5435},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10608424,"byte_end":10608430,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":5430},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5430},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10608142,"byte_end":10608158,"line_start":106,"line_end":106,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":5432},{"krate":0,"index":5435}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":24384,"byte_end":24408,"line_start":311,"line_end":311,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4748},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613416,"byte_end":10613421,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":4750},{"krate":0,"index":4751}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609163,"byte_end":10609201,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609202,"byte_end":10609205,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609206,"byte_end":10609284,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609285,"byte_end":10609361,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609362,"byte_end":10609386,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609387,"byte_end":10609390,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609391,"byte_end":10609432,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609433,"byte_end":10609436,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609437,"byte_end":10609517,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609518,"byte_end":10609597,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609598,"byte_end":10609661,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609662,"byte_end":10609665,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609666,"byte_end":10609745,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609746,"byte_end":10609826,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609827,"byte_end":10609905,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609906,"byte_end":10609985,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10609986,"byte_end":10610064,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610065,"byte_end":10610145,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610146,"byte_end":10610159,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610160,"byte_end":10610163,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610164,"byte_end":10610243,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610244,"byte_end":10610320,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610321,"byte_end":10610398,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610399,"byte_end":10610432,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610433,"byte_end":10610436,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610437,"byte_end":10610512,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610513,"byte_end":10610591,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610592,"byte_end":10610634,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610635,"byte_end":10610638,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610639,"byte_end":10610666,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610667,"byte_end":10610715,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610716,"byte_end":10610794,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610795,"byte_end":10610798,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610799,"byte_end":10610814,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610815,"byte_end":10610818,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610819,"byte_end":10610837,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610838,"byte_end":10610865,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610866,"byte_end":10610889,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610890,"byte_end":10610893,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610894,"byte_end":10610912,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610913,"byte_end":10610934,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610935,"byte_end":10610979,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10610980,"byte_end":10611019,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611020,"byte_end":10611023,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611024,"byte_end":10611057,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611058,"byte_end":10611104,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611105,"byte_end":10611128,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611129,"byte_end":10611140,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611141,"byte_end":10611144,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611145,"byte_end":10611187,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611188,"byte_end":10611207,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611208,"byte_end":10611213,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611214,"byte_end":10611221,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611222,"byte_end":10611225,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611226,"byte_end":10611229,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611230,"byte_end":10611248,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611249,"byte_end":10611276,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611277,"byte_end":10611300,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611301,"byte_end":10611304,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611305,"byte_end":10611323,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611324,"byte_end":10611345,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611346,"byte_end":10611390,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611391,"byte_end":10611394,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611395,"byte_end":10611418,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611419,"byte_end":10611465,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611466,"byte_end":10611503,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611504,"byte_end":10611536,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611537,"byte_end":10611594,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611595,"byte_end":10611626,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611627,"byte_end":10611668,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611669,"byte_end":10611686,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611687,"byte_end":10611702,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611703,"byte_end":10611712,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611713,"byte_end":10611716,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611717,"byte_end":10611731,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611732,"byte_end":10611774,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611775,"byte_end":10611797,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611798,"byte_end":10611811,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611812,"byte_end":10611821,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611822,"byte_end":10611856,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611857,"byte_end":10611862,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611863,"byte_end":10611870,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611871,"byte_end":10611947,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10611948,"byte_end":10612021,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612022,"byte_end":10612037,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612038,"byte_end":10612113,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612114,"byte_end":10612190,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612191,"byte_end":10612243,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612244,"byte_end":10612247,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612248,"byte_end":10612326,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612327,"byte_end":10612407,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612408,"byte_end":10612484,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612485,"byte_end":10612562,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612563,"byte_end":10612641,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612642,"byte_end":10612722,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612723,"byte_end":10612803,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612804,"byte_end":10612873,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612874,"byte_end":10612877,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612878,"byte_end":10612957,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10612958,"byte_end":10613037,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613038,"byte_end":10613116,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613117,"byte_end":10613178,"line_start":112,"line_end":112,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613179,"byte_end":10613182,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613183,"byte_end":10613210,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613211,"byte_end":10613248,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613249,"byte_end":10613283,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613284,"byte_end":10613333,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613334,"byte_end":10613371,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613372,"byte_end":10613404,"line_start":119,"line_end":119,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4752},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613850,"byte_end":10613860,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":4755}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613489,"byte_end":10613520,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613521,"byte_end":10613524,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613525,"byte_end":10613604,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613605,"byte_end":10613680,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613681,"byte_end":10613714,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613715,"byte_end":10613718,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613719,"byte_end":10613797,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613798,"byte_end":10613838,"line_start":132,"line_end":132,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4756},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614648,"byte_end":10614663,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":4758}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613905,"byte_end":10613943,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613944,"byte_end":10613947,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10613948,"byte_end":10614029,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614030,"byte_end":10614110,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614111,"byte_end":10614185,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614186,"byte_end":10614247,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614248,"byte_end":10614251,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614252,"byte_end":10614331,"line_start":144,"line_end":144,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614332,"byte_end":10614411,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614412,"byte_end":10614480,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614481,"byte_end":10614484,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614485,"byte_end":10614563,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614564,"byte_end":10614604,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614605,"byte_end":10614608,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614609,"byte_end":10614636,"line_start":151,"line_end":151,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5441},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615752,"byte_end":10615764,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615163,"byte_end":10615236,"line_start":164,"line_end":164,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615237,"byte_end":10615273,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615274,"byte_end":10615277,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615278,"byte_end":10615356,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615357,"byte_end":10615360,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615361,"byte_end":10615438,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615439,"byte_end":10615466,"line_start":170,"line_end":170,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615467,"byte_end":10615470,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615471,"byte_end":10615548,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615549,"byte_end":10615570,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615571,"byte_end":10615574,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615575,"byte_end":10615615,"line_start":175,"line_end":175,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615616,"byte_end":10615668,"line_start":176,"line_end":176,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615669,"byte_end":10615723,"line_start":177,"line_end":177,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4772},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616991,"byte_end":10616994,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616788,"byte_end":10616846,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616851,"byte_end":10616854,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616859,"byte_end":10616873,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616878,"byte_end":10616881,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616886,"byte_end":10616893,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616898,"byte_end":10616925,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616930,"byte_end":10616933,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616938,"byte_end":10616967,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616972,"byte_end":10616979,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618152,"byte_end":10618156,"line_start":271,"line_end":271,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617692,"byte_end":10617738,"line_start":254,"line_end":254,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617743,"byte_end":10617789,"line_start":255,"line_end":255,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617794,"byte_end":10617865,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617870,"byte_end":10617873,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617878,"byte_end":10617892,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617897,"byte_end":10617900,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617905,"byte_end":10617912,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617917,"byte_end":10617944,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617949,"byte_end":10617952,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617957,"byte_end":10617975,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10617980,"byte_end":10618001,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618006,"byte_end":10618040,"line_start":265,"line_end":265,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618045,"byte_end":10618048,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618053,"byte_end":10618092,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618097,"byte_end":10618112,"line_start":268,"line_end":268,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618117,"byte_end":10618122,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618127,"byte_end":10618134,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4776},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619183,"byte_end":10619193,"line_start":302,"line_end":302,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618262,"byte_end":10618336,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618341,"byte_end":10618408,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618413,"byte_end":10618437,"line_start":278,"line_end":278,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618442,"byte_end":10618445,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618450,"byte_end":10618523,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618528,"byte_end":10618601,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618606,"byte_end":10618677,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618682,"byte_end":10618757,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618762,"byte_end":10618804,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618809,"byte_end":10618812,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618817,"byte_end":10618831,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618836,"byte_end":10618839,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618844,"byte_end":10618851,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618856,"byte_end":10618883,"line_start":289,"line_end":289,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618888,"byte_end":10618911,"line_start":290,"line_end":290,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618916,"byte_end":10618919,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618924,"byte_end":10618942,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618947,"byte_end":10618968,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10618973,"byte_end":10619017,"line_start":294,"line_end":294,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619022,"byte_end":10619025,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619030,"byte_end":10619083,"line_start":296,"line_end":296,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619088,"byte_end":10619103,"line_start":297,"line_end":297,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619108,"byte_end":10619113,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619118,"byte_end":10619125,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619130,"byte_end":10619133,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619138,"byte_end":10619165,"line_start":301,"line_end":301,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4783},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620070,"byte_end":10620078,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619602,"byte_end":10619671,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619676,"byte_end":10619718,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619723,"byte_end":10619726,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619731,"byte_end":10619765,"line_start":318,"line_end":318,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619770,"byte_end":10619784,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619789,"byte_end":10619792,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619797,"byte_end":10619804,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619809,"byte_end":10619836,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619841,"byte_end":10619904,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619909,"byte_end":10619912,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619917,"byte_end":10619947,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619952,"byte_end":10619955,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619960,"byte_end":10619990,"line_start":327,"line_end":327,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10619995,"byte_end":10620017,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620022,"byte_end":10620034,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620039,"byte_end":10620046,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620051,"byte_end":10620058,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4784},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620758,"byte_end":10620765,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620287,"byte_end":10620342,"line_start":339,"line_end":339,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620347,"byte_end":10620350,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620355,"byte_end":10620430,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620435,"byte_end":10620509,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620514,"byte_end":10620517,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620522,"byte_end":10620536,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620541,"byte_end":10620544,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620549,"byte_end":10620556,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620561,"byte_end":10620588,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620593,"byte_end":10620596,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620601,"byte_end":10620616,"line_start":349,"line_end":349,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620621,"byte_end":10620659,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620664,"byte_end":10620667,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620672,"byte_end":10620704,"line_start":352,"line_end":352,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620709,"byte_end":10620724,"line_start":353,"line_end":353,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620729,"byte_end":10620734,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620739,"byte_end":10620746,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4785},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621846,"byte_end":10621860,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10620934,"byte_end":10621008,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621013,"byte_end":10621050,"line_start":364,"line_end":364,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621055,"byte_end":10621058,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621063,"byte_end":10621131,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621136,"byte_end":10621209,"line_start":367,"line_end":367,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621214,"byte_end":10621290,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621295,"byte_end":10621369,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621374,"byte_end":10621422,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621427,"byte_end":10621430,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621435,"byte_end":10621469,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621474,"byte_end":10621501,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621506,"byte_end":10621520,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621525,"byte_end":10621528,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621533,"byte_end":10621540,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621545,"byte_end":10621572,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621577,"byte_end":10621600,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621605,"byte_end":10621668,"line_start":379,"line_end":379,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621673,"byte_end":10621676,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621681,"byte_end":10621721,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621726,"byte_end":10621729,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621734,"byte_end":10621778,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621783,"byte_end":10621805,"line_start":384,"line_end":384,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621810,"byte_end":10621822,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10621827,"byte_end":10621834,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622418,"byte_end":10622428,"line_start":408,"line_end":408,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622085,"byte_end":10622139,"line_start":394,"line_end":394,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622144,"byte_end":10622158,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622163,"byte_end":10622166,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622171,"byte_end":10622178,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622183,"byte_end":10622210,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622215,"byte_end":10622218,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622223,"byte_end":10622241,"line_start":400,"line_end":400,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622246,"byte_end":10622267,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622272,"byte_end":10622306,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622311,"byte_end":10622314,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622319,"byte_end":10622354,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622359,"byte_end":10622384,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622389,"byte_end":10622394,"line_start":406,"line_end":406,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622399,"byte_end":10622406,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5446},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628332,"byte_end":10628338,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":5447},{"krate":0,"index":5448}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625489,"byte_end":10625525,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625526,"byte_end":10625529,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625530,"byte_end":10625606,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625607,"byte_end":10625687,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625688,"byte_end":10625729,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625730,"byte_end":10625733,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625734,"byte_end":10625808,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625809,"byte_end":10625894,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625895,"byte_end":10625961,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625962,"byte_end":10625965,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10625966,"byte_end":10626024,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626025,"byte_end":10626105,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626106,"byte_end":10626186,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626187,"byte_end":10626270,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626271,"byte_end":10626321,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626322,"byte_end":10626325,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626326,"byte_end":10626410,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626411,"byte_end":10626486,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626487,"byte_end":10626557,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626558,"byte_end":10626561,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626562,"byte_end":10626646,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626647,"byte_end":10626720,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626721,"byte_end":10626792,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626793,"byte_end":10626796,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626797,"byte_end":10626811,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626812,"byte_end":10626815,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626816,"byte_end":10626832,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626833,"byte_end":10626836,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626837,"byte_end":10626844,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626845,"byte_end":10626873,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626874,"byte_end":10626897,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626898,"byte_end":10626901,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626902,"byte_end":10626920,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626921,"byte_end":10626942,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626943,"byte_end":10626988,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10626989,"byte_end":10627026,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627027,"byte_end":10627030,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627031,"byte_end":10627064,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627065,"byte_end":10627102,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627103,"byte_end":10627149,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627150,"byte_end":10627161,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627162,"byte_end":10627165,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627166,"byte_end":10627207,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627208,"byte_end":10627236,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627237,"byte_end":10627242,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627243,"byte_end":10627250,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627251,"byte_end":10627254,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627255,"byte_end":10627280,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627281,"byte_end":10627284,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627285,"byte_end":10627292,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627293,"byte_end":10627321,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627322,"byte_end":10627325,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627326,"byte_end":10627361,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627362,"byte_end":10627387,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627388,"byte_end":10627391,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627392,"byte_end":10627415,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627416,"byte_end":10627451,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627452,"byte_end":10627475,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627476,"byte_end":10627481,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627482,"byte_end":10627485,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627486,"byte_end":10627510,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627511,"byte_end":10627549,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627550,"byte_end":10627589,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627590,"byte_end":10627624,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627625,"byte_end":10627628,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627629,"byte_end":10627684,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627685,"byte_end":10627722,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627723,"byte_end":10627732,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627733,"byte_end":10627736,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627737,"byte_end":10627776,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627777,"byte_end":10627795,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627796,"byte_end":10627827,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627828,"byte_end":10627906,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627907,"byte_end":10627940,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627941,"byte_end":10627958,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627959,"byte_end":10627962,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10627963,"byte_end":10628013,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628014,"byte_end":10628059,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628060,"byte_end":10628073,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628074,"byte_end":10628083,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628084,"byte_end":10628089,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628090,"byte_end":10628097,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628098,"byte_end":10628101,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628102,"byte_end":10628131,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628132,"byte_end":10628173,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628174,"byte_end":10628218,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628219,"byte_end":10628261,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10628262,"byte_end":10628303,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5468},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10629188,"byte_end":10629196,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":5470},{"krate":0,"index":5471},{"krate":0,"index":5472}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10629122,"byte_end":10629159,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4865},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630537,"byte_end":10630540,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630333,"byte_end":10630389,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630394,"byte_end":10630397,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630402,"byte_end":10630416,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630421,"byte_end":10630424,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630429,"byte_end":10630436,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630441,"byte_end":10630469,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630474,"byte_end":10630477,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630482,"byte_end":10630513,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630518,"byte_end":10630525,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4866},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632241,"byte_end":10632249,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631194,"byte_end":10631222,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631227,"byte_end":10631230,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631235,"byte_end":10631253,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631258,"byte_end":10631261,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631266,"byte_end":10631279,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631284,"byte_end":10631313,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631318,"byte_end":10631325,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631330,"byte_end":10631333,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631338,"byte_end":10631414,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631419,"byte_end":10631497,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631502,"byte_end":10631577,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631582,"byte_end":10631655,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631660,"byte_end":10631663,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631668,"byte_end":10631708,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631713,"byte_end":10631716,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631721,"byte_end":10631735,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631740,"byte_end":10631743,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631748,"byte_end":10631755,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631760,"byte_end":10631788,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631793,"byte_end":10631816,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631821,"byte_end":10631824,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631829,"byte_end":10631847,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631852,"byte_end":10631873,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631878,"byte_end":10631923,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631928,"byte_end":10631965,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631970,"byte_end":10631973,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10631978,"byte_end":10632011,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632016,"byte_end":10632053,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632058,"byte_end":10632104,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632109,"byte_end":10632120,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632125,"byte_end":10632128,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632133,"byte_end":10632174,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632179,"byte_end":10632207,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632212,"byte_end":10632217,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632222,"byte_end":10632229,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4867},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633945,"byte_end":10633955,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632774,"byte_end":10632801,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632806,"byte_end":10632809,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632814,"byte_end":10632885,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632890,"byte_end":10632958,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10632963,"byte_end":10633039,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633044,"byte_end":10633089,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633094,"byte_end":10633097,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633102,"byte_end":10633176,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633181,"byte_end":10633259,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633264,"byte_end":10633336,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633341,"byte_end":10633355,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633360,"byte_end":10633363,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633368,"byte_end":10633412,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633417,"byte_end":10633420,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633425,"byte_end":10633439,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633444,"byte_end":10633447,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633452,"byte_end":10633459,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633464,"byte_end":10633492,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633497,"byte_end":10633520,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633525,"byte_end":10633528,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633533,"byte_end":10633551,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633556,"byte_end":10633577,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633582,"byte_end":10633627,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633632,"byte_end":10633669,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633674,"byte_end":10633677,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633682,"byte_end":10633715,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633720,"byte_end":10633757,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633762,"byte_end":10633808,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633813,"byte_end":10633824,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633829,"byte_end":10633832,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633837,"byte_end":10633878,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633883,"byte_end":10633911,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633916,"byte_end":10633921,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10633926,"byte_end":10633933,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4868},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636288,"byte_end":10636302,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635198,"byte_end":10635228,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635233,"byte_end":10635236,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635241,"byte_end":10635311,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ `notify()`, no permit is stored to be used by the next call to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635316,"byte_end":10635382,"line_start":352,"line_end":352,"column_start":5,"column_end":71}},{"value":"/ [`notified().await`]. The purpose of this method is to notify all","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635387,"byte_end":10635456,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635461,"byte_end":10635532,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635537,"byte_end":10635613,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635618,"byte_end":10635621,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635626,"byte_end":10635640,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635645,"byte_end":10635648,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635653,"byte_end":10635660,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635665,"byte_end":10635693,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635698,"byte_end":10635721,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635726,"byte_end":10635729,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635734,"byte_end":10635752,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635757,"byte_end":10635778,"line_start":364,"line_end":364,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635783,"byte_end":10635828,"line_start":365,"line_end":365,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635833,"byte_end":10635870,"line_start":366,"line_end":366,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635875,"byte_end":10635878,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635883,"byte_end":10635925,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635930,"byte_end":10635972,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635977,"byte_end":10635980,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10635985,"byte_end":10636031,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636036,"byte_end":10636082,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636087,"byte_end":10636124,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636129,"byte_end":10636140,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636145,"byte_end":10636148,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636153,"byte_end":10636177,"line_start":376,"line_end":376,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636182,"byte_end":10636206,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636211,"byte_end":10636254,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636259,"byte_end":10636264,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10636269,"byte_end":10636276,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4892},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":4893},{"krate":0,"index":4894},{"krate":0,"index":4895},{"krate":0,"index":4896},{"krate":0,"index":4897},{"krate":0,"index":4898},{"krate":0,"index":4899},{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":11620},{"krate":0,"index":4903},{"krate":0,"index":11622},{"krate":0,"index":4904},{"krate":0,"index":4905},{"krate":0,"index":11624},{"krate":0,"index":4906},{"krate":0,"index":11626},{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4910},{"krate":0,"index":5486},{"krate":0,"index":5489},{"krate":0,"index":5492},{"krate":0,"index":5495},{"krate":0,"index":4911},{"krate":0,"index":4919},{"krate":0,"index":4920},{"krate":0,"index":4926},{"krate":0,"index":4929},{"krate":0,"index":5523},{"krate":0,"index":5527},{"krate":0,"index":5526},{"krate":0,"index":4940},{"krate":0,"index":4942},{"krate":0,"index":4953},{"krate":0,"index":4956},{"krate":0,"index":4960},{"krate":0,"index":4963},{"krate":0,"index":4967},{"krate":0,"index":4974},{"krate":0,"index":4976},{"krate":0,"index":4978},{"krate":0,"index":4980},{"krate":0,"index":4983},{"krate":0,"index":4987},{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":5005}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10650604,"byte_end":10650674,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5486},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651153,"byte_end":10651159,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5488}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651006,"byte_end":10651053,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651054,"byte_end":10651057,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651058,"byte_end":10651124,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5492},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651351,"byte_end":10651359,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5494}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651202,"byte_end":10651251,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651252,"byte_end":10651255,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651256,"byte_end":10651322,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":4911},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651410,"byte_end":10651415,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":4912},{"krate":0,"index":5498},{"krate":0,"index":5508},{"krate":0,"index":5505},{"krate":0,"index":5506},{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5510},{"krate":0,"index":5521},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5515},{"krate":0,"index":5516},{"krate":0,"index":4913},{"krate":0,"index":4915},{"krate":0,"index":4916},{"krate":0,"index":4918}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651422,"byte_end":10651445,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5498},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651587,"byte_end":10651596,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651470,"byte_end":10651535,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5511},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651818,"byte_end":10651823,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":5510},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651751,"byte_end":10651809,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651912,"byte_end":10651918,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":5510},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651834,"byte_end":10651903,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":5510},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651728,"byte_end":10651740,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":5511},{"krate":0,"index":5513}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651618,"byte_end":10651678,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":4940},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654651,"byte_end":10654658,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10653836,"byte_end":10653915,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10653916,"byte_end":10653926,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10653927,"byte_end":10653930,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10653931,"byte_end":10654007,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654008,"byte_end":10654086,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654087,"byte_end":10654133,"line_start":133,"line_end":133,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654134,"byte_end":10654137,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654138,"byte_end":10654184,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654185,"byte_end":10654188,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654189,"byte_end":10654203,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654204,"byte_end":10654207,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654208,"byte_end":10654215,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654216,"byte_end":10654245,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654246,"byte_end":10654249,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654250,"byte_end":10654268,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654269,"byte_end":10654290,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654291,"byte_end":10654333,"line_start":144,"line_end":144,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654334,"byte_end":10654337,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654338,"byte_end":10654371,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654372,"byte_end":10654412,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654413,"byte_end":10654462,"line_start":148,"line_end":148,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654463,"byte_end":10654476,"line_start":149,"line_end":149,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654477,"byte_end":10654488,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654489,"byte_end":10654492,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654493,"byte_end":10654517,"line_start":152,"line_end":152,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654518,"byte_end":10654565,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654566,"byte_end":10654619,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654620,"byte_end":10654629,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654630,"byte_end":10654635,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10654636,"byte_end":10654643,"line_start":157,"line_end":157,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4944},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656681,"byte_end":10656685,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655110,"byte_end":10655185,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655190,"byte_end":10655206,"line_start":176,"line_end":176,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655211,"byte_end":10655214,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655219,"byte_end":10655298,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655303,"byte_end":10655378,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655383,"byte_end":10655459,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655464,"byte_end":10655536,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655541,"byte_end":10655554,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655559,"byte_end":10655562,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655567,"byte_end":10655643,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655648,"byte_end":10655724,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655729,"byte_end":10655801,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655806,"byte_end":10655879,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655884,"byte_end":10655958,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655963,"byte_end":10656035,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656040,"byte_end":10656077,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656082,"byte_end":10656085,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656090,"byte_end":10656104,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656109,"byte_end":10656112,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656117,"byte_end":10656149,"line_start":194,"line_end":194,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656154,"byte_end":10656157,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656162,"byte_end":10656169,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656174,"byte_end":10656203,"line_start":197,"line_end":197,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656208,"byte_end":10656211,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656216,"byte_end":10656234,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656239,"byte_end":10656260,"line_start":200,"line_end":200,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656265,"byte_end":10656307,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656312,"byte_end":10656315,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656320,"byte_end":10656353,"line_start":203,"line_end":203,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656358,"byte_end":10656398,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656403,"byte_end":10656452,"line_start":205,"line_end":205,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656457,"byte_end":10656470,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656475,"byte_end":10656486,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656491,"byte_end":10656494,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656499,"byte_end":10656523,"line_start":209,"line_end":209,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656528,"byte_end":10656575,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656580,"byte_end":10656633,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656638,"byte_end":10656647,"line_start":212,"line_end":212,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656652,"byte_end":10656657,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10656662,"byte_end":10656669,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4946},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659023,"byte_end":10659029,"line_start":298,"line_end":298,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657018,"byte_end":10657076,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657081,"byte_end":10657084,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657089,"byte_end":10657163,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657168,"byte_end":10657202,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657207,"byte_end":10657210,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657215,"byte_end":10657280,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657285,"byte_end":10657357,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657362,"byte_end":10657365,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657370,"byte_end":10657382,"line_start":239,"line_end":239,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657387,"byte_end":10657390,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657395,"byte_end":10657443,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657448,"byte_end":10657451,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657456,"byte_end":10657482,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657487,"byte_end":10657517,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657522,"byte_end":10657525,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657530,"byte_end":10657544,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657549,"byte_end":10657552,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657557,"byte_end":10657572,"line_start":248,"line_end":248,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657577,"byte_end":10657580,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657585,"byte_end":10657592,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657597,"byte_end":10657626,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657631,"byte_end":10657634,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657639,"byte_end":10657657,"line_start":253,"line_end":253,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657662,"byte_end":10657683,"line_start":254,"line_end":254,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657688,"byte_end":10657740,"line_start":255,"line_end":255,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657745,"byte_end":10657748,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657753,"byte_end":10657786,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657791,"byte_end":10657812,"line_start":258,"line_end":258,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657817,"byte_end":10657828,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657833,"byte_end":10657836,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657841,"byte_end":10657867,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657872,"byte_end":10657913,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657918,"byte_end":10657923,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657928,"byte_end":10657935,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657940,"byte_end":10657943,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657948,"byte_end":10657970,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657975,"byte_end":10657978,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657983,"byte_end":10657990,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10657995,"byte_end":10658024,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658029,"byte_end":10658067,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658072,"byte_end":10658075,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658080,"byte_end":10658114,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658119,"byte_end":10658170,"line_start":273,"line_end":273,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658175,"byte_end":10658200,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658205,"byte_end":10658210,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658215,"byte_end":10658218,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658223,"byte_end":10658241,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658246,"byte_end":10658267,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658272,"byte_end":10658318,"line_start":279,"line_end":279,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658323,"byte_end":10658326,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658331,"byte_end":10658364,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658369,"byte_end":10658397,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658402,"byte_end":10658438,"line_start":283,"line_end":283,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658443,"byte_end":10658518,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658523,"byte_end":10658540,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658545,"byte_end":10658583,"line_start":286,"line_end":286,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658588,"byte_end":10658672,"line_start":287,"line_end":287,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658677,"byte_end":10658760,"line_start":288,"line_end":288,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658765,"byte_end":10658808,"line_start":289,"line_end":289,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658813,"byte_end":10658830,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658835,"byte_end":10658848,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658853,"byte_end":10658864,"line_start":292,"line_end":292,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658869,"byte_end":10658872,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658877,"byte_end":10658913,"line_start":294,"line_end":294,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658918,"byte_end":10658983,"line_start":295,"line_end":295,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658988,"byte_end":10658993,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10658998,"byte_end":10659005,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4951},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659899,"byte_end":10659908,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659140,"byte_end":10659214,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659219,"byte_end":10659222,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659227,"byte_end":10659301,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659306,"byte_end":10659340,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659345,"byte_end":10659348,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659353,"byte_end":10659428,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659433,"byte_end":10659436,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659441,"byte_end":10659467,"line_start":311,"line_end":311,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659472,"byte_end":10659502,"line_start":312,"line_end":312,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659507,"byte_end":10659510,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659515,"byte_end":10659529,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659534,"byte_end":10659537,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659542,"byte_end":10659549,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659554,"byte_end":10659583,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659588,"byte_end":10659591,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659596,"byte_end":10659614,"line_start":319,"line_end":319,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659619,"byte_end":10659640,"line_start":320,"line_end":320,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659645,"byte_end":10659687,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659692,"byte_end":10659695,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659700,"byte_end":10659733,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659738,"byte_end":10659741,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659746,"byte_end":10659763,"line_start":325,"line_end":325,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659768,"byte_end":10659771,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659776,"byte_end":10659808,"line_start":327,"line_end":327,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659813,"byte_end":10659865,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659870,"byte_end":10659875,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10659880,"byte_end":10659887,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4952},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661354,"byte_end":10661365,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660070,"byte_end":10660150,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660155,"byte_end":10660238,"line_start":339,"line_end":339,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660243,"byte_end":10660254,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660259,"byte_end":10660262,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660267,"byte_end":10660347,"line_start":342,"line_end":342,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660352,"byte_end":10660386,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660391,"byte_end":10660394,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660399,"byte_end":10660482,"line_start":345,"line_end":345,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660487,"byte_end":10660553,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660558,"byte_end":10660561,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660566,"byte_end":10660621,"line_start":348,"line_end":348,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660626,"byte_end":10660681,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660686,"byte_end":10660689,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660694,"byte_end":10660712,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660717,"byte_end":10660720,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660725,"byte_end":10660751,"line_start":353,"line_end":353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660756,"byte_end":10660759,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660764,"byte_end":10660816,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660821,"byte_end":10660871,"line_start":356,"line_end":356,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660876,"byte_end":10660879,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660884,"byte_end":10660898,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660903,"byte_end":10660906,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660911,"byte_end":10660918,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660923,"byte_end":10660952,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660957,"byte_end":10660960,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10660965,"byte_end":10660998,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661003,"byte_end":10661006,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661011,"byte_end":10661029,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661034,"byte_end":10661055,"line_start":366,"line_end":366,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661060,"byte_end":10661116,"line_start":367,"line_end":367,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661121,"byte_end":10661124,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661129,"byte_end":10661162,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661167,"byte_end":10661190,"line_start":370,"line_end":370,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661195,"byte_end":10661206,"line_start":371,"line_end":371,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661211,"byte_end":10661214,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661219,"byte_end":10661266,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661271,"byte_end":10661274,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661279,"byte_end":10661320,"line_start":375,"line_end":375,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661325,"byte_end":10661330,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10661335,"byte_end":10661342,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664528,"byte_end":10664533,"line_start":492,"line_end":492,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10662890,"byte_end":10662957,"line_start":436,"line_end":436,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10662962,"byte_end":10662965,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10662970,"byte_end":10663044,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663049,"byte_end":10663117,"line_start":439,"line_end":439,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663122,"byte_end":10663188,"line_start":440,"line_end":440,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663193,"byte_end":10663207,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663212,"byte_end":10663215,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663220,"byte_end":10663296,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663301,"byte_end":10663364,"line_start":444,"line_end":444,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663369,"byte_end":10663372,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663377,"byte_end":10663399,"line_start":446,"line_end":446,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663404,"byte_end":10663440,"line_start":447,"line_end":447,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663445,"byte_end":10663448,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663453,"byte_end":10663467,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663472,"byte_end":10663475,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663480,"byte_end":10663515,"line_start":451,"line_end":451,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663520,"byte_end":10663523,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663528,"byte_end":10663535,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663540,"byte_end":10663569,"line_start":454,"line_end":454,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663574,"byte_end":10663624,"line_start":455,"line_end":455,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663629,"byte_end":10663632,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663637,"byte_end":10663655,"line_start":457,"line_end":457,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663660,"byte_end":10663681,"line_start":458,"line_end":458,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663686,"byte_end":10663732,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663737,"byte_end":10663740,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663745,"byte_end":10663778,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663783,"byte_end":10663786,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663791,"byte_end":10663810,"line_start":463,"line_end":463,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663815,"byte_end":10663818,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663823,"byte_end":10663855,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663860,"byte_end":10663912,"line_start":466,"line_end":466,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663917,"byte_end":10663920,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663925,"byte_end":10663954,"line_start":468,"line_end":468,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10663959,"byte_end":10664002,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664007,"byte_end":10664039,"line_start":470,"line_end":470,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664044,"byte_end":10664053,"line_start":471,"line_end":471,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664058,"byte_end":10664063,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664068,"byte_end":10664075,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664080,"byte_end":10664083,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664088,"byte_end":10664139,"line_start":475,"line_end":475,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664144,"byte_end":10664147,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664152,"byte_end":10664159,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664164,"byte_end":10664193,"line_start":478,"line_end":478,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664198,"byte_end":10664201,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664206,"byte_end":10664224,"line_start":480,"line_end":480,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664229,"byte_end":10664250,"line_start":481,"line_end":481,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664255,"byte_end":10664301,"line_start":482,"line_end":482,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664306,"byte_end":10664309,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664314,"byte_end":10664363,"line_start":484,"line_end":484,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664368,"byte_end":10664371,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664376,"byte_end":10664395,"line_start":486,"line_end":486,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664400,"byte_end":10664403,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664408,"byte_end":10664449,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664454,"byte_end":10664494,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664499,"byte_end":10664504,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664509,"byte_end":10664516,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4959},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666516,"byte_end":10666524,"line_start":560,"line_end":560,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664631,"byte_end":10664663,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664668,"byte_end":10664671,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664676,"byte_end":10664749,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664754,"byte_end":10664820,"line_start":500,"line_end":500,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664825,"byte_end":10664849,"line_start":501,"line_end":501,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664854,"byte_end":10664857,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664862,"byte_end":10664928,"line_start":503,"line_end":503,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664933,"byte_end":10664955,"line_start":504,"line_end":504,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664960,"byte_end":10664963,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664968,"byte_end":10664980,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664985,"byte_end":10664988,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10664993,"byte_end":10665044,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665049,"byte_end":10665112,"line_start":509,"line_end":509,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665117,"byte_end":10665192,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665197,"byte_end":10665211,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665216,"byte_end":10665219,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665224,"byte_end":10665238,"line_start":513,"line_end":513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665243,"byte_end":10665246,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665251,"byte_end":10665301,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665306,"byte_end":10665309,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665314,"byte_end":10665321,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665326,"byte_end":10665355,"line_start":518,"line_end":518,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665360,"byte_end":10665410,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665415,"byte_end":10665418,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665423,"byte_end":10665441,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665446,"byte_end":10665467,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665472,"byte_end":10665518,"line_start":523,"line_end":523,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665523,"byte_end":10665526,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665531,"byte_end":10665560,"line_start":525,"line_end":525,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665565,"byte_end":10665610,"line_start":526,"line_end":526,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665615,"byte_end":10665657,"line_start":527,"line_end":527,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665662,"byte_end":10665694,"line_start":528,"line_end":528,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665699,"byte_end":10665708,"line_start":529,"line_end":529,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665713,"byte_end":10665716,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665721,"byte_end":10665744,"line_start":531,"line_end":531,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665749,"byte_end":10665783,"line_start":532,"line_end":532,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665788,"byte_end":10665791,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665796,"byte_end":10665825,"line_start":534,"line_end":534,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665830,"byte_end":10665882,"line_start":535,"line_end":535,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665887,"byte_end":10665919,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665924,"byte_end":10665933,"line_start":537,"line_end":537,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665938,"byte_end":10665943,"line_start":538,"line_end":538,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665948,"byte_end":10665955,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665960,"byte_end":10665963,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10665968,"byte_end":10666029,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666034,"byte_end":10666037,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666042,"byte_end":10666049,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666054,"byte_end":10666083,"line_start":544,"line_end":544,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666088,"byte_end":10666138,"line_start":545,"line_end":545,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666143,"byte_end":10666146,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666151,"byte_end":10666169,"line_start":547,"line_end":547,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666174,"byte_end":10666195,"line_start":548,"line_end":548,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666200,"byte_end":10666252,"line_start":549,"line_end":549,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666257,"byte_end":10666260,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666265,"byte_end":10666282,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666287,"byte_end":10666290,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666295,"byte_end":10666324,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666329,"byte_end":10666383,"line_start":554,"line_end":554,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666388,"byte_end":10666431,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666436,"byte_end":10666468,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666473,"byte_end":10666482,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666487,"byte_end":10666492,"line_start":558,"line_end":558,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10666497,"byte_end":10666504,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5530},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676098,"byte_end":10676104,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":5529},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10675972,"byte_end":10676037,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676042,"byte_end":10676045,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676050,"byte_end":10676093,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5532},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676159,"byte_end":10676168,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":5529},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676111,"byte_end":10676154,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":5529},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10675950,"byte_end":10675965,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError {\n\n    /// The semaphore has been [closed] and cannot issue new permits.\n    ///\n    /// [closed]: crate::sync::Semaphore::close\n    Closed,\n\n    /// The semaphore has no available permits.\n    NoPermits,\n}","parent":null,"children":[{"krate":0,"index":5530},{"krate":0,"index":5532}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10675776,"byte_end":10675840,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10675841,"byte_end":10675844,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10675845,"byte_end":10675912,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5539},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676454,"byte_end":10676466,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676172,"byte_end":10676232,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676233,"byte_end":10676236,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676237,"byte_end":10676303,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676304,"byte_end":10676317,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676318,"byte_end":10676321,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676322,"byte_end":10676365,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10676366,"byte_end":10676425,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5544},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695713,"byte_end":10695722,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":5545}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10694863,"byte_end":10694929,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10694930,"byte_end":10694933,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10694934,"byte_end":10695009,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695010,"byte_end":10695086,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695087,"byte_end":10695167,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695168,"byte_end":10695177,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695178,"byte_end":10695181,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695182,"byte_end":10695255,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695256,"byte_end":10695335,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695336,"byte_end":10695414,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695415,"byte_end":10695486,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695487,"byte_end":10695490,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695491,"byte_end":10695571,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695572,"byte_end":10695584,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695585,"byte_end":10695588,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695589,"byte_end":10695684,"line_start":20,"line_end":20,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":5548},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695971,"byte_end":10695986,"line_start":34,"line_end":34,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":5550},{"krate":0,"index":5551}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695787,"byte_end":10695819,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695820,"byte_end":10695823,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695824,"byte_end":10695875,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695876,"byte_end":10695879,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695880,"byte_end":10695930,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10695931,"byte_end":10695942,"line_start":32,"line_end":32,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5555},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696247,"byte_end":10696267,"line_start":46,"line_end":46,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":5556},{"krate":0,"index":5557}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696038,"byte_end":10696077,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696078,"byte_end":10696081,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696082,"byte_end":10696139,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696140,"byte_end":10696143,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696144,"byte_end":10696206,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696207,"byte_end":10696218,"line_start":44,"line_end":44,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5109},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696863,"byte_end":10696866,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696788,"byte_end":10696851,"line_start":67,"line_end":67,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5110},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697372,"byte_end":10697389,"line_start":84,"line_end":84,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697308,"byte_end":10697360,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5111},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697636,"byte_end":10697647,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697459,"byte_end":10697501,"line_start":88,"line_end":88,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697506,"byte_end":10697509,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697514,"byte_end":10697624,"line_start":90,"line_end":90,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":5112},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698067,"byte_end":10698074,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697710,"byte_end":10697751,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697756,"byte_end":10697759,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697764,"byte_end":10697835,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697840,"byte_end":10697906,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697911,"byte_end":10697931,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697936,"byte_end":10697939,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697944,"byte_end":10697991,"line_start":101,"line_end":101,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10697996,"byte_end":10698049,"line_start":102,"line_end":102,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5115},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698628,"byte_end":10698640,"line_start":119,"line_end":119,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698267,"byte_end":10698311,"line_start":111,"line_end":111,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698316,"byte_end":10698319,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698324,"byte_end":10698395,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698400,"byte_end":10698466,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698471,"byte_end":10698492,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698497,"byte_end":10698500,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698505,"byte_end":10698552,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698557,"byte_end":10698610,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5118},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699379,"byte_end":10699390,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698841,"byte_end":10698890,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698895,"byte_end":10698898,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698903,"byte_end":10698983,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10698988,"byte_end":10699069,"line_start":130,"line_end":130,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699074,"byte_end":10699147,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699152,"byte_end":10699155,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699160,"byte_end":10699229,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699234,"byte_end":10699309,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699314,"byte_end":10699367,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5119},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700194,"byte_end":10700210,"line_start":155,"line_end":155,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire n permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire n permits from the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699655,"byte_end":10699705,"line_start":146,"line_end":146,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699710,"byte_end":10699713,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699718,"byte_end":10699798,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699803,"byte_end":10699884,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699889,"byte_end":10699962,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699967,"byte_end":10699970,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10699975,"byte_end":10700044,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700049,"byte_end":10700124,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700129,"byte_end":10700182,"line_start":154,"line_end":154,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5120},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700960,"byte_end":10700973,"line_start":175,"line_end":175,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700483,"byte_end":10700524,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700529,"byte_end":10700532,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700537,"byte_end":10700605,"line_start":167,"line_end":167,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700610,"byte_end":10700681,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700686,"byte_end":10700757,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700762,"byte_end":10700782,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700787,"byte_end":10700790,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700795,"byte_end":10700822,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700827,"byte_end":10700874,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10700879,"byte_end":10700942,"line_start":174,"line_end":174,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5123},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701846,"byte_end":10701863,"line_start":195,"line_end":195,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701181,"byte_end":10701230,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701235,"byte_end":10701238,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701243,"byte_end":10701314,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701319,"byte_end":10701396,"line_start":186,"line_end":186,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701401,"byte_end":10701471,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701476,"byte_end":10701547,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701552,"byte_end":10701572,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701577,"byte_end":10701580,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701585,"byte_end":10701612,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701617,"byte_end":10701686,"line_start":192,"line_end":192,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701691,"byte_end":10701766,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10701771,"byte_end":10701834,"line_start":194,"line_end":194,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5124},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703057,"byte_end":10703062,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702144,"byte_end":10702169,"line_start":205,"line_end":205,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702174,"byte_end":10702177,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702182,"byte_end":10702272,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702277,"byte_end":10702280,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702285,"byte_end":10702299,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702304,"byte_end":10702307,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702312,"byte_end":10702319,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702324,"byte_end":10702355,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702360,"byte_end":10702383,"line_start":213,"line_end":213,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702388,"byte_end":10702425,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702430,"byte_end":10702433,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702438,"byte_end":10702456,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702461,"byte_end":10702482,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702487,"byte_end":10702539,"line_start":218,"line_end":218,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702544,"byte_end":10702587,"line_start":219,"line_end":219,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702592,"byte_end":10702595,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702600,"byte_end":10702633,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702638,"byte_end":10702695,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702700,"byte_end":10702737,"line_start":223,"line_end":223,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702742,"byte_end":10702788,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702793,"byte_end":10702804,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702809,"byte_end":10702812,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702817,"byte_end":10702855,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702860,"byte_end":10702887,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702892,"byte_end":10702895,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702900,"byte_end":10702937,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10702942,"byte_end":10703023,"line_start":231,"line_end":231,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703028,"byte_end":10703033,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703038,"byte_end":10703045,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5127},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703320,"byte_end":10703326,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703145,"byte_end":10703215,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703220,"byte_end":10703289,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703294,"byte_end":10703308,"line_start":242,"line_end":242,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":5129},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703581,"byte_end":10703587,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703406,"byte_end":10703476,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703481,"byte_end":10703550,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703555,"byte_end":10703569,"line_start":251,"line_end":251,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706697,"byte_end":10706703,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":5562},{"krate":0,"index":5563}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704166,"byte_end":10704205,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704206,"byte_end":10704209,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704210,"byte_end":10704287,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704288,"byte_end":10704367,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704368,"byte_end":10704447,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704448,"byte_end":10704506,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704507,"byte_end":10704510,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704511,"byte_end":10704589,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704590,"byte_end":10704668,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704669,"byte_end":10704747,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704748,"byte_end":10704813,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704814,"byte_end":10704817,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704818,"byte_end":10704882,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704883,"byte_end":10704955,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10704956,"byte_end":10705036,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705037,"byte_end":10705117,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705118,"byte_end":10705198,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705199,"byte_end":10705268,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705269,"byte_end":10705339,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705340,"byte_end":10705378,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705379,"byte_end":10705382,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705383,"byte_end":10705460,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705461,"byte_end":10705546,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705547,"byte_end":10705627,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705628,"byte_end":10705675,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705676,"byte_end":10705748,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705749,"byte_end":10705752,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705753,"byte_end":10705767,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705768,"byte_end":10705771,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705772,"byte_end":10705779,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705780,"byte_end":10705808,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705809,"byte_end":10705812,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705813,"byte_end":10705831,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705832,"byte_end":10705853,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705854,"byte_end":10705888,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705889,"byte_end":10705892,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705893,"byte_end":10705941,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705942,"byte_end":10705951,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705952,"byte_end":10705991,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10705992,"byte_end":10706031,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706032,"byte_end":10706063,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706064,"byte_end":10706095,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706096,"byte_end":10706145,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706146,"byte_end":10706149,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706150,"byte_end":10706201,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706202,"byte_end":10706211,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706212,"byte_end":10706255,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706256,"byte_end":10706276,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706277,"byte_end":10706307,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706308,"byte_end":10706347,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706348,"byte_end":10706353,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706354,"byte_end":10706361,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706362,"byte_end":10706365,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706366,"byte_end":10706400,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706401,"byte_end":10706430,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706431,"byte_end":10706478,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706479,"byte_end":10706528,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706529,"byte_end":10706566,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706567,"byte_end":10706668,"line_start":73,"line_end":73,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707078,"byte_end":10707093,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5155}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706837,"byte_end":10706909,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706910,"byte_end":10706922,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706923,"byte_end":10706926,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706927,"byte_end":10706982,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706983,"byte_end":10706998,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10706999,"byte_end":10707002,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707003,"byte_end":10707036,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707037,"byte_end":10707066,"line_start":90,"line_end":90,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5159},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708411,"byte_end":10708414,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707237,"byte_end":10707305,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707310,"byte_end":10707313,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707318,"byte_end":10707391,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707396,"byte_end":10707416,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707421,"byte_end":10707424,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707429,"byte_end":10707480,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707485,"byte_end":10707555,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707560,"byte_end":10707624,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707629,"byte_end":10707632,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707637,"byte_end":10707709,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707714,"byte_end":10707740,"line_start":108,"line_end":108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707745,"byte_end":10707748,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707753,"byte_end":10707862,"line_start":110,"line_end":110,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707867,"byte_end":10707930,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707935,"byte_end":10707938,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707943,"byte_end":10707957,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707962,"byte_end":10707965,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707970,"byte_end":10707977,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707982,"byte_end":10708029,"line_start":116,"line_end":116,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708034,"byte_end":10708037,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708042,"byte_end":10708090,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708095,"byte_end":10708115,"line_start":119,"line_end":119,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708120,"byte_end":10708123,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708128,"byte_end":10708148,"line_start":121,"line_end":121,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708153,"byte_end":10708176,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708181,"byte_end":10708216,"line_start":123,"line_end":123,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708221,"byte_end":10708224,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708229,"byte_end":10708263,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708268,"byte_end":10708322,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708327,"byte_end":10708330,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708335,"byte_end":10708361,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708366,"byte_end":10708373,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708378,"byte_end":10708385,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708390,"byte_end":10708399,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5162},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710109,"byte_end":10710116,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708792,"byte_end":10708861,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708866,"byte_end":10708936,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708941,"byte_end":10708952,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708957,"byte_end":10708960,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10708965,"byte_end":10709038,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709043,"byte_end":10709063,"line_start":152,"line_end":152,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709068,"byte_end":10709071,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709076,"byte_end":10709135,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709140,"byte_end":10709220,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709225,"byte_end":10709274,"line_start":156,"line_end":156,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709279,"byte_end":10709282,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709287,"byte_end":10709363,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709368,"byte_end":10709394,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709399,"byte_end":10709402,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709407,"byte_end":10709524,"line_start":161,"line_end":161,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709529,"byte_end":10709592,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709597,"byte_end":10709600,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709605,"byte_end":10709619,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709624,"byte_end":10709627,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709632,"byte_end":10709639,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709644,"byte_end":10709691,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709696,"byte_end":10709699,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709704,"byte_end":10709752,"line_start":169,"line_end":169,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709757,"byte_end":10709777,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709782,"byte_end":10709785,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709790,"byte_end":10709810,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709815,"byte_end":10709838,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709843,"byte_end":10709878,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709883,"byte_end":10709886,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709891,"byte_end":10709925,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10709930,"byte_end":10710020,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710025,"byte_end":10710028,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710033,"byte_end":10710059,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710064,"byte_end":10710071,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710076,"byte_end":10710083,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710088,"byte_end":10710097,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5177},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711365,"byte_end":10711381,"line_start":234,"line_end":234,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":5180},{"krate":0,"index":5181},{"krate":0,"index":5182}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711113,"byte_end":10711189,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711190,"byte_end":10711202,"line_start":227,"line_end":227,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711203,"byte_end":10711206,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711207,"byte_end":10711264,"line_start":229,"line_end":229,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711265,"byte_end":10711283,"line_start":230,"line_end":230,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711284,"byte_end":10711287,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711288,"byte_end":10711323,"line_start":232,"line_end":232,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711324,"byte_end":10711353,"line_start":233,"line_end":233,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5186},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712701,"byte_end":10712710,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711536,"byte_end":10711608,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711613,"byte_end":10711682,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711687,"byte_end":10711690,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711695,"byte_end":10711773,"line_start":244,"line_end":244,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711778,"byte_end":10711854,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711859,"byte_end":10711871,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711876,"byte_end":10711879,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711884,"byte_end":10711958,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711963,"byte_end":10711980,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711985,"byte_end":10711988,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711993,"byte_end":10712007,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712012,"byte_end":10712015,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712020,"byte_end":10712027,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712032,"byte_end":10712062,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712067,"byte_end":10712092,"line_start":255,"line_end":255,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712097,"byte_end":10712102,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712107,"byte_end":10712127,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712132,"byte_end":10712155,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712160,"byte_end":10712200,"line_start":259,"line_end":259,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712205,"byte_end":10712208,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712213,"byte_end":10712244,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/   ","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712249,"byte_end":10712255,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712260,"byte_end":10712295,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712300,"byte_end":10712342,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712347,"byte_end":10712386,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712391,"byte_end":10712398,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712403,"byte_end":10712406,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712411,"byte_end":10712437,"line_start":268,"line_end":268,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712442,"byte_end":10712487,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712492,"byte_end":10712495,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712500,"byte_end":10712512,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712517,"byte_end":10712543,"line_start":272,"line_end":272,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712548,"byte_end":10712623,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712628,"byte_end":10712635,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712640,"byte_end":10712647,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712652,"byte_end":10712655,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10712660,"byte_end":10712689,"line_start":277,"line_end":277,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5213},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715706,"byte_end":10715709,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715496,"byte_end":10715559,"line_start":361,"line_end":361,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715564,"byte_end":10715567,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715572,"byte_end":10715586,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715591,"byte_end":10715594,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715599,"byte_end":10715606,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715611,"byte_end":10715639,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715644,"byte_end":10715647,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715652,"byte_end":10715682,"line_start":368,"line_end":368,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715687,"byte_end":10715694,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5214},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717916,"byte_end":10717920,"line_start":441,"line_end":441,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716438,"byte_end":10716511,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716516,"byte_end":10716562,"line_start":402,"line_end":402,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716567,"byte_end":10716570,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716575,"byte_end":10716648,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716653,"byte_end":10716728,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716733,"byte_end":10716736,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716741,"byte_end":10716814,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716819,"byte_end":10716888,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716893,"byte_end":10716967,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10716972,"byte_end":10717045,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717050,"byte_end":10717074,"line_start":411,"line_end":411,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717079,"byte_end":10717082,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717087,"byte_end":10717161,"line_start":413,"line_end":413,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717166,"byte_end":10717183,"line_start":414,"line_end":414,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717188,"byte_end":10717191,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717196,"byte_end":10717210,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717215,"byte_end":10717218,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717223,"byte_end":10717230,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717235,"byte_end":10717258,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717263,"byte_end":10717291,"line_start":420,"line_end":420,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717296,"byte_end":10717299,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717304,"byte_end":10717322,"line_start":422,"line_end":422,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717327,"byte_end":10717348,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717353,"byte_end":10717397,"line_start":424,"line_end":424,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717402,"byte_end":10717436,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717441,"byte_end":10717444,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717449,"byte_end":10717483,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717488,"byte_end":10717514,"line_start":428,"line_end":428,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717519,"byte_end":10717522,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717527,"byte_end":10717560,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717565,"byte_end":10717635,"line_start":431,"line_end":431,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717640,"byte_end":10717680,"line_start":432,"line_end":432,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717685,"byte_end":10717715,"line_start":433,"line_end":433,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717720,"byte_end":10717777,"line_start":434,"line_end":434,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717782,"byte_end":10717785,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717790,"byte_end":10717848,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717853,"byte_end":10717869,"line_start":437,"line_end":437,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717874,"byte_end":10717878,"line_start":438,"line_end":438,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717883,"byte_end":10717890,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10717895,"byte_end":10717898,"line_start":440,"line_end":440,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5218},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719386,"byte_end":10719394,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718367,"byte_end":10718429,"line_start":454,"line_end":454,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718434,"byte_end":10718437,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718442,"byte_end":10718519,"line_start":456,"line_end":456,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718524,"byte_end":10718595,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718600,"byte_end":10718617,"line_start":458,"line_end":458,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718622,"byte_end":10718625,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718630,"byte_end":10718664,"line_start":460,"line_end":460,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718669,"byte_end":10718672,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718677,"byte_end":10718691,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718696,"byte_end":10718699,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718704,"byte_end":10718711,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718716,"byte_end":10718739,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718744,"byte_end":10718772,"line_start":466,"line_end":466,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718777,"byte_end":10718780,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718785,"byte_end":10718803,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718808,"byte_end":10718829,"line_start":469,"line_end":469,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718834,"byte_end":10718878,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718883,"byte_end":10718917,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718922,"byte_end":10718925,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718930,"byte_end":10718971,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10718976,"byte_end":10719002,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719007,"byte_end":10719010,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719015,"byte_end":10719048,"line_start":476,"line_end":476,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719053,"byte_end":10719123,"line_start":477,"line_end":477,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719128,"byte_end":10719168,"line_start":478,"line_end":478,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719173,"byte_end":10719203,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719208,"byte_end":10719265,"line_start":480,"line_end":480,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719270,"byte_end":10719273,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719278,"byte_end":10719331,"line_start":482,"line_end":482,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719336,"byte_end":10719352,"line_start":483,"line_end":483,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719357,"byte_end":10719362,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719367,"byte_end":10719374,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720457,"byte_end":10720462,"line_start":522,"line_end":522,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719820,"byte_end":10719892,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719897,"byte_end":10719948,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719953,"byte_end":10719956,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10719961,"byte_end":10720023,"line_start":503,"line_end":503,"column_start":5,"column_end":67}},{"value":"/ currently have access to the lock.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720028,"byte_end":10720066,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720071,"byte_end":10720074,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720079,"byte_end":10720154,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720159,"byte_end":10720176,"line_start":507,"line_end":507,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720181,"byte_end":10720184,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720189,"byte_end":10720203,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720208,"byte_end":10720211,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720216,"byte_end":10720223,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720228,"byte_end":10720256,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720261,"byte_end":10720264,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720269,"byte_end":10720287,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720292,"byte_end":10720313,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720318,"byte_end":10720350,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720355,"byte_end":10720358,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720363,"byte_end":10720400,"line_start":518,"line_end":518,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720405,"byte_end":10720418,"line_start":519,"line_end":519,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720423,"byte_end":10720427,"line_start":520,"line_end":520,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720432,"byte_end":10720439,"line_start":521,"line_end":521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721566,"byte_end":10721575,"line_start":558,"line_end":558,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720926,"byte_end":10720992,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10720997,"byte_end":10721000,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721005,"byte_end":10721082,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721087,"byte_end":10721159,"line_start":538,"line_end":538,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721164,"byte_end":10721181,"line_start":539,"line_end":539,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721186,"byte_end":10721189,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721194,"byte_end":10721228,"line_start":541,"line_end":541,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721233,"byte_end":10721236,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721241,"byte_end":10721255,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721260,"byte_end":10721263,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721268,"byte_end":10721275,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721280,"byte_end":10721308,"line_start":546,"line_end":546,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721313,"byte_end":10721316,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721321,"byte_end":10721339,"line_start":548,"line_end":548,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721344,"byte_end":10721365,"line_start":549,"line_end":549,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721370,"byte_end":10721402,"line_start":550,"line_end":550,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721407,"byte_end":10721410,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721415,"byte_end":10721447,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721452,"byte_end":10721478,"line_start":553,"line_end":553,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721483,"byte_end":10721486,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721491,"byte_end":10721532,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721537,"byte_end":10721542,"line_start":556,"line_end":556,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10721547,"byte_end":10721554,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722490,"byte_end":10722497,"line_start":589,"line_end":589,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722018,"byte_end":10722073,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722078,"byte_end":10722081,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722086,"byte_end":10722162,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722167,"byte_end":10722241,"line_start":575,"line_end":575,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722246,"byte_end":10722249,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722254,"byte_end":10722268,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722273,"byte_end":10722276,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722281,"byte_end":10722288,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722293,"byte_end":10722321,"line_start":580,"line_end":580,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722326,"byte_end":10722329,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722334,"byte_end":10722349,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722354,"byte_end":10722392,"line_start":583,"line_end":583,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722397,"byte_end":10722400,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722405,"byte_end":10722436,"line_start":585,"line_end":585,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722441,"byte_end":10722456,"line_start":586,"line_end":586,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722461,"byte_end":10722466,"line_start":587,"line_end":587,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722471,"byte_end":10722478,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5225},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722731,"byte_end":10722741,"line_start":597,"line_end":597,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722666,"byte_end":10722719,"line_start":596,"line_end":596,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":11734},{"krate":0,"index":5298},{"krate":0,"index":11736},{"krate":0,"index":5299},{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5567},{"krate":0,"index":5571},{"krate":0,"index":5574},{"krate":0,"index":5577},{"krate":0,"index":5580},{"krate":0,"index":5584},{"krate":0,"index":5588},{"krate":0,"index":5595},{"krate":0,"index":5304},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5317},{"krate":0,"index":5323},{"krate":0,"index":5325},{"krate":0,"index":5328},{"krate":0,"index":5331},{"krate":0,"index":5339},{"krate":0,"index":5342}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736335,"byte_end":10736414,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736415,"byte_end":10736425,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736426,"byte_end":10736429,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736430,"byte_end":10736506,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736507,"byte_end":10736581,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736582,"byte_end":10736585,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736586,"byte_end":10736597,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736598,"byte_end":10736601,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736602,"byte_end":10736682,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736683,"byte_end":10736759,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736760,"byte_end":10736830,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736831,"byte_end":10736907,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736908,"byte_end":10736949,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736950,"byte_end":10736953,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736954,"byte_end":10736968,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736969,"byte_end":10736972,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736973,"byte_end":10736980,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10736981,"byte_end":10737008,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737009,"byte_end":10737012,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737013,"byte_end":10737077,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737078,"byte_end":10737129,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737130,"byte_end":10737133,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737134,"byte_end":10737167,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737168,"byte_end":10737214,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737215,"byte_end":10737273,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737274,"byte_end":10737287,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737288,"byte_end":10737299,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737300,"byte_end":10737303,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737304,"byte_end":10737330,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737331,"byte_end":10737343,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737344,"byte_end":10737351,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737352,"byte_end":10737359,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737360,"byte_end":10737363,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737364,"byte_end":10737377,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737378,"byte_end":10737381,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737382,"byte_end":10737459,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737460,"byte_end":10737538,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737539,"byte_end":10737619,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737620,"byte_end":10737623,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737624,"byte_end":10737643,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737644,"byte_end":10737647,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737648,"byte_end":10737728,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737729,"byte_end":10737808,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737809,"byte_end":10737881,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737882,"byte_end":10737885,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737886,"byte_end":10737928,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737929,"byte_end":10737975,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10737976,"byte_end":10738042,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738043,"byte_end":10738107,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738108,"byte_end":10738152,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738153,"byte_end":10738217,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738218,"byte_end":10738276,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5567},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738840,"byte_end":10738848,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5569},{"krate":0,"index":5570}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738478,"byte_end":10738544,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738545,"byte_end":10738548,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738549,"byte_end":10738615,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738616,"byte_end":10738619,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738620,"byte_end":10738694,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738695,"byte_end":10738707,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738708,"byte_end":10738711,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738712,"byte_end":10738811,"line_start":68,"line_end":68,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":5574},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10739137,"byte_end":10739143,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5576}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10738972,"byte_end":10739037,"line_start":78,"line_end":78,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10739038,"byte_end":10739041,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10739042,"byte_end":10739108,"line_start":80,"line_end":80,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5580},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10739463,"byte_end":10739466,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":5583}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10739180,"byte_end":10739222,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10739223,"byte_end":10739226,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10739227,"byte_end":10739303,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10739304,"byte_end":10739383,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10739384,"byte_end":10739434,"line_start":90,"line_end":90,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":5304},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740043,"byte_end":10740048,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":5305},{"krate":0,"index":5598},{"krate":0,"index":5601},{"krate":0,"index":5306},{"krate":0,"index":5309},{"krate":0,"index":5604},{"krate":0,"index":5607},{"krate":0,"index":5311},{"krate":0,"index":5313}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740055,"byte_end":10740076,"line_start":118,"line_end":118,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":5598},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740184,"byte_end":10740193,"line_start":124,"line_end":124,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":5600}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740101,"byte_end":10740147,"line_start":122,"line_end":122,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5604},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740614,"byte_end":10740623,"line_start":140,"line_end":140,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740521,"byte_end":10740577,"line_start":138,"line_end":138,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":5315},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741678,"byte_end":10741685,"line_start":182,"line_end":182,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740915,"byte_end":10740991,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740992,"byte_end":10740995,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740996,"byte_end":10741078,"line_start":157,"line_end":157,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741079,"byte_end":10741155,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741156,"byte_end":10741192,"line_start":159,"line_end":159,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741193,"byte_end":10741196,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741197,"byte_end":10741211,"line_start":161,"line_end":161,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741212,"byte_end":10741215,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741216,"byte_end":10741223,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741224,"byte_end":10741251,"line_start":164,"line_end":164,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741252,"byte_end":10741255,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741256,"byte_end":10741320,"line_start":166,"line_end":166,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741321,"byte_end":10741372,"line_start":167,"line_end":167,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741373,"byte_end":10741376,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741377,"byte_end":10741410,"line_start":169,"line_end":169,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741411,"byte_end":10741457,"line_start":170,"line_end":170,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741458,"byte_end":10741516,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741517,"byte_end":10741530,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741531,"byte_end":10741542,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741543,"byte_end":10741546,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741547,"byte_end":10741573,"line_start":175,"line_end":175,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741574,"byte_end":10741586,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741587,"byte_end":10741594,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741595,"byte_end":10741602,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741603,"byte_end":10741606,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741607,"byte_end":10741636,"line_start":180,"line_end":180,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10741637,"byte_end":10741670,"line_start":181,"line_end":181,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742568,"byte_end":10742574,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742106,"byte_end":10742161,"line_start":201,"line_end":201,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742166,"byte_end":10742169,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742174,"byte_end":10742250,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742255,"byte_end":10742331,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742336,"byte_end":10742367,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742372,"byte_end":10742375,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742380,"byte_end":10742394,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742399,"byte_end":10742402,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742407,"byte_end":10742414,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742419,"byte_end":10742446,"line_start":210,"line_end":210,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742451,"byte_end":10742454,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742459,"byte_end":10742501,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742506,"byte_end":10742544,"line_start":213,"line_end":213,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742549,"byte_end":10742556,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5320},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743500,"byte_end":10743507,"line_start":248,"line_end":248,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742686,"byte_end":10742720,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742725,"byte_end":10742728,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742733,"byte_end":10742808,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742813,"byte_end":10742889,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742894,"byte_end":10742907,"line_start":224,"line_end":224,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742912,"byte_end":10742915,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742920,"byte_end":10742949,"line_start":226,"line_end":226,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742954,"byte_end":10742957,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742962,"byte_end":10742976,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742981,"byte_end":10742984,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742989,"byte_end":10742996,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743001,"byte_end":10743028,"line_start":231,"line_end":231,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743033,"byte_end":10743036,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743041,"byte_end":10743059,"line_start":233,"line_end":233,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743064,"byte_end":10743085,"line_start":234,"line_end":234,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743090,"byte_end":10743141,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743146,"byte_end":10743149,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743154,"byte_end":10743187,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743192,"byte_end":10743232,"line_start":238,"line_end":238,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743237,"byte_end":10743248,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743253,"byte_end":10743256,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743261,"byte_end":10743305,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743310,"byte_end":10743354,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743359,"byte_end":10743362,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743367,"byte_end":10743410,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743415,"byte_end":10743460,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743465,"byte_end":10743470,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10743475,"byte_end":10743482,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5333},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10745444,"byte_end":10745448,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10745369,"byte_end":10745432,"line_start":312,"line_end":312,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5334},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746475,"byte_end":10746481,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746013,"byte_end":10746068,"line_start":330,"line_end":330,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746073,"byte_end":10746076,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746081,"byte_end":10746157,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746162,"byte_end":10746238,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746243,"byte_end":10746274,"line_start":334,"line_end":334,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746279,"byte_end":10746282,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746287,"byte_end":10746301,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746306,"byte_end":10746309,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746314,"byte_end":10746321,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746326,"byte_end":10746353,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746358,"byte_end":10746361,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746366,"byte_end":10746408,"line_start":341,"line_end":341,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746413,"byte_end":10746451,"line_start":342,"line_end":342,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746456,"byte_end":10746463,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5335},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746909,"byte_end":10746918,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746593,"byte_end":10746667,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746672,"byte_end":10746689,"line_start":350,"line_end":350,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746694,"byte_end":10746697,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746702,"byte_end":10746716,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746721,"byte_end":10746724,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746729,"byte_end":10746736,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746741,"byte_end":10746792,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746797,"byte_end":10746826,"line_start":356,"line_end":356,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746831,"byte_end":10746834,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746839,"byte_end":10746852,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746857,"byte_end":10746885,"line_start":359,"line_end":359,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746890,"byte_end":10746897,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5336},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747662,"byte_end":10747668,"line_start":389,"line_end":389,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10746999,"byte_end":10747045,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747050,"byte_end":10747053,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747058,"byte_end":10747132,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747137,"byte_end":10747192,"line_start":368,"line_end":368,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747197,"byte_end":10747200,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747205,"byte_end":10747219,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747224,"byte_end":10747227,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747232,"byte_end":10747239,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747244,"byte_end":10747271,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747276,"byte_end":10747279,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747284,"byte_end":10747302,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747307,"byte_end":10747328,"line_start":376,"line_end":376,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747333,"byte_end":10747380,"line_start":377,"line_end":377,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747385,"byte_end":10747388,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747393,"byte_end":10747426,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747431,"byte_end":10747454,"line_start":380,"line_end":380,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747459,"byte_end":10747480,"line_start":381,"line_end":381,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747485,"byte_end":10747496,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747501,"byte_end":10747504,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747509,"byte_end":10747542,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747547,"byte_end":10747573,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747578,"byte_end":10747622,"line_start":386,"line_end":386,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747627,"byte_end":10747632,"line_start":387,"line_end":387,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747637,"byte_end":10747644,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5614},{"krate":0,"index":5615},{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5627},{"krate":0,"index":5628},{"krate":0,"index":5708},{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5772}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126320,"byte_end":126351,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126352,"byte_end":126355,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126356,"byte_end":126378,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126379,"byte_end":126382,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126383,"byte_end":126464,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126465,"byte_end":126545,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126546,"byte_end":126626,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126627,"byte_end":126701,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126702,"byte_end":126777,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126778,"byte_end":126800,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126801,"byte_end":126804,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126805,"byte_end":126840,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126841,"byte_end":126844,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126845,"byte_end":126919,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":126920,"byte_end":126999,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127000,"byte_end":127072,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127073,"byte_end":127148,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127149,"byte_end":127202,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127203,"byte_end":127206,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127207,"byte_end":127284,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127285,"byte_end":127358,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127359,"byte_end":127438,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127439,"byte_end":127517,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127518,"byte_end":127590,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127591,"byte_end":127666,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127667,"byte_end":127741,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127742,"byte_end":127817,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127818,"byte_end":127848,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127849,"byte_end":127852,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127853,"byte_end":127931,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":127932,"byte_end":128007,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128008,"byte_end":128085,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128086,"byte_end":128165,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128166,"byte_end":128244,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128245,"byte_end":128320,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128321,"byte_end":128396,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128397,"byte_end":128458,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128459,"byte_end":128462,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128463,"byte_end":128487,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128488,"byte_end":128552,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128553,"byte_end":128613,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128614,"byte_end":128703,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128704,"byte_end":128792,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128793,"byte_end":128796,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128797,"byte_end":128822,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128823,"byte_end":128826,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128827,"byte_end":128894,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128895,"byte_end":128898,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128899,"byte_end":128915,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128916,"byte_end":128919,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128920,"byte_end":128999,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129000,"byte_end":129079,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129080,"byte_end":129159,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129160,"byte_end":129227,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129228,"byte_end":129231,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129232,"byte_end":129239,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129240,"byte_end":129260,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129261,"byte_end":129264,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129265,"byte_end":129287,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129288,"byte_end":129311,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129312,"byte_end":129348,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129349,"byte_end":129356,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129357,"byte_end":129364,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129365,"byte_end":129372,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129373,"byte_end":129376,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129377,"byte_end":129456,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129457,"byte_end":129535,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129536,"byte_end":129570,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129571,"byte_end":129574,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129575,"byte_end":129582,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129583,"byte_end":129603,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129604,"byte_end":129607,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129608,"byte_end":129688,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129689,"byte_end":129723,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129724,"byte_end":129738,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129739,"byte_end":129761,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129762,"byte_end":129769,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129770,"byte_end":129773,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129774,"byte_end":129784,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129785,"byte_end":129788,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129789,"byte_end":129833,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129834,"byte_end":129863,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129864,"byte_end":129903,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129904,"byte_end":129916,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129917,"byte_end":129924,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129925,"byte_end":129932,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129933,"byte_end":129936,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129937,"byte_end":130017,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130018,"byte_end":130094,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130095,"byte_end":130107,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130108,"byte_end":130111,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130112,"byte_end":130119,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130120,"byte_end":130140,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130141,"byte_end":130144,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130145,"byte_end":130183,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130184,"byte_end":130218,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130219,"byte_end":130260,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130261,"byte_end":130268,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130269,"byte_end":130272,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130273,"byte_end":130331,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130332,"byte_end":130365,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130366,"byte_end":130373,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130374,"byte_end":130381,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130382,"byte_end":130385,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130386,"byte_end":130454,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130455,"byte_end":130483,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130484,"byte_end":130487,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130488,"byte_end":130529,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130530,"byte_end":130563,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130564,"byte_end":130610,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130611,"byte_end":130654,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130655,"byte_end":130697,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130698,"byte_end":130739,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130740,"byte_end":130743,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130744,"byte_end":130773,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130774,"byte_end":130777,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130778,"byte_end":130858,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130859,"byte_end":130938,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130939,"byte_end":131018,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131019,"byte_end":131059,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131060,"byte_end":131063,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131064,"byte_end":131138,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131139,"byte_end":131219,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131220,"byte_end":131223,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131224,"byte_end":131247,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131248,"byte_end":131251,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131252,"byte_end":131332,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131333,"byte_end":131399,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131400,"byte_end":131467,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131468,"byte_end":131542,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131543,"byte_end":131555,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131556,"byte_end":131559,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131560,"byte_end":131567,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131568,"byte_end":131588,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131589,"byte_end":131592,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131593,"byte_end":131616,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131617,"byte_end":131646,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131647,"byte_end":131709,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131710,"byte_end":131717,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131718,"byte_end":131725,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131726,"byte_end":131733,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131734,"byte_end":131737,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131738,"byte_end":131812,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131813,"byte_end":131880,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131881,"byte_end":131884,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131885,"byte_end":131896,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131897,"byte_end":131919,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131920,"byte_end":131984,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131985,"byte_end":132025,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132026,"byte_end":132088,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132089,"byte_end":132117,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132118,"byte_end":132125,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132126,"byte_end":132129,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132130,"byte_end":132159,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132160,"byte_end":132205,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132206,"byte_end":132218,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132219,"byte_end":132226,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132227,"byte_end":132234,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132235,"byte_end":132238,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132239,"byte_end":132262,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132263,"byte_end":132266,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132267,"byte_end":132357,"line_start":162,"line_end":162,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132358,"byte_end":132432,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132433,"byte_end":132509,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132510,"byte_end":132584,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132585,"byte_end":132664,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132665,"byte_end":132747,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132748,"byte_end":132769,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132770,"byte_end":132773,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132774,"byte_end":132790,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132791,"byte_end":132794,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132795,"byte_end":132802,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132803,"byte_end":132823,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132824,"byte_end":132827,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132828,"byte_end":132851,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132852,"byte_end":132894,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132895,"byte_end":132957,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132958,"byte_end":132986,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132987,"byte_end":132994,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132995,"byte_end":132998,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132999,"byte_end":133044,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133045,"byte_end":133052,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133053,"byte_end":133060,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133061,"byte_end":133064,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133065,"byte_end":133083,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133084,"byte_end":133087,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133088,"byte_end":133162,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133163,"byte_end":133241,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133242,"byte_end":133318,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133319,"byte_end":133376,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133377,"byte_end":133455,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133456,"byte_end":133484,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133485,"byte_end":133488,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133489,"byte_end":133500,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133501,"byte_end":133521,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133522,"byte_end":133525,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133526,"byte_end":133564,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133565,"byte_end":133576,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133577,"byte_end":133604,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133605,"byte_end":133623,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133624,"byte_end":133666,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133667,"byte_end":133678,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133679,"byte_end":133682,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133683,"byte_end":133750,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133751,"byte_end":133783,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133784,"byte_end":133820,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133821,"byte_end":133826,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133827,"byte_end":133840,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133841,"byte_end":133848,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133849,"byte_end":133856,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133857,"byte_end":133860,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133861,"byte_end":133918,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133919,"byte_end":133976,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133977,"byte_end":134040,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134041,"byte_end":134090,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134091,"byte_end":134140,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":5773},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\blocking.rs","byte_start":10755352,"byte_end":10755366,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\blocking.rs","byte_start":10755326,"byte_end":10755338,"line_start":108,"line_end":108,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\spawn.rs","byte_start":10759253,"byte_end":10759258,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\spawn.rs","byte_start":10759227,"byte_end":10759239,"line_start":126,"line_end":126,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":10760232,"byte_end":10760241,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":10760151,"byte_end":10760214,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5786},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10768347,"byte_end":10768355,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":5787},{"krate":0,"index":5788},{"krate":0,"index":5789}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":5795},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10770449,"byte_end":10770460,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10770423,"byte_end":10770435,"line_start":294,"line_end":294,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5663},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10771357,"byte_end":10771360,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10771312,"byte_end":10771345,"line_start":324,"line_end":324,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5664},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773115,"byte_end":10773126,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10771902,"byte_end":10771952,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10771957,"byte_end":10771960,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10771965,"byte_end":10772025,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772030,"byte_end":10772033,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772038,"byte_end":10772110,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772115,"byte_end":10772185,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772190,"byte_end":10772201,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772206,"byte_end":10772226,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772231,"byte_end":10772234,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772239,"byte_end":10772257,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772262,"byte_end":10772283,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772288,"byte_end":10772330,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772335,"byte_end":10772338,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772343,"byte_end":10772415,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772420,"byte_end":10772473,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772478,"byte_end":10772511,"line_start":357,"line_end":357,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772516,"byte_end":10772533,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772538,"byte_end":10772549,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772554,"byte_end":10772557,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772562,"byte_end":10772596,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772601,"byte_end":10772637,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772642,"byte_end":10772660,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772665,"byte_end":10772682,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772687,"byte_end":10772690,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772695,"byte_end":10772766,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772771,"byte_end":10772821,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772826,"byte_end":10772859,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772864,"byte_end":10772881,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772886,"byte_end":10772897,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772902,"byte_end":10772905,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772910,"byte_end":10772946,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772951,"byte_end":10772969,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772974,"byte_end":10772991,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10772996,"byte_end":10773001,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773006,"byte_end":10773013,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773018,"byte_end":10773053,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773089,"byte_end":10773101,"line_start":378,"line_end":378,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5666},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775966,"byte_end":10775974,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773511,"byte_end":10773585,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773590,"byte_end":10773649,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773654,"byte_end":10773657,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773662,"byte_end":10773729,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773734,"byte_end":10773807,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773812,"byte_end":10773888,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773893,"byte_end":10773973,"line_start":397,"line_end":397,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10773978,"byte_end":10773997,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774002,"byte_end":10774005,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774010,"byte_end":10774076,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774081,"byte_end":10774084,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774089,"byte_end":10774101,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774106,"byte_end":10774109,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774114,"byte_end":10774186,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774191,"byte_end":10774264,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774269,"byte_end":10774272,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774277,"byte_end":10774288,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774293,"byte_end":10774296,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774301,"byte_end":10774375,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774380,"byte_end":10774455,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774460,"byte_end":10774535,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774540,"byte_end":10774617,"line_start":412,"line_end":412,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774622,"byte_end":10774625,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774630,"byte_end":10774663,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774668,"byte_end":10774687,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774692,"byte_end":10774724,"line_start":416,"line_end":416,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774729,"byte_end":10774749,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774754,"byte_end":10774757,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774762,"byte_end":10774800,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774805,"byte_end":10774843,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774848,"byte_end":10774879,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774884,"byte_end":10774928,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774933,"byte_end":10774992,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10774997,"byte_end":10775019,"line_start":424,"line_end":424,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775024,"byte_end":10775039,"line_start":425,"line_end":425,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775044,"byte_end":10775062,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775067,"byte_end":10775078,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775083,"byte_end":10775111,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775116,"byte_end":10775122,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775127,"byte_end":10775134,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775139,"byte_end":10775173,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775178,"byte_end":10775185,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775190,"byte_end":10775222,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775227,"byte_end":10775247,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775252,"byte_end":10775255,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775260,"byte_end":10775298,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775303,"byte_end":10775341,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775346,"byte_end":10775377,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775382,"byte_end":10775426,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775431,"byte_end":10775490,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775495,"byte_end":10775517,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775522,"byte_end":10775543,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775548,"byte_end":10775566,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775571,"byte_end":10775582,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775587,"byte_end":10775615,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775620,"byte_end":10775626,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775631,"byte_end":10775638,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775643,"byte_end":10775646,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775651,"byte_end":10775686,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775691,"byte_end":10775758,"line_start":450,"line_end":450,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775763,"byte_end":10775818,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775823,"byte_end":10775877,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10775882,"byte_end":10775904,"line_start":453,"line_end":453,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10777221,"byte_end":10777230,"line_start":490,"line_end":490,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776129,"byte_end":10776199,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776204,"byte_end":10776207,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776212,"byte_end":10776282,"line_start":464,"line_end":464,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776287,"byte_end":10776363,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776368,"byte_end":10776436,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776441,"byte_end":10776521,"line_start":467,"line_end":467,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776526,"byte_end":10776598,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776603,"byte_end":10776678,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776683,"byte_end":10776739,"line_start":470,"line_end":470,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776744,"byte_end":10776747,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776752,"byte_end":10776766,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776771,"byte_end":10776774,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776779,"byte_end":10776790,"line_start":474,"line_end":474,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776795,"byte_end":10776815,"line_start":475,"line_end":475,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776820,"byte_end":10776823,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776828,"byte_end":10776846,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776851,"byte_end":10776872,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776877,"byte_end":10776924,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776929,"byte_end":10776971,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10776976,"byte_end":10776998,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10777003,"byte_end":10777033,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10777038,"byte_end":10777056,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10777061,"byte_end":10777078,"line_start":484,"line_end":484,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10777083,"byte_end":10777088,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10777093,"byte_end":10777100,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10777105,"byte_end":10777108,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10777113,"byte_end":10777148,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10777153,"byte_end":10777203,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5725},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786239,"byte_end":10786247,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":5727}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785360,"byte_end":10785390,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785391,"byte_end":10785394,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785395,"byte_end":10785449,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785450,"byte_end":10785453,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785454,"byte_end":10785520,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785521,"byte_end":10785588,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785589,"byte_end":10785646,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785647,"byte_end":10785716,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785717,"byte_end":10785720,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785721,"byte_end":10785735,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785736,"byte_end":10785739,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785740,"byte_end":10785747,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785748,"byte_end":10785770,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785771,"byte_end":10785795,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785796,"byte_end":10785823,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785824,"byte_end":10785829,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785830,"byte_end":10785833,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785834,"byte_end":10785866,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785867,"byte_end":10785903,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785904,"byte_end":10785917,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785918,"byte_end":10785921,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785922,"byte_end":10785954,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785955,"byte_end":10785991,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785992,"byte_end":10785995,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10785996,"byte_end":10786032,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786033,"byte_end":10786073,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786074,"byte_end":10786091,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786092,"byte_end":10786105,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786106,"byte_end":10786113,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786114,"byte_end":10786121,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786122,"byte_end":10786181,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5727},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786289,"byte_end":10786294,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":5725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5730},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786822,"byte_end":10786827,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786372,"byte_end":10786436,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786441,"byte_end":10786444,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786449,"byte_end":10786510,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786515,"byte_end":10786518,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786523,"byte_end":10786539,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786544,"byte_end":10786547,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786552,"byte_end":10786559,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786564,"byte_end":10786586,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786591,"byte_end":10786615,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786620,"byte_end":10786647,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786652,"byte_end":10786657,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786662,"byte_end":10786665,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786670,"byte_end":10786702,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786707,"byte_end":10786762,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786767,"byte_end":10786780,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786785,"byte_end":10786792,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786797,"byte_end":10786804,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787301,"byte_end":10787305,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787052,"byte_end":10787118,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787123,"byte_end":10787126,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787131,"byte_end":10787143,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787148,"byte_end":10787151,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787156,"byte_end":10787217,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787222,"byte_end":10787289,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5737},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787793,"byte_end":10787801,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787546,"byte_end":10787612,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787617,"byte_end":10787620,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787625,"byte_end":10787691,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787696,"byte_end":10787761,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10787766,"byte_end":10787781,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5743},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788261,"byte_end":10788264,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788156,"byte_end":10788198,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788203,"byte_end":10788249,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5798},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10789753,"byte_end":10789764,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":5799}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10789628,"byte_end":10789703,"line_start":224,"line_end":224,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":5811},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6070},{"krate":0,"index":6094},{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6151},{"krate":0,"index":6152},{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185},{"krate":0,"index":6186}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":24384,"byte_end":24408,"line_start":311,"line_end":311,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790137,"byte_end":10790169,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790170,"byte_end":10790173,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790174,"byte_end":10790254,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790255,"byte_end":10790267,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790268,"byte_end":10790271,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790272,"byte_end":10790353,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790354,"byte_end":10790368,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790369,"byte_end":10790372,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790373,"byte_end":10790443,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790444,"byte_end":10790524,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790525,"byte_end":10790539,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790540,"byte_end":10790543,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790544,"byte_end":10790623,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790624,"byte_end":10790696,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790697,"byte_end":10790766,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790767,"byte_end":10790770,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790771,"byte_end":10790842,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790843,"byte_end":10790862,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790863,"byte_end":10790866,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790867,"byte_end":10790937,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790938,"byte_end":10790941,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790942,"byte_end":10790956,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790957,"byte_end":10790960,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10790961,"byte_end":10791007,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791008,"byte_end":10791011,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791012,"byte_end":10791019,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791020,"byte_end":10791047,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791048,"byte_end":10791051,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791052,"byte_end":10791080,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791081,"byte_end":10791084,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791085,"byte_end":10791088,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791089,"byte_end":10791107,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791108,"byte_end":10791129,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791130,"byte_end":10791178,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791179,"byte_end":10791219,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791220,"byte_end":10791225,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791226,"byte_end":10791233,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791234,"byte_end":10791237,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791238,"byte_end":10791293,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791294,"byte_end":10791297,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791298,"byte_end":10791305,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791306,"byte_end":10791347,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791348,"byte_end":10791351,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791352,"byte_end":10791380,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791381,"byte_end":10791404,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791405,"byte_end":10791410,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791411,"byte_end":10791414,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791415,"byte_end":10791437,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791438,"byte_end":10791505,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791506,"byte_end":10791509,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791510,"byte_end":10791531,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791532,"byte_end":10791572,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791573,"byte_end":10791578,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791579,"byte_end":10791586,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791587,"byte_end":10791594,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791595,"byte_end":10791598,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791599,"byte_end":10791675,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791676,"byte_end":10791679,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791680,"byte_end":10791744,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791745,"byte_end":10791817,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791818,"byte_end":10791893,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791894,"byte_end":10791972,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791973,"byte_end":10791976,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10791977,"byte_end":10792051,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792052,"byte_end":10792122,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792123,"byte_end":10792135,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792136,"byte_end":10792139,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792140,"byte_end":10792147,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792148,"byte_end":10792168,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792169,"byte_end":10792172,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792173,"byte_end":10792214,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792215,"byte_end":10792241,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792242,"byte_end":10792297,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792298,"byte_end":10792303,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792304,"byte_end":10792307,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792308,"byte_end":10792326,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792327,"byte_end":10792348,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/     let interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792349,"byte_end":10792417,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/     tokio::pin!(interval);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792418,"byte_end":10792448,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792449,"byte_end":10792452,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792453,"byte_end":10792477,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/         interval.as_mut().tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792478,"byte_end":10792521,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792522,"byte_end":10792567,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792568,"byte_end":10792577,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792578,"byte_end":10792583,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792584,"byte_end":10792591,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792592,"byte_end":10792595,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792596,"byte_end":10792631,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792632,"byte_end":10792673,"line_start":89,"line_end":89,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":5992},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860316,"byte_end":10860327,"line_start":19,"line_end":19,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10859928,"byte_end":10859966,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10859967,"byte_end":10859970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10859971,"byte_end":10860051,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860052,"byte_end":10860129,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860130,"byte_end":10860165,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860166,"byte_end":10860169,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860170,"byte_end":10860188,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860189,"byte_end":10860192,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860193,"byte_end":10860278,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860279,"byte_end":10860308,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":5993},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861381,"byte_end":10861386,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860394,"byte_end":10860433,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860434,"byte_end":10860437,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860438,"byte_end":10860513,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860514,"byte_end":10860549,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860550,"byte_end":10860553,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860554,"byte_end":10860634,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860635,"byte_end":10860712,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860713,"byte_end":10860748,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860749,"byte_end":10860752,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860753,"byte_end":10860816,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860817,"byte_end":10860820,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860821,"byte_end":10860912,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860913,"byte_end":10860916,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860917,"byte_end":10860935,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860936,"byte_end":10860939,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10860940,"byte_end":10861025,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861026,"byte_end":10861055,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861056,"byte_end":10861059,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861060,"byte_end":10861074,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861075,"byte_end":10861078,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861079,"byte_end":10861126,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861127,"byte_end":10861130,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861131,"byte_end":10861138,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861139,"byte_end":10861178,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861179,"byte_end":10861182,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861183,"byte_end":10861201,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861202,"byte_end":10861223,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861224,"byte_end":10861272,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861273,"byte_end":10861313,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861314,"byte_end":10861319,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861320,"byte_end":10861327,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861328,"byte_end":10861331,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10861332,"byte_end":10861373,"line_start":55,"line_end":55,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6604},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10864342,"byte_end":10864347,"line_start":150,"line_end":150,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":6605},{"krate":0,"index":6606}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and [`sleep_until`](sleep_until).","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5996},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10864793,"byte_end":10864801,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10864723,"byte_end":10864781,"line_start":167,"line_end":167,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5997},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10864996,"byte_end":10865006,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10864855,"byte_end":10864897,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10864902,"byte_end":10864905,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10864910,"byte_end":10864984,"line_start":174,"line_end":174,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5998},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10866002,"byte_end":10866007,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865067,"byte_end":10865117,"line_start":179,"line_end":179,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865122,"byte_end":10865125,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865130,"byte_end":10865204,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865209,"byte_end":10865276,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865281,"byte_end":10865284,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865289,"byte_end":10865357,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865362,"byte_end":10865376,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865381,"byte_end":10865384,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ To call this method, you will usually combine the call with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865389,"byte_end":10865452,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/ [`Pin::as_mut`], which lets you call the method with consuming the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865457,"byte_end":10865527,"line_start":188,"line_end":188,"column_start":5,"column_end":75}},{"value":"/ `Sleep` itself.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865532,"byte_end":10865551,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865556,"byte_end":10865559,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865564,"byte_end":10865577,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865582,"byte_end":10865585,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865590,"byte_end":10865597,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865602,"byte_end":10865643,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865648,"byte_end":10865651,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865656,"byte_end":10865703,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865708,"byte_end":10865731,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/ let sleep = tokio::time::sleep(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865736,"byte_end":10865798,"line_start":198,"line_end":198,"column_start":5,"column_end":67}},{"value":"/ tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865803,"byte_end":10865826,"line_start":199,"line_end":199,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865831,"byte_end":10865834,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ sleep.as_mut().reset(Instant::now() + Duration::from_millis(20));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865839,"byte_end":10865908,"line_start":201,"line_end":201,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865913,"byte_end":10865920,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865925,"byte_end":10865932,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865937,"byte_end":10865940,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`Pin::as_mut`]: fn@std::pin::Pin::as_mut","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10865945,"byte_end":10865990,"line_start":205,"line_end":205,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":6070},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","parent":null,"children":[{"krate":0,"index":6071},{"krate":0,"index":6072},{"krate":0,"index":6073},{"krate":0,"index":6263},{"krate":0,"index":6269},{"krate":0,"index":6268},{"krate":0,"index":6266},{"krate":0,"index":6271},{"krate":0,"index":6290},{"krate":0,"index":6288},{"krate":0,"index":6287},{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6074},{"krate":0,"index":6292},{"krate":0,"index":6299},{"krate":0,"index":6295},{"krate":0,"index":6296},{"krate":0,"index":6301},{"krate":0,"index":6304},{"krate":0,"index":6076},{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6087},{"krate":0,"index":6089},{"krate":0,"index":6091},{"krate":0,"index":6092}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867296,"byte_end":10867317,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6263},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868504,"byte_end":10868509,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867369,"byte_end":10867420,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867421,"byte_end":10867424,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867425,"byte_end":10867486,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867487,"byte_end":10867490,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867491,"byte_end":10867565,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867566,"byte_end":10867645,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867646,"byte_end":10867721,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867722,"byte_end":10867797,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867798,"byte_end":10867826,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867827,"byte_end":10867830,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867831,"byte_end":10867908,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867909,"byte_end":10867996,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10867997,"byte_end":10868073,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868074,"byte_end":10868154,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868155,"byte_end":10868232,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868233,"byte_end":10868314,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868315,"byte_end":10868397,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868398,"byte_end":10868401,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868402,"byte_end":10868462,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6292},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868813,"byte_end":10868820,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868741,"byte_end":10868773,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6077},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868997,"byte_end":10869005,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868934,"byte_end":10868985,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6078},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869137,"byte_end":10869148,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869054,"byte_end":10869125,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6079},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869284,"byte_end":10869295,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869218,"byte_end":10869272,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6080},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869432,"byte_end":10869446,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869346,"byte_end":10869420,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":6081},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869585,"byte_end":10869592,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869518,"byte_end":10869573,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869728,"byte_end":10869738,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869640,"byte_end":10869716,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":6306},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872116,"byte_end":10872123,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":6307}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10870825,"byte_end":10870882,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10870883,"byte_end":10870926,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10870927,"byte_end":10870930,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10870931,"byte_end":10871008,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871009,"byte_end":10871083,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871084,"byte_end":10871137,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871138,"byte_end":10871141,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871142,"byte_end":10871220,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871221,"byte_end":10871298,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871299,"byte_end":10871375,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871376,"byte_end":10871450,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871451,"byte_end":10871465,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871466,"byte_end":10871469,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871470,"byte_end":10871550,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871551,"byte_end":10871629,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871630,"byte_end":10871702,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871703,"byte_end":10871717,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871718,"byte_end":10871721,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871722,"byte_end":10871800,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871801,"byte_end":10871812,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871813,"byte_end":10871816,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871817,"byte_end":10871827,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871828,"byte_end":10871831,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871832,"byte_end":10871906,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871907,"byte_end":10871982,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10871983,"byte_end":10872043,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6099},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872370,"byte_end":10872373,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872177,"byte_end":10872223,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872228,"byte_end":10872231,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872236,"byte_end":10872250,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872255,"byte_end":10872258,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872263,"byte_end":10872270,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872275,"byte_end":10872304,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872309,"byte_end":10872312,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872317,"byte_end":10872346,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872351,"byte_end":10872358,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6100},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872499,"byte_end":10872507,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872423,"byte_end":10872487,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6101},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872643,"byte_end":10872651,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872581,"byte_end":10872631,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6102},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872895,"byte_end":10872909,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872710,"byte_end":10872782,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872787,"byte_end":10872790,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872795,"byte_end":10872807,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872812,"byte_end":10872815,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872820,"byte_end":10872883,"line_start":66,"line_end":66,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6103},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873592,"byte_end":10873614,"line_start":88,"line_end":88,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873005,"byte_end":10873080,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873085,"byte_end":10873133,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873138,"byte_end":10873141,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873146,"byte_end":10873160,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873165,"byte_end":10873168,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873173,"byte_end":10873180,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873185,"byte_end":10873233,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873238,"byte_end":10873241,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873246,"byte_end":10873264,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873269,"byte_end":10873290,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873295,"byte_end":10873328,"line_start":81,"line_end":81,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873333,"byte_end":10873374,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873379,"byte_end":10873416,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873421,"byte_end":10873483,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873488,"byte_end":10873558,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873563,"byte_end":10873568,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873573,"byte_end":10873580,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6104},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874329,"byte_end":10874354,"line_start":109,"line_end":109,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873726,"byte_end":10873801,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873806,"byte_end":10873865,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873870,"byte_end":10873873,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873878,"byte_end":10873892,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873897,"byte_end":10873900,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873905,"byte_end":10873912,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873917,"byte_end":10873965,"line_start":98,"line_end":98,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873970,"byte_end":10873973,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10873978,"byte_end":10873996,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874001,"byte_end":10874022,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874027,"byte_end":10874060,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874065,"byte_end":10874106,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874111,"byte_end":10874148,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874153,"byte_end":10874218,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874223,"byte_end":10874295,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874300,"byte_end":10874305,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874310,"byte_end":10874317,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6105},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875117,"byte_end":10875124,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874461,"byte_end":10874531,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874536,"byte_end":10874539,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874544,"byte_end":10874556,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874561,"byte_end":10874564,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874569,"byte_end":10874637,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874642,"byte_end":10874708,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874713,"byte_end":10874740,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874745,"byte_end":10874748,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874753,"byte_end":10874767,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874772,"byte_end":10874775,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874780,"byte_end":10874787,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874792,"byte_end":10874840,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874845,"byte_end":10874848,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874853,"byte_end":10874871,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874876,"byte_end":10874897,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874902,"byte_end":10874939,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874944,"byte_end":10874992,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10874997,"byte_end":10875029,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875034,"byte_end":10875083,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875088,"byte_end":10875093,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875098,"byte_end":10875105,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6106},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875405,"byte_end":10875416,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875188,"byte_end":10875263,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875268,"byte_end":10875339,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875344,"byte_end":10875393,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6107},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875755,"byte_end":10875766,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875538,"byte_end":10875613,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875618,"byte_end":10875689,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875694,"byte_end":10875743,"line_start":147,"line_end":147,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879210,"byte_end":10879218,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877488,"byte_end":10877565,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877566,"byte_end":10877597,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877598,"byte_end":10877601,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877602,"byte_end":10877682,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877683,"byte_end":10877722,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877723,"byte_end":10877726,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877727,"byte_end":10877800,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877801,"byte_end":10877804,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877805,"byte_end":10877817,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877818,"byte_end":10877821,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877822,"byte_end":10877867,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877868,"byte_end":10877871,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877872,"byte_end":10877886,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877887,"byte_end":10877890,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877891,"byte_end":10877898,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877899,"byte_end":10877937,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877938,"byte_end":10877941,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877942,"byte_end":10877960,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877961,"byte_end":10877982,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10877983,"byte_end":10878052,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878053,"byte_end":10878056,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878057,"byte_end":10878087,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878088,"byte_end":10878118,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878119,"byte_end":10878149,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878150,"byte_end":10878153,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878154,"byte_end":10878197,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878198,"byte_end":10878203,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878204,"byte_end":10878211,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878212,"byte_end":10878215,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878216,"byte_end":10878290,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878291,"byte_end":10878294,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878295,"byte_end":10878368,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878369,"byte_end":10878444,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878445,"byte_end":10878521,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878522,"byte_end":10878583,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878584,"byte_end":10878587,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878588,"byte_end":10878662,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878663,"byte_end":10878733,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878734,"byte_end":10878746,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878747,"byte_end":10878750,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878751,"byte_end":10878758,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878759,"byte_end":10878779,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878780,"byte_end":10878783,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878784,"byte_end":10878825,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878826,"byte_end":10878852,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878853,"byte_end":10878908,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878909,"byte_end":10878914,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878915,"byte_end":10878918,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878919,"byte_end":10878937,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878938,"byte_end":10878959,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10878960,"byte_end":10879032,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879033,"byte_end":10879057,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879058,"byte_end":10879092,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879093,"byte_end":10879138,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879139,"byte_end":10879148,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879149,"byte_end":10879154,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879155,"byte_end":10879162,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879163,"byte_end":10879166,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879167,"byte_end":10879202,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880107,"byte_end":10880118,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879368,"byte_end":10879441,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879442,"byte_end":10879479,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879480,"byte_end":10879483,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879484,"byte_end":10879564,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879565,"byte_end":10879604,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879605,"byte_end":10879608,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879609,"byte_end":10879621,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879622,"byte_end":10879625,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879626,"byte_end":10879671,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879672,"byte_end":10879675,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879676,"byte_end":10879690,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879691,"byte_end":10879694,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879695,"byte_end":10879702,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879703,"byte_end":10879757,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879758,"byte_end":10879761,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879762,"byte_end":10879780,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879781,"byte_end":10879802,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879803,"byte_end":10879866,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879867,"byte_end":10879940,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879941,"byte_end":10879944,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879945,"byte_end":10879975,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10879976,"byte_end":10880006,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880007,"byte_end":10880037,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880038,"byte_end":10880041,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880042,"byte_end":10880085,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880086,"byte_end":10880091,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880092,"byte_end":10880099,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6325},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880873,"byte_end":10880881,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":6326},{"krate":0,"index":6327}],"decl_id":null,"docs":" Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880326,"byte_end":10880407,"line_start":109,"line_end":109,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880408,"byte_end":10880411,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type allows you to wait on a sequence of instants with a certain","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880412,"byte_end":10880485,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ duration between each instant. Unlike calling [`sleep`](crate::time::sleep)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880486,"byte_end":10880565,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ in a loop, this lets you count the time spent between the calls to `sleep`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880566,"byte_end":10880644,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880645,"byte_end":10880657,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880658,"byte_end":10880661,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ An `Interval` can be turned into a `Stream` with [`IntervalStream`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880662,"byte_end":10880734,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880735,"byte_end":10880738,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`IntervalStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.IntervalStream.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10880739,"byte_end":10880844,"line_start":118,"line_end":118,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":6146},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881614,"byte_end":10881618,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881092,"byte_end":10881161,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881166,"byte_end":10881169,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881174,"byte_end":10881188,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881193,"byte_end":10881196,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881201,"byte_end":10881208,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881213,"byte_end":10881233,"line_start":134,"line_end":134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881238,"byte_end":10881241,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881246,"byte_end":10881274,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881279,"byte_end":10881282,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881287,"byte_end":10881305,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881310,"byte_end":10881331,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881336,"byte_end":10881405,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881410,"byte_end":10881413,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881418,"byte_end":10881448,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881453,"byte_end":10881483,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881488,"byte_end":10881518,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881523,"byte_end":10881526,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881531,"byte_end":10881574,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881579,"byte_end":10881584,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881589,"byte_end":10881596,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6150},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10882294,"byte_end":10882303,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881701,"byte_end":10881761,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881766,"byte_end":10881769,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881774,"byte_end":10881822,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881827,"byte_end":10881830,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881835,"byte_end":10881903,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881908,"byte_end":10881975,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881980,"byte_end":10881983,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881988,"byte_end":10882063,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10882068,"byte_end":10882143,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10882148,"byte_end":10882223,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10882228,"byte_end":10882282,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":6168},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884150,"byte_end":10884157,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883135,"byte_end":10883212,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883213,"byte_end":10883216,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883217,"byte_end":10883296,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883297,"byte_end":10883369,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883370,"byte_end":10883383,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883384,"byte_end":10883387,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883388,"byte_end":10883405,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883406,"byte_end":10883409,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883410,"byte_end":10883488,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883489,"byte_end":10883519,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883520,"byte_end":10883523,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883524,"byte_end":10883604,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883605,"byte_end":10883632,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883633,"byte_end":10883636,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883637,"byte_end":10883651,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883652,"byte_end":10883655,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883656,"byte_end":10883716,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883717,"byte_end":10883720,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883721,"byte_end":10883732,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883733,"byte_end":10883762,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883763,"byte_end":10883792,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883793,"byte_end":10883796,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883797,"byte_end":10883825,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883826,"byte_end":10883829,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883830,"byte_end":10883852,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883853,"byte_end":10883891,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883892,"byte_end":10883919,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883920,"byte_end":10883923,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883924,"byte_end":10883997,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10883998,"byte_end":10884064,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884065,"byte_end":10884120,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884121,"byte_end":10884126,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884127,"byte_end":10884134,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884135,"byte_end":10884142,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6170},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885369,"byte_end":10885379,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884338,"byte_end":10884410,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884411,"byte_end":10884414,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884415,"byte_end":10884492,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884493,"byte_end":10884548,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884549,"byte_end":10884552,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884553,"byte_end":10884570,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884571,"byte_end":10884574,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884575,"byte_end":10884653,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884654,"byte_end":10884684,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884685,"byte_end":10884688,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884689,"byte_end":10884769,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884770,"byte_end":10884797,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884798,"byte_end":10884801,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884802,"byte_end":10884816,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884817,"byte_end":10884820,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884821,"byte_end":10884881,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884882,"byte_end":10884885,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884886,"byte_end":10884897,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884898,"byte_end":10884941,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884942,"byte_end":10884971,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884972,"byte_end":10884975,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10884976,"byte_end":10885004,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885005,"byte_end":10885008,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885009,"byte_end":10885031,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885032,"byte_end":10885070,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885071,"byte_end":10885098,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885099,"byte_end":10885102,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885103,"byte_end":10885181,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885182,"byte_end":10885196,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885197,"byte_end":10885283,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885284,"byte_end":10885339,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885340,"byte_end":10885345,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885346,"byte_end":10885353,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885354,"byte_end":10885361,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6566},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885754,"byte_end":10885761,"line_start":106,"line_end":106,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6569}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":11148829,"byte_end":11148838,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6175},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10886057,"byte_end":10886064,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885984,"byte_end":10886045,"line_start":119,"line_end":119,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6176},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10886192,"byte_end":10886199,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10886111,"byte_end":10886180,"line_start":124,"line_end":124,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6177},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10886328,"byte_end":10886338,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10886258,"byte_end":10886316,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136919,"byte_end":136925,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136828,"byte_end":136857,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136862,"byte_end":136865,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136870,"byte_end":136909,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136955,"byte_end":136961,"line_start":49,"line_end":49,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136932,"byte_end":136945,"line_start":48,"line_end":48,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16448,"byte_end":16454,"line_start":444,"line_end":444,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14953,"byte_end":15034,"line_start":407,"line_end":407,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15035,"byte_end":15124,"line_start":408,"line_end":408,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15125,"byte_end":15135,"line_start":409,"line_end":409,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15136,"byte_end":15139,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15140,"byte_end":15189,"line_start":411,"line_end":411,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15190,"byte_end":15193,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15194,"byte_end":15270,"line_start":413,"line_end":413,"column_start":1,"column_end":77}},{"value":"/ but unfortunetly the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15271,"byte_end":15345,"line_start":414,"line_end":414,"column_start":1,"column_end":75}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15346,"byte_end":15424,"line_start":415,"line_end":415,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15425,"byte_end":15502,"line_start":416,"line_end":416,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15503,"byte_end":15582,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15583,"byte_end":15665,"line_start":418,"line_end":418,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15666,"byte_end":15701,"line_start":419,"line_end":419,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15702,"byte_end":15705,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15706,"byte_end":15785,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15786,"byte_end":15868,"line_start":422,"line_end":422,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15869,"byte_end":15948,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15949,"byte_end":15952,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15953,"byte_end":16003,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16004,"byte_end":16054,"line_start":426,"line_end":426,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16055,"byte_end":16109,"line_start":427,"line_end":427,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16110,"byte_end":16113,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16114,"byte_end":16127,"line_start":429,"line_end":429,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16128,"byte_end":16131,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16132,"byte_end":16191,"line_start":431,"line_end":431,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16192,"byte_end":16195,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16196,"byte_end":16214,"line_start":433,"line_end":433,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16215,"byte_end":16241,"line_start":434,"line_end":434,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16242,"byte_end":16245,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16246,"byte_end":16296,"line_start":436,"line_end":436,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16297,"byte_end":16300,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16301,"byte_end":16341,"line_start":438,"line_end":438,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16342,"byte_end":16390,"line_start":439,"line_end":439,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16391,"byte_end":16414,"line_start":440,"line_end":440,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16415,"byte_end":16424,"line_start":441,"line_end":441,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16425,"byte_end":16431,"line_start":442,"line_end":442,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16432,"byte_end":16439,"line_start":443,"line_end":443,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30343,"byte_end":30352,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30368,"byte_end":30377,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30727,"byte_end":30732,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":32359,"byte_end":32365,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":32579,"byte_end":32585,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":32727,"byte_end":32733,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":9958331,"byte_end":9958336,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":9958363,"byte_end":9958368,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45570,"byte_end":45573,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45733,"byte_end":45736,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46365,"byte_end":46371,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49411,"byte_end":49414,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49557,"byte_end":49560,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50229,"byte_end":50235,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53229,"byte_end":53232,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53375,"byte_end":53378,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53769,"byte_end":53775,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63245,"byte_end":63248,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63396,"byte_end":63399,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64276,"byte_end":64279,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65077,"byte_end":65083,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65886,"byte_end":65892,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":66698,"byte_end":66704,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":67505,"byte_end":67511,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69552,"byte_end":69559,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78537,"byte_end":78544,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969417,"byte_end":9969425,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9971566,"byte_end":9971574,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9971717,"byte_end":9971725,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9971853,"byte_end":9971861,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972446,"byte_end":9972451,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9976868,"byte_end":9976873,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9977617,"byte_end":9977622,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9977783,"byte_end":9977788,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9977916,"byte_end":9977921,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9978075,"byte_end":9978080,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9978227,"byte_end":9978232,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9980680,"byte_end":9980692,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9980717,"byte_end":9980729,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9980773,"byte_end":9980785,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9986213,"byte_end":9986225,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9986824,"byte_end":9986836,"line_start":226,"line_end":226,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9990239,"byte_end":9990250,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9990510,"byte_end":9990521,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9990701,"byte_end":9990712,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9998895,"byte_end":9998906,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9998995,"byte_end":9999006,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9999031,"byte_end":9999042,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9999076,"byte_end":9999087,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10000010,"byte_end":10000016,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10000511,"byte_end":10000520,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10005194,"byte_end":10005203,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10005568,"byte_end":10005577,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10005610,"byte_end":10005619,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9962006,"byte_end":9962012,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9964818,"byte_end":9964824,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9964939,"byte_end":9964944,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9965388,"byte_end":9965394,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9965793,"byte_end":9965799,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9965949,"byte_end":9965955,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9966780,"byte_end":9966786,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9967603,"byte_end":9967609,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9967687,"byte_end":9967693,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9967828,"byte_end":9967833,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9968790,"byte_end":9968799,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10009140,"byte_end":10009151,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10011786,"byte_end":10011797,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10013340,"byte_end":10013351,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10013494,"byte_end":10013505,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10013677,"byte_end":10013688,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015439,"byte_end":10015447,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10016364,"byte_end":10016373,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10016623,"byte_end":10016631,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10016926,"byte_end":10016935,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10017614,"byte_end":10017619,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018075,"byte_end":10018080,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018333,"byte_end":10018338,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018461,"byte_end":10018469,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018506,"byte_end":10018515,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018552,"byte_end":10018560,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018597,"byte_end":10018606,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018649,"byte_end":10018657,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018825,"byte_end":10018834,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","byte_start":10019791,"byte_end":10019795,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10031706,"byte_end":10031707,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10071034,"byte_end":10071035,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10073144,"byte_end":10073145,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10108392,"byte_end":10108393,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10109761,"byte_end":10109770,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10111627,"byte_end":10111636,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10112446,"byte_end":10112455,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10113368,"byte_end":10113377,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10113888,"byte_end":10113897,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115386,"byte_end":10115395,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10117232,"byte_end":10117241,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10117383,"byte_end":10117392,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10118104,"byte_end":10118113,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10118643,"byte_end":10118652,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10118907,"byte_end":10118916,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10120852,"byte_end":10120861,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10123139,"byte_end":10123148,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10124038,"byte_end":10124047,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10124301,"byte_end":10124310,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10124597,"byte_end":10124606,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10125784,"byte_end":10125789,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126929,"byte_end":10126934,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10127213,"byte_end":10127218,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10127804,"byte_end":10127809,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy.rs","byte_start":10130644,"byte_end":10130648,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy_buf.rs","byte_start":10134342,"byte_end":10134349,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10136616,"byte_end":10136621,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10136835,"byte_end":10136840,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10137073,"byte_end":10137078,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\flush.rs","byte_start":10138205,"byte_end":10138210,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139541,"byte_end":10139546,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140798,"byte_end":10140803,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10145081,"byte_end":10145093,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10145637,"byte_end":10145649,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10146347,"byte_end":10146359,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10146510,"byte_end":10146514,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10146920,"byte_end":10146924,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10147790,"byte_end":10147794,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read.rs","byte_start":10149975,"byte_end":10149979,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_buf.rs","byte_start":10151113,"byte_end":10151120,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_exact.rs","byte_start":10153501,"byte_end":10153510,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_line.rs","byte_start":10162600,"byte_end":10162608,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_end.rs","byte_start":10166261,"byte_end":10166270,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10166665,"byte_end":10166668,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10166957,"byte_end":10166960,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10167660,"byte_end":10167678,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10167858,"byte_end":10167876,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_string.rs","byte_start":10173246,"byte_end":10173258,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","byte_start":10175562,"byte_end":10175571,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":10177149,"byte_end":10177155,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\shutdown.rs","byte_start":10178534,"byte_end":10178542,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10180182,"byte_end":10180186,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10180696,"byte_end":10180700,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10181857,"byte_end":10181862,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182601,"byte_end":10182606,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10184919,"byte_end":10184923,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186551,"byte_end":10186555,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10187199,"byte_end":10187203,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write.rs","byte_start":10189002,"byte_end":10189007,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1971},{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_all.rs","byte_start":10190042,"byte_end":10190050,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_buf.rs","byte_start":10191535,"byte_end":10191543,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":81612,"byte_end":81622,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":81662,"byte_end":81672,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":81974,"byte_end":81986,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82026,"byte_end":82038,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82335,"byte_end":82347,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82387,"byte_end":82399,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":86730,"byte_end":86736,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":86780,"byte_end":86786,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":88339,"byte_end":88349,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2527},{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":88988,"byte_end":88997,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199408,"byte_end":10199419,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2577},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207698,"byte_end":10207709,"line_start":309,"line_end":309,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10208035,"byte_end":10208046,"line_start":321,"line_end":321,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10208474,"byte_end":10208485,"line_start":344,"line_end":344,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211775,"byte_end":10211784,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224425,"byte_end":10224434,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10225059,"byte_end":10225068,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10225198,"byte_end":10225207,"line_start":522,"line_end":522,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10225336,"byte_end":10225345,"line_start":529,"line_end":529,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2637}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227401,"byte_end":10227409,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2653},{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10230212,"byte_end":10230220,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10230436,"byte_end":10230445,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10231362,"byte_end":10231370,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10231464,"byte_end":10231473,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234359,"byte_end":10234371,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2693}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234574,"byte_end":10234586,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234596,"byte_end":10234609,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237791,"byte_end":10237804,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238005,"byte_end":10238019,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238702,"byte_end":10238716,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2708}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238880,"byte_end":10238894,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10239941,"byte_end":10239954,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10240050,"byte_end":10240064,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10242751,"byte_end":10242760,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2764},{"krate":0,"index":2767},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2787},{"krate":0,"index":2993},{"krate":0,"index":2790},{"krate":0,"index":2793},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10276030,"byte_end":10276039,"line_start":1042,"line_end":1042,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10276397,"byte_end":10276406,"line_start":1056,"line_end":1056,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10276616,"byte_end":10276625,"line_start":1066,"line_end":1066,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10277451,"byte_end":10277460,"line_start":1099,"line_end":1099,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10277882,"byte_end":10277891,"line_start":1122,"line_end":1122,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282619,"byte_end":10282628,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2859},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2879},{"krate":0,"index":2883},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2890},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":3001},{"krate":0,"index":3004},{"krate":0,"index":2897},{"krate":0,"index":2901},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2909},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2916},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325231,"byte_end":10325240,"line_start":1353,"line_end":1353,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325565,"byte_end":10325574,"line_start":1365,"line_end":1365,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10326001,"byte_end":10326010,"line_start":1388,"line_end":1388,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":92751,"byte_end":92760,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":92934,"byte_end":92943,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93090,"byte_end":93099,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93212,"byte_end":93221,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":93565,"byte_end":93574,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":93599,"byte_end":93608,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":93618,"byte_end":93627,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94119,"byte_end":94128,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94413,"byte_end":94422,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":94763,"byte_end":94772,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":94797,"byte_end":94806,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":94816,"byte_end":94825,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95010,"byte_end":95019,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95304,"byte_end":95313,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":97824,"byte_end":97832,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":97857,"byte_end":97865,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":97875,"byte_end":97883,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98064,"byte_end":98072,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98356,"byte_end":98364,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":98704,"byte_end":98715,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":98740,"byte_end":98751,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":98761,"byte_end":98772,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99461,"byte_end":99472,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99762,"byte_end":99773,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99937,"byte_end":99948,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\mutex.rs","byte_start":100279,"byte_end":100284,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":100962,"byte_end":100972,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10326318,"byte_end":10326324,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10327281,"byte_end":10327287,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10327501,"byte_end":10327507,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":106136,"byte_end":106146,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":106411,"byte_end":106421,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":106947,"byte_end":106952,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":111717,"byte_end":111727,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":111836,"byte_end":111848,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":112203,"byte_end":112219,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":113482,"byte_end":113498,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114093,"byte_end":114105,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114285,"byte_end":114290,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":105183,"byte_end":105186,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":105275,"byte_end":105278,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10348002,"byte_end":10348014,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10350960,"byte_end":10350981,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3604}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10351697,"byte_end":10351702,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3607},{"krate":0,"index":3610}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10353342,"byte_end":10353347,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3093}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10353477,"byte_end":10353482,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3095}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10361304,"byte_end":10361310,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10361335,"byte_end":10361341,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10361700,"byte_end":10361704,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3156}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10362591,"byte_end":10362600,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3159},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10365754,"byte_end":10365763,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3178},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10368801,"byte_end":10368808,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3188},{"krate":0,"index":3190},{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10369739,"byte_end":10369748,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372474,"byte_end":10372483,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3215}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372726,"byte_end":10372735,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10373012,"byte_end":10373021,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10373055,"byte_end":10373060,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10373813,"byte_end":10373820,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10374475,"byte_end":10374482,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10379855,"byte_end":10379868,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10386849,"byte_end":10386854,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392327,"byte_end":10392337,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392374,"byte_end":10392384,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392400,"byte_end":10392410,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3334},{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393645,"byte_end":10393655,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393682,"byte_end":10393692,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10394918,"byte_end":10394928,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10395194,"byte_end":10395204,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10396451,"byte_end":10396458,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3373},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10397989,"byte_end":10397996,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3384}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10398086,"byte_end":10398093,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10400775,"byte_end":10400780,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3432},{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3439},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3447},{"krate":0,"index":3449},{"krate":0,"index":3452},{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10409636,"byte_end":10409644,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10411521,"byte_end":10411526,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3476}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10411685,"byte_end":10411693,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3478}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\waker.rs","byte_start":10413511,"byte_end":10413519,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3504},{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354477,"byte_end":10354481,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354512,"byte_end":10354516,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354653,"byte_end":10354661,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354702,"byte_end":10354710,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10356697,"byte_end":10356701,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3553},{"krate":0,"index":3554}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10357597,"byte_end":10357601,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10357770,"byte_end":10357778,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3560},{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10358064,"byte_end":10358068,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10358308,"byte_end":10358312,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3567}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10358464,"byte_end":10358472,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10358688,"byte_end":10358692,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10417231,"byte_end":10417245,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3694}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10419483,"byte_end":10419488,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10422111,"byte_end":10422116,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10422809,"byte_end":10422823,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3719}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10424042,"byte_end":10424056,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10424222,"byte_end":10424229,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3725},{"krate":0,"index":3727},{"krate":0,"index":3728}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10424759,"byte_end":10424766,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10424934,"byte_end":10424937,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3732},{"krate":0,"index":3734},{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10426026,"byte_end":10426032,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3740},{"krate":0,"index":3741}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10426494,"byte_end":10426504,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3749}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10426779,"byte_end":10426789,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10431272,"byte_end":10431284,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10433859,"byte_end":10433871,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10433957,"byte_end":10433969,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3819}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10434130,"byte_end":10434137,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3821},{"krate":0,"index":3822}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10436569,"byte_end":10436574,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10439813,"byte_end":10439820,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\schedule.rs","byte_start":10440323,"byte_end":10440335,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":10441208,"byte_end":10441216,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10442965,"byte_end":10442977,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3861}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10443203,"byte_end":10443215,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10443245,"byte_end":10443257,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3867},{"krate":0,"index":3868}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10446451,"byte_end":10446458,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3910},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3915},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3919},{"krate":0,"index":3920}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10457449,"byte_end":10457456,"line_start":453,"line_end":453,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10458018,"byte_end":10458025,"line_start":477,"line_end":477,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10460713,"byte_end":10460720,"line_start":565,"line_end":565,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\context.rs","byte_start":10463240,"byte_end":10463250,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3937}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":10467792,"byte_end":10467798,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":10468382,"byte_end":10468388,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3963}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470136,"byte_end":10470142,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10475518,"byte_end":10475533,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3993}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10475681,"byte_end":10475696,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3995}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10475836,"byte_end":10475851,"line_start":221,"line_end":221,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":10476236,"byte_end":10476243,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4002}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":10476485,"byte_end":10476492,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4096}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10337561,"byte_end":10337568,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4106},{"krate":0,"index":4109},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4113}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":119056,"byte_end":119062,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":120422,"byte_end":120432,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":121403,"byte_end":121419,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4147}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":121551,"byte_end":121567,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4149}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":123307,"byte_end":123313,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4154},{"krate":0,"index":4155}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494517,"byte_end":10494524,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4161},{"krate":0,"index":4162}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10497803,"byte_end":10497820,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4166}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505259,"byte_end":10505268,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4203}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505444,"byte_end":10505453,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506101,"byte_end":10506110,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4207}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506415,"byte_end":10506424,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507347,"byte_end":10507359,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4210}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507737,"byte_end":10507749,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10509712,"byte_end":10509716,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10509761,"byte_end":10509765,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512539,"byte_end":10512545,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512582,"byte_end":10512588,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512626,"byte_end":10512634,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512671,"byte_end":10512679,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512695,"byte_end":10512701,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4263},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10518311,"byte_end":10518315,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4273}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10518707,"byte_end":10518713,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4276}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10518893,"byte_end":10518899,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4279}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10519053,"byte_end":10519061,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4282}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10523924,"byte_end":10523932,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4289}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10528108,"byte_end":10528116,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10528742,"byte_end":10528746,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4296},{"krate":0,"index":4297}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10529525,"byte_end":10529529,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4301},{"krate":0,"index":4302}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10530190,"byte_end":10530194,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4306}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10530942,"byte_end":10530948,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4314}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10531363,"byte_end":10531369,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4317}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10531513,"byte_end":10531521,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4320}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10531656,"byte_end":10531665,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10531838,"byte_end":10531847,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4329}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10538729,"byte_end":10538734,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4384},{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4397}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10548835,"byte_end":10548841,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4403}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10549323,"byte_end":10549329,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4406},{"krate":0,"index":4407}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552718,"byte_end":10552726,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4443}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559738,"byte_end":10559746,"line_start":302,"line_end":302,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4446}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559942,"byte_end":10559950,"line_start":310,"line_end":310,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559966,"byte_end":10559972,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4467}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572864,"byte_end":10572870,"line_start":703,"line_end":703,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573002,"byte_end":10573008,"line_start":711,"line_end":711,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4473}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573220,"byte_end":10573226,"line_start":721,"line_end":721,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4476}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574476,"byte_end":10574482,"line_start":764,"line_end":764,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4480}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574809,"byte_end":10574815,"line_start":779,"line_end":779,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4484}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10575476,"byte_end":10575478,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4515}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10575771,"byte_end":10575773,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4523}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10576710,"byte_end":10576714,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10577347,"byte_end":10577355,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4548}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10577621,"byte_end":10577625,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10577674,"byte_end":10577678,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10578185,"byte_end":10578187,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4561},{"krate":0,"index":4562},{"krate":0,"index":4563},{"krate":0,"index":4564}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10578619,"byte_end":10578621,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4568},{"krate":0,"index":4569}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10579171,"byte_end":10579173,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4575}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10579512,"byte_end":10579514,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4579}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10579837,"byte_end":10579839,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4586}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10583230,"byte_end":10583232,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4593}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10583644,"byte_end":10583648,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4599}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10583833,"byte_end":10583837,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4603}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10584838,"byte_end":10584849,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4619}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10586590,"byte_end":10586592,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4652}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10592305,"byte_end":10592307,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4655}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10592584,"byte_end":10592586,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4658},{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4661}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10595985,"byte_end":10595987,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10596645,"byte_end":10596660,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10596801,"byte_end":10596816,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597489,"byte_end":10597506,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4687}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598505,"byte_end":10598522,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601820,"byte_end":10601835,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4704},{"krate":0,"index":4705},{"krate":0,"index":4706},{"krate":0,"index":4711},{"krate":0,"index":4714}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605525,"byte_end":10605534,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4724}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605694,"byte_end":10605703,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606189,"byte_end":10606201,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606234,"byte_end":10606246,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4731}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606586,"byte_end":10606598,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4734}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606827,"byte_end":10606836,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4736}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606966,"byte_end":10606975,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10608476,"byte_end":10608492,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10608529,"byte_end":10608545,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614917,"byte_end":10614922,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614976,"byte_end":10614981,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615035,"byte_end":10615045,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615110,"byte_end":10615125,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615804,"byte_end":10615816,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4768}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615953,"byte_end":10615965,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616773,"byte_end":10616778,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4776},{"krate":0,"index":4779},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4786}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622531,"byte_end":10622536,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622620,"byte_end":10622625,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4792}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622749,"byte_end":10622754,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4795}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623149,"byte_end":10623159,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4798}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623260,"byte_end":10623270,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4801},{"krate":0,"index":4802}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623417,"byte_end":10623427,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623584,"byte_end":10623594,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4808}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623760,"byte_end":10623770,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4811}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623948,"byte_end":10623963,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4814}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10624060,"byte_end":10624075,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4817},{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10624218,"byte_end":10624233,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4821}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10624386,"byte_end":10624401,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10624563,"byte_end":10624578,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4827}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10629441,"byte_end":10629449,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10629482,"byte_end":10629490,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630320,"byte_end":10630326,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10638902,"byte_end":10638908,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4872}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10640818,"byte_end":10640826,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4875}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10641339,"byte_end":10641347,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4877},{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10647043,"byte_end":10647051,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4881}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10650106,"byte_end":10650112,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4888}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651988,"byte_end":10651997,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4914}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10652159,"byte_end":10652168,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10652237,"byte_end":10652249,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4917}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10652548,"byte_end":10652560,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10653054,"byte_end":10653058,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4930},{"krate":0,"index":4932},{"krate":0,"index":4936},{"krate":0,"index":4938}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655094,"byte_end":10655100,"line_start":174,"line_end":174,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4944},{"krate":0,"index":4946},{"krate":0,"index":4951},{"krate":0,"index":4952}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10662727,"byte_end":10662733,"line_start":427,"line_end":427,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4955}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10662872,"byte_end":10662880,"line_start":435,"line_end":435,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4958},{"krate":0,"index":4959}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10667271,"byte_end":10667279,"line_start":584,"line_end":584,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10667426,"byte_end":10667434,"line_start":592,"line_end":592,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4965},{"krate":0,"index":4966}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10667897,"byte_end":10667902,"line_start":608,"line_end":608,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671008,"byte_end":10671013,"line_start":706,"line_end":706,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671050,"byte_end":10671055,"line_start":707,"line_end":707,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671156,"byte_end":10671161,"line_start":713,"line_end":713,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4982}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671538,"byte_end":10671543,"line_start":731,"line_end":731,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4985}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671938,"byte_end":10671943,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5004}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10673656,"byte_end":10673661,"line_start":812,"line_end":812,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5006}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10677720,"byte_end":10677729,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5057},{"krate":0,"index":5058},{"krate":0,"index":5062}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10688754,"byte_end":10688763,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5066}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10688962,"byte_end":10688968,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5068},{"krate":0,"index":5069}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10689834,"byte_end":10689841,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5071},{"krate":0,"index":5072}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10690519,"byte_end":10690526,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5075},{"krate":0,"index":5076}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10691325,"byte_end":10691332,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5080}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692582,"byte_end":10692589,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692636,"byte_end":10692648,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5083}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692741,"byte_end":10692753,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5085}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692897,"byte_end":10692909,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692956,"byte_end":10692971,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5088},{"krate":0,"index":5089}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10693489,"byte_end":10693504,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5091}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10693790,"byte_end":10693805,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10693898,"byte_end":10693904,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5094},{"krate":0,"index":5095},{"krate":0,"index":5096},{"krate":0,"index":5097},{"krate":0,"index":5098}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696772,"byte_end":10696781,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5112},{"krate":0,"index":5115},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5123},{"krate":0,"index":5124}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703119,"byte_end":10703134,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5127}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703379,"byte_end":10703399,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5129}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703653,"byte_end":10703668,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703776,"byte_end":10703796,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5134}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707208,"byte_end":10707223,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5159},{"krate":0,"index":5162}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710641,"byte_end":10710656,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5168}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710836,"byte_end":10710851,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5172}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711027,"byte_end":10711042,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5176}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711506,"byte_end":10711522,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5186}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10713144,"byte_end":10713160,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5190}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10713340,"byte_end":10713356,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5194}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10713532,"byte_end":10713548,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10714624,"byte_end":10714630,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10714684,"byte_end":10714690,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10714924,"byte_end":10714939,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10714997,"byte_end":10715012,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715077,"byte_end":10715093,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715406,"byte_end":10715422,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715480,"byte_end":10715486,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722855,"byte_end":10722870,"line_start":605,"line_end":605,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5228},{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10723001,"byte_end":10723017,"line_start":613,"line_end":613,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5232},{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10723151,"byte_end":10723167,"line_start":621,"line_end":621,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10723281,"byte_end":10723287,"line_start":627,"line_end":627,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5239}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10723379,"byte_end":10723385,"line_start":633,"line_end":633,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5242}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10729660,"byte_end":10729671,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5273},{"krate":0,"index":5274}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10735693,"byte_end":10735704,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5277}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10735790,"byte_end":10735801,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5279}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10735934,"byte_end":10735945,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10735970,"byte_end":10735981,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10736077,"byte_end":10736082,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5286},{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740311,"byte_end":10740320,"line_start":130,"line_end":130,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5308}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740500,"byte_end":10740509,"line_start":136,"line_end":136,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740702,"byte_end":10740711,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5312}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740873,"byte_end":10740882,"line_start":150,"line_end":150,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742088,"byte_end":10742096,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5319},{"krate":0,"index":5320}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10744629,"byte_end":10744637,"line_start":287,"line_end":287,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5327}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10744975,"byte_end":10744983,"line_start":300,"line_end":300,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5330}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10745353,"byte_end":10745359,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5333},{"krate":0,"index":5334},{"krate":0,"index":5335},{"krate":0,"index":5336}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747943,"byte_end":10747949,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5341}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10748139,"byte_end":10748142,"line_start":410,"line_end":410,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5344},{"krate":0,"index":5345}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":10760367,"byte_end":10760375,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5784},{"krate":0,"index":5785}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10771297,"byte_end":10771305,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5663},{"krate":0,"index":5664},{"krate":0,"index":5666},{"krate":0,"index":5668},{"krate":0,"index":5672},{"krate":0,"index":5674},{"krate":0,"index":5677}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10779298,"byte_end":10779306,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5681}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10779445,"byte_end":10779453,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5683},{"krate":0,"index":5684}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10780418,"byte_end":10780426,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5687}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10780507,"byte_end":10780515,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5689}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10781382,"byte_end":10781390,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5693},{"krate":0,"index":5694}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10782275,"byte_end":10782281,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5698},{"krate":0,"index":5700}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10782844,"byte_end":10782847,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5702},{"krate":0,"index":5704},{"krate":0,"index":5707}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786354,"byte_end":10786362,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5730},{"krate":0,"index":5734},{"krate":0,"index":5737}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788138,"byte_end":10788146,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788354,"byte_end":10788362,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5747}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788683,"byte_end":10788698,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5752}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788999,"byte_end":10789004,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5761}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10789622,"byte_end":10789623,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10789808,"byte_end":10789819,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5768}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10789963,"byte_end":10789974,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5770}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10790121,"byte_end":10790132,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\clock.rs","byte_start":10793699,"byte_end":10793704,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6192},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6195}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10818135,"byte_end":10818144,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5841}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10818228,"byte_end":10818237,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10818383,"byte_end":10818392,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5845},{"krate":0,"index":5846},{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5851},{"krate":0,"index":5852},{"krate":0,"index":5854},{"krate":0,"index":5855},{"krate":0,"index":5856}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10825410,"byte_end":10825420,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10825445,"byte_end":10825455,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10826896,"byte_end":10826907,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5867},{"krate":0,"index":5868},{"krate":0,"index":5869}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10830430,"byte_end":10830447,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5875}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10830748,"byte_end":10830765,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5877}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10831004,"byte_end":10831015,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10831040,"byte_end":10831051,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10831090,"byte_end":10831101,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5885}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10831619,"byte_end":10831629,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889},{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10834505,"byte_end":10834516,"line_start":556,"line_end":556,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5894},{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10836907,"byte_end":10836917,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5901}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":10837422,"byte_end":10837428,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5914},{"krate":0,"index":5915},{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":10837999,"byte_end":10838005,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6234}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":10840041,"byte_end":10840047,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5918}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":10852645,"byte_end":10852650,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5940},{"krate":0,"index":5942},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":10858718,"byte_end":10858723,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5948}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":10841668,"byte_end":10841673,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5966},{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5971},{"krate":0,"index":5972},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5975}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10864513,"byte_end":10864518,"line_start":159,"line_end":159,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5995},{"krate":0,"index":5996},{"krate":0,"index":5997},{"krate":0,"index":5998},{"krate":0,"index":5999}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10866520,"byte_end":10866525,"line_start":225,"line_end":225,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6002},{"krate":0,"index":6003}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10803118,"byte_end":10803127,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6022},{"krate":0,"index":6023},{"krate":0,"index":6024},{"krate":0,"index":6026},{"krate":0,"index":6027}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10804534,"byte_end":10804540,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":6039}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10807546,"byte_end":10807552,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6048},{"krate":0,"index":6049}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10812246,"byte_end":10812252,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6053},{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6056},{"krate":0,"index":6057},{"krate":0,"index":6058}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10812983,"byte_end":10812989,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6061}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10813115,"byte_end":10813120,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6063}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10813428,"byte_end":10813433,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6065}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868676,"byte_end":10868681,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6075}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868922,"byte_end":10868927,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6077},{"krate":0,"index":6078},{"krate":0,"index":6079},{"krate":0,"index":6080},{"krate":0,"index":6081},{"krate":0,"index":6082}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869827,"byte_end":10869832,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869859,"byte_end":10869864,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6085}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10870326,"byte_end":10870333,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6088}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10870421,"byte_end":10870428,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6090}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10870572,"byte_end":10870579,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10870616,"byte_end":10870621,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6093}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872163,"byte_end":10872170,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6099},{"krate":0,"index":6100},{"krate":0,"index":6101},{"krate":0,"index":6102},{"krate":0,"index":6103},{"krate":0,"index":6104},{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875920,"byte_end":10875927,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876056,"byte_end":10876063,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6111}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876178,"byte_end":10876185,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6113},{"krate":0,"index":6114}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876350,"byte_end":10876357,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6116}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876462,"byte_end":10876469,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6118},{"krate":0,"index":6119}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876610,"byte_end":10876617,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6121},{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876778,"byte_end":10876785,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6124}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876892,"byte_end":10876899,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881077,"byte_end":10881085,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6146},{"krate":0,"index":6150}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885854,"byte_end":10885861,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6174},{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6177}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10886399,"byte_end":10886406,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6180},{"krate":0,"index":6181}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":10887051,"byte_end":10887055,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6333},{"krate":0,"index":6334},{"krate":0,"index":6335},{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6339}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":10888483,"byte_end":10888487,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6341}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893637,"byte_end":10893641,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893678,"byte_end":10893682,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893719,"byte_end":10893729,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893766,"byte_end":10893776,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893813,"byte_end":10893816,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893853,"byte_end":10893856,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10894472,"byte_end":10894476,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6417},{"krate":0,"index":6418},{"krate":0,"index":6420}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10900082,"byte_end":10900086,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6423}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10900225,"byte_end":10900234,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6426}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10900801,"byte_end":10900810,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6429}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10900968,"byte_end":10900971,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6432},{"krate":0,"index":6433}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10901233,"byte_end":10901236,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6436}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10901503,"byte_end":10901506,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6439}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10901627,"byte_end":10901631,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6442}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10904138,"byte_end":10904142,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6446},{"krate":0,"index":6447}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10904486,"byte_end":10904490,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6450}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10904838,"byte_end":10904842,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10905204,"byte_end":10905214,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6456},{"krate":0,"index":6457}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10906151,"byte_end":10906161,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6460}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10906304,"byte_end":10906309,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6463}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10907192,"byte_end":10907196,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6467}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10907756,"byte_end":10907761,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6470}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10908087,"byte_end":10908094,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6472},{"krate":0,"index":6473},{"krate":0,"index":6474}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136255,"byte_end":136265,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136335,"byte_end":136345,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":137645,"byte_end":137653,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":137690,"byte_end":137698,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":137749,"byte_end":137759,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":137994,"byte_end":138004,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140853,"byte_end":140863,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":141220,"byte_end":141230,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":141417,"byte_end":141427,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142599,"byte_end":142609,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6511}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142978,"byte_end":142989,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6517},{"krate":0,"index":6518}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143663,"byte_end":143671,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143870,"byte_end":143878,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":10915696,"byte_end":10915704,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14339,"byte_end":14345,"line_start":351,"line_end":351,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","byte_start":18014,"byte_end":18021,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14398,"byte_end":14400,"line_start":359,"line_end":359,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":104}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14410,"byte_end":14413,"line_start":360,"line_end":360,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":281}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":79884,"byte_end":79887,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2558}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14578,"byte_end":14585,"line_start":373,"line_end":373,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3081}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14816,"byte_end":14820,"line_start":390,"line_end":390,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4156}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492087,"byte_end":10492096,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":4170}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492111,"byte_end":10492115,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4333}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10536129,"byte_end":10536134,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4719}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492273,"byte_end":10492280,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4892}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10492624,"byte_end":10492629,"line_start":458,"line_end":458,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":5293}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14865,"byte_end":14869,"line_start":396,"line_end":396,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":615}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14933,"byte_end":14937,"line_start":402,"line_end":402,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5811}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":10792893,"byte_end":10792898,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6070}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30343,"byte_end":30352,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30368,"byte_end":30377,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30727,"byte_end":30732,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":64},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":32359,"byte_end":32365,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":32579,"byte_end":32585,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":32727,"byte_end":32733,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":9958331,"byte_end":9958336,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":693},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":9958363,"byte_end":9958368,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":693},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":43111,"byte_end":43120,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":141},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45570,"byte_end":45573,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45733,"byte_end":45736,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":34794},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46365,"byte_end":46371,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":7114},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49411,"byte_end":49414,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49557,"byte_end":49560,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":34794},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50229,"byte_end":50235,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":7114},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53229,"byte_end":53232,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":166}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53375,"byte_end":53378,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":34794},"to":{"krate":0,"index":166}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53769,"byte_end":53775,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":7114},"to":{"krate":0,"index":166}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63245,"byte_end":63248,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63396,"byte_end":63399,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":34794},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64276,"byte_end":64279,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":5370},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65077,"byte_end":65083,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":7114},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65886,"byte_end":65892,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":7114},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":66698,"byte_end":66704,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":7114},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":67505,"byte_end":67511,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":7114},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":69552,"byte_end":69559,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78537,"byte_end":78544,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9969417,"byte_end":9969425,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9971566,"byte_end":9971574,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":2269}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9971717,"byte_end":9971725,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":9971853,"byte_end":9971861,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9972446,"byte_end":9972451,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9976868,"byte_end":9976873,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9977617,"byte_end":9977622,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":988},"to":{"krate":2,"index":2269}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9977783,"byte_end":9977788,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":988},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9977916,"byte_end":9977921,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":988},"to":{"krate":2,"index":2264}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9978075,"byte_end":9978080,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":988},"to":{"krate":2,"index":2213}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":9978227,"byte_end":9978232,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":988},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9980680,"byte_end":9980692,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9980717,"byte_end":9980729,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9980773,"byte_end":9980785,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9986213,"byte_end":9986225,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":9986824,"byte_end":9986836,"line_start":226,"line_end":226,"column_start":10,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9990239,"byte_end":9990250,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1030},"to":{"krate":0,"index":6369}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9990510,"byte_end":9990521,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9990701,"byte_end":9990712,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9998895,"byte_end":9998906,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9998995,"byte_end":9999006,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9999031,"byte_end":9999042,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":9999076,"byte_end":9999087,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10000010,"byte_end":10000016,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1057},"to":{"krate":0,"index":632}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10000511,"byte_end":10000520,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10005194,"byte_end":10005203,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10005568,"byte_end":10005577,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10005610,"byte_end":10005619,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9962006,"byte_end":9962012,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9964818,"byte_end":9964824,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9964939,"byte_end":9964944,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":894},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9965388,"byte_end":9965394,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":885},"to":{"krate":0,"index":582}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9965793,"byte_end":9965799,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9965949,"byte_end":9965955,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9966780,"byte_end":9966786,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9967603,"byte_end":9967609,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1084},"to":{"krate":0,"index":589}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9967687,"byte_end":9967693,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9967828,"byte_end":9967833,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":9968790,"byte_end":9968799,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10009140,"byte_end":10009151,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10011786,"byte_end":10011797,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10013340,"byte_end":10013351,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10013494,"byte_end":10013505,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10013677,"byte_end":10013688,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10015439,"byte_end":10015447,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10016364,"byte_end":10016373,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10016623,"byte_end":10016631,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1238},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10016926,"byte_end":10016935,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1241},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10017614,"byte_end":10017619,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018075,"byte_end":10018080,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018333,"byte_end":10018338,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1152},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018461,"byte_end":10018469,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018506,"byte_end":10018515,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018552,"byte_end":10018560,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018597,"byte_end":10018606,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018649,"byte_end":10018657,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10018825,"byte_end":10018834,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","byte_start":10019791,"byte_end":10019795,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9442},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10022673,"byte_end":10022685,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":113},"to":{"krate":0,"index":2026}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10031706,"byte_end":10031707,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":2026}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10033628,"byte_end":10033637,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":141},"to":{"krate":0,"index":2034}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10071034,"byte_end":10071035,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1308},"to":{"krate":0,"index":2034}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10071960,"byte_end":10071969,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":166},"to":{"krate":0,"index":2085}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10073144,"byte_end":10073145,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1317},"to":{"krate":0,"index":2085}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10075097,"byte_end":10075107,"line_start":65,"line_end":65,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":192},"to":{"krate":0,"index":2088}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10108392,"byte_end":10108393,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1358},"to":{"krate":0,"index":2088}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10109761,"byte_end":10109770,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":9390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10111627,"byte_end":10111636,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":9390},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10112446,"byte_end":10112455,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":9390},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10113368,"byte_end":10113377,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":9390},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10113888,"byte_end":10113897,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9390},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10115386,"byte_end":10115395,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10117232,"byte_end":10117241,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9359},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10117383,"byte_end":10117392,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":9359},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10118104,"byte_end":10118113,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":9359},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10118643,"byte_end":10118652,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":9359},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10118907,"byte_end":10118916,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":9359},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10120852,"byte_end":10120861,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":9313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10123139,"byte_end":10123148,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":9313},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10124038,"byte_end":10124047,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":9313},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10124301,"byte_end":10124310,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":9313},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10124597,"byte_end":10124606,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":9313},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10125784,"byte_end":10125789,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":9264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10126929,"byte_end":10126934,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":9264},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10127213,"byte_end":10127218,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":9264},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10127804,"byte_end":10127809,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":9264},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy.rs","byte_start":10130644,"byte_end":10130648,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2134},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy_buf.rs","byte_start":10134342,"byte_end":10134349,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2162},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10136616,"byte_end":10136621,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2174},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10136835,"byte_end":10136840,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2174},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10137073,"byte_end":10137078,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2174},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\flush.rs","byte_start":10138205,"byte_end":10138210,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9222},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10139541,"byte_end":10139546,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":9172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10140798,"byte_end":10140803,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":9172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10145081,"byte_end":10145093,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2177},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10145637,"byte_end":10145649,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2177},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10146347,"byte_end":10146359,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2177},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10146510,"byte_end":10146514,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10146920,"byte_end":10146924,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2182},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10147790,"byte_end":10147794,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2182},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read.rs","byte_start":10149975,"byte_end":10149979,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":9121},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_buf.rs","byte_start":10151113,"byte_end":10151120,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":9061},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_exact.rs","byte_start":10153501,"byte_end":10153510,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":9006},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_line.rs","byte_start":10162600,"byte_end":10162608,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":8087},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_end.rs","byte_start":10166261,"byte_end":10166270,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":8030},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10166665,"byte_end":10166668,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":5370},"to":{"krate":0,"index":1790}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10166905,"byte_end":10166910,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2053},"to":{"krate":0,"index":1793}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10166931,"byte_end":10166937,"line_start":13,"line_end":13,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1790},"to":{"krate":0,"index":1793}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10166957,"byte_end":10166960,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":5370},"to":{"krate":0,"index":1793}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10167660,"byte_end":10167678,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10167858,"byte_end":10167876,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_string.rs","byte_start":10173246,"byte_end":10173258,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7969},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","byte_start":10175562,"byte_end":10175571,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7908},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":10177149,"byte_end":10177155,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2342},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\shutdown.rs","byte_start":10178534,"byte_end":10178542,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7859},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10180182,"byte_end":10180186,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2346},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10180696,"byte_end":10180700,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2346},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10181857,"byte_end":10181862,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10182601,"byte_end":10182606,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10184919,"byte_end":10184923,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10186551,"byte_end":10186555,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10187199,"byte_end":10187203,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write.rs","byte_start":10189002,"byte_end":10189007,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7718},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_all.rs","byte_start":10190042,"byte_end":10190050,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7665},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_buf.rs","byte_start":10191535,"byte_end":10191543,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":7605},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":80942,"byte_end":80959,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":341},"to":{"krate":0,"index":292}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":81612,"byte_end":81622,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":145}},"from":{"krate":1,"index":7264},"to":{"krate":0,"index":292}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":81662,"byte_end":81672,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":146}},"from":{"krate":1,"index":7264},"to":{"krate":0,"index":341}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":81974,"byte_end":81986,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":1,"index":7288},"to":{"krate":0,"index":292}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82026,"byte_end":82038,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":148}},"from":{"krate":1,"index":7288},"to":{"krate":0,"index":341}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82335,"byte_end":82347,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":1,"index":7291},"to":{"krate":0,"index":292}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82387,"byte_end":82399,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":150}},"from":{"krate":1,"index":7291},"to":{"krate":0,"index":341}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":86730,"byte_end":86736,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"kind":{"Impl":{"id":153}},"from":{"krate":5,"index":5867},"to":{"krate":0,"index":292}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":86780,"byte_end":86786,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"kind":{"Impl":{"id":154}},"from":{"krate":5,"index":5867},"to":{"krate":0,"index":341}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":88339,"byte_end":88349,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2533},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":88988,"byte_end":88997,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2547},"to":{"krate":2,"index":5695}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10199408,"byte_end":10199419,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10207698,"byte_end":10207709,"line_start":309,"line_end":309,"column_start":36,"column_end":47},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2957},"to":{"krate":2,"index":2066}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10208035,"byte_end":10208046,"line_start":321,"line_end":321,"column_start":21,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2957},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10208474,"byte_end":10208485,"line_start":344,"line_end":344,"column_start":26,"column_end":37},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2957},"to":{"krate":1,"index":9244}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10211775,"byte_end":10211784,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10224425,"byte_end":10224434,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2959},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10225059,"byte_end":10225068,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2959},"to":{"krate":1,"index":9248}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10225198,"byte_end":10225207,"line_start":522,"line_end":522,"column_start":22,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2959},"to":{"krate":1,"index":9244}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10225336,"byte_end":10225345,"line_start":529,"line_end":529,"column_start":24,"column_end":33},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2959},"to":{"krate":1,"index":9246}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10227401,"byte_end":10227409,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10230212,"byte_end":10230220,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2961},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10230436,"byte_end":10230445,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2968},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10231362,"byte_end":10231370,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2961},"to":{"krate":2,"index":2050}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10231464,"byte_end":10231473,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2968},"to":{"krate":2,"index":2050}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234359,"byte_end":10234371,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2984},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234574,"byte_end":10234586,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2984},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10234596,"byte_end":10234609,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10237791,"byte_end":10237804,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2975},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238005,"byte_end":10238019,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238702,"byte_end":10238716,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2979},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10238880,"byte_end":10238894,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2979},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10239941,"byte_end":10239954,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":2050}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10240050,"byte_end":10240064,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2979},"to":{"krate":2,"index":2050}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10242751,"byte_end":10242760,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10276030,"byte_end":10276039,"line_start":1042,"line_end":1042,"column_start":39,"column_end":48},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2991},"to":{"krate":2,"index":2066}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10276397,"byte_end":10276406,"line_start":1056,"line_end":1056,"column_start":20,"column_end":29},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2991},"to":{"krate":0,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10276616,"byte_end":10276625,"line_start":1066,"line_end":1066,"column_start":21,"column_end":30},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2991},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10277451,"byte_end":10277460,"line_start":1099,"line_end":1099,"column_start":21,"column_end":30},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2991},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10277882,"byte_end":10277891,"line_start":1122,"line_end":1122,"column_start":26,"column_end":35},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2991},"to":{"krate":1,"index":9244}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10282619,"byte_end":10282628,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325231,"byte_end":10325240,"line_start":1353,"line_end":1353,"column_start":39,"column_end":48},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2998},"to":{"krate":2,"index":2066}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10325565,"byte_end":10325574,"line_start":1365,"line_end":1365,"column_start":21,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2998},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10326001,"byte_end":10326010,"line_start":1388,"line_end":1388,"column_start":26,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2998},"to":{"krate":1,"index":9244}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":92751,"byte_end":92760,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":92934,"byte_end":92943,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93090,"byte_end":93099,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93212,"byte_end":93221,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":93565,"byte_end":93574,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":93599,"byte_end":93608,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":93618,"byte_end":93627,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94119,"byte_end":94128,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94413,"byte_end":94422,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":94763,"byte_end":94772,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":94797,"byte_end":94806,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":94816,"byte_end":94825,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95010,"byte_end":95019,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95304,"byte_end":95313,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":97824,"byte_end":97832,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":97857,"byte_end":97865,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":97875,"byte_end":97883,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98064,"byte_end":98072,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98356,"byte_end":98364,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":98704,"byte_end":98715,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":98740,"byte_end":98751,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":98761,"byte_end":98772,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99461,"byte_end":99472,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99762,"byte_end":99773,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99937,"byte_end":99948,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\mutex.rs","byte_start":100279,"byte_end":100284,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":100962,"byte_end":100972,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10326318,"byte_end":10326324,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3029},"to":{"krate":0,"index":582}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10327281,"byte_end":10327287,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3029},"to":{"krate":0,"index":589}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10327501,"byte_end":10327507,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3029},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":106136,"byte_end":106146,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":106411,"byte_end":106421,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3055},"to":{"krate":0,"index":582}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":106947,"byte_end":106952,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":111717,"byte_end":111727,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":111836,"byte_end":111848,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3059},"to":{"krate":0,"index":589}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":112203,"byte_end":112219,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":113482,"byte_end":113498,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3075},"to":{"krate":0,"index":582}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114093,"byte_end":114105,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114285,"byte_end":114290,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":104703,"byte_end":104707,"line_start":92,"line_end":92,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2155},"to":{"krate":0,"index":589}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":104710,"byte_end":104714,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2143},"to":{"krate":0,"index":589}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":105183,"byte_end":105186,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"kind":{"Impl":{"id":229}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":589}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":105275,"byte_end":105278,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"kind":{"Impl":{"id":230}},"from":{"krate":5,"index":4535},"to":{"krate":0,"index":589}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10348002,"byte_end":10348014,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10350960,"byte_end":10350981,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3600},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10351697,"byte_end":10351702,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10353342,"byte_end":10353347,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3090},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10353477,"byte_end":10353482,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3090},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10361304,"byte_end":10361310,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3133},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10361335,"byte_end":10361341,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3133},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10361700,"byte_end":10361704,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10362591,"byte_end":10362600,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10365754,"byte_end":10365763,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10368801,"byte_end":10368808,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10369739,"byte_end":10369748,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372474,"byte_end":10372483,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3618},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10372726,"byte_end":10372735,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3618},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10373012,"byte_end":10373021,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3618},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10373055,"byte_end":10373060,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":1,"index":2785},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10373813,"byte_end":10373820,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10374475,"byte_end":10374482,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10379855,"byte_end":10379868,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10386849,"byte_end":10386854,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3311},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392327,"byte_end":10392337,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3620},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392374,"byte_end":10392384,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3620},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10392400,"byte_end":10392410,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393645,"byte_end":10393655,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3620},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10393682,"byte_end":10393692,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3620},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10394918,"byte_end":10394928,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3620},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10395194,"byte_end":10395204,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3620},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10396451,"byte_end":10396458,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10397989,"byte_end":10397996,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3361},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10398086,"byte_end":10398093,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3361},"to":{"krate":2,"index":2153}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10400775,"byte_end":10400780,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10409636,"byte_end":10409644,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10411521,"byte_end":10411526,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3410},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10411685,"byte_end":10411693,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3624},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\waker.rs","byte_start":10413511,"byte_end":10413519,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354477,"byte_end":10354481,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3528},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354512,"byte_end":10354516,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3528},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354653,"byte_end":10354661,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3536},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354702,"byte_end":10354710,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3536},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354835,"byte_end":10354839,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2155},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10354842,"byte_end":10354847,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2148},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10356697,"byte_end":10356701,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10357597,"byte_end":10357601,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10357770,"byte_end":10357778,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10358064,"byte_end":10358068,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3528},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10358308,"byte_end":10358312,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3528},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10358464,"byte_end":10358472,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3536},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10358688,"byte_end":10358692,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3528},"to":{"krate":0,"index":632}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10417231,"byte_end":10417245,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10419483,"byte_end":10419488,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10422111,"byte_end":10422116,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3708},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10422809,"byte_end":10422823,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3664},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10424042,"byte_end":10424056,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3664},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10424222,"byte_end":10424229,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10424759,"byte_end":10424766,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4004},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10424934,"byte_end":10424937,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"kind":{"Impl":{"id":284}},"from":{"krate":5,"index":4535},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10426026,"byte_end":10426032,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3678},"to":{"krate":0,"index":6528}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10426494,"byte_end":10426504,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10426779,"byte_end":10426789,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3742},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10431272,"byte_end":10431284,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10433859,"byte_end":10433871,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3780},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10433957,"byte_end":10433969,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3780},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10434130,"byte_end":10434137,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10436569,"byte_end":10436574,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10439813,"byte_end":10439820,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4013},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\schedule.rs","byte_start":10440323,"byte_end":10440335,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":10441208,"byte_end":10441216,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10442965,"byte_end":10442977,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10443203,"byte_end":10443215,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3856},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10443245,"byte_end":10443257,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3856},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10446451,"byte_end":10446458,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10457449,"byte_end":10457456,"line_start":453,"line_end":453,"column_start":10,"column_end":17},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10458018,"byte_end":10458025,"line_start":477,"line_end":477,"column_start":10,"column_end":17},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10460713,"byte_end":10460720,"line_start":565,"line_end":565,"column_start":21,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\context.rs","byte_start":10463240,"byte_end":10463250,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4041},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":10467792,"byte_end":10467798,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":10468382,"byte_end":10468388,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4062},"to":{"krate":0,"index":582}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10470136,"byte_end":10470142,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10475518,"byte_end":10475533,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3989},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10475681,"byte_end":10475696,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3989},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10475836,"byte_end":10475851,"line_start":221,"line_end":221,"column_start":23,"column_end":38},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3989},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":10476236,"byte_end":10476243,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":10476485,"byte_end":10476492,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10337561,"byte_end":10337568,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":119056,"byte_end":119062,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":120422,"byte_end":120432,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":121403,"byte_end":121419,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":121551,"byte_end":121567,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4143},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":123307,"byte_end":123313,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10494517,"byte_end":10494524,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10497803,"byte_end":10497820,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505259,"byte_end":10505268,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":5365},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10505444,"byte_end":10505453,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":5365},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506101,"byte_end":10506110,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":5372},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10506415,"byte_end":10506424,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5372},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507347,"byte_end":10507359,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":5384},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10507737,"byte_end":10507749,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":5384},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10509712,"byte_end":10509716,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4239},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10509761,"byte_end":10509765,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4239},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512539,"byte_end":10512545,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512582,"byte_end":10512588,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512626,"byte_end":10512634,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4195},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512671,"byte_end":10512679,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4195},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10512695,"byte_end":10512701,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10518311,"byte_end":10518315,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10518707,"byte_end":10518713,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10518893,"byte_end":10518899,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10519053,"byte_end":10519061,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10523924,"byte_end":10523932,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10528108,"byte_end":10528116,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4195},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10528742,"byte_end":10528746,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10529525,"byte_end":10529529,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4239},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10530190,"byte_end":10530194,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4239},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10530942,"byte_end":10530948,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4230},"to":{"krate":0,"index":632}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10531363,"byte_end":10531369,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10531513,"byte_end":10531521,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4195},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10531656,"byte_end":10531665,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10531838,"byte_end":10531847,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4235},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10538729,"byte_end":10538734,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10548835,"byte_end":10548841,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10549323,"byte_end":10549329,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4364},"to":{"krate":2,"index":2424}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10552718,"byte_end":10552726,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559738,"byte_end":10559746,"line_start":302,"line_end":302,"column_start":24,"column_end":32},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4427},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559942,"byte_end":10559950,"line_start":310,"line_end":310,"column_start":19,"column_end":27},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4427},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10559966,"byte_end":10559972,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10572864,"byte_end":10572870,"line_start":703,"line_end":703,"column_start":19,"column_end":25},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4420},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573002,"byte_end":10573008,"line_start":711,"line_end":711,"column_start":24,"column_end":30},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4420},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10573220,"byte_end":10573226,"line_start":721,"line_end":721,"column_start":9,"column_end":15},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574476,"byte_end":10574482,"line_start":764,"line_end":764,"column_start":18,"column_end":24},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4423},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10574809,"byte_end":10574815,"line_start":779,"line_end":779,"column_start":24,"column_end":30},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4423},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10575476,"byte_end":10575478,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4508},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10575771,"byte_end":10575773,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4516},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10576710,"byte_end":10576714,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4529},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10577347,"byte_end":10577355,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4542},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10577621,"byte_end":10577625,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4529},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10577674,"byte_end":10577678,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4529},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10578185,"byte_end":10578187,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10578619,"byte_end":10578621,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10579171,"byte_end":10579173,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4508},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10579512,"byte_end":10579514,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4508},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10579837,"byte_end":10579839,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10583230,"byte_end":10583232,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4516},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10583644,"byte_end":10583648,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10583833,"byte_end":10583837,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4529},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10584838,"byte_end":10584849,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":426},"to":{"krate":0,"index":4524}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10586590,"byte_end":10586592,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10592305,"byte_end":10592307,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10592584,"byte_end":10592586,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10595985,"byte_end":10595987,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4639},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10596645,"byte_end":10596660,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4673},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10596801,"byte_end":10596816,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4673},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10597489,"byte_end":10597506,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4682},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10598505,"byte_end":10598522,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":4682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10601820,"byte_end":10601835,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605525,"byte_end":10605534,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10605694,"byte_end":10605703,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5402},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606189,"byte_end":10606201,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5409},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606234,"byte_end":10606246,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5409},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606586,"byte_end":10606598,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5409},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606827,"byte_end":10606836,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5420},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10606966,"byte_end":10606975,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5420},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10608476,"byte_end":10608492,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5430},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10608529,"byte_end":10608545,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5430},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614917,"byte_end":10614922,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4748},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10614976,"byte_end":10614981,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4748},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615035,"byte_end":10615045,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":4752},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615110,"byte_end":10615125,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":4756},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615804,"byte_end":10615816,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5441},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10615953,"byte_end":10615965,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5441},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10616773,"byte_end":10616778,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622531,"byte_end":10622536,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4748},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622620,"byte_end":10622625,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4748},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10622749,"byte_end":10622754,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4748},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623149,"byte_end":10623159,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":4752},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623260,"byte_end":10623270,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4752},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623417,"byte_end":10623427,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4752},"to":{"krate":2,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623584,"byte_end":10623594,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":4752},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623760,"byte_end":10623770,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":4752},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10623948,"byte_end":10623963,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4756},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10624060,"byte_end":10624075,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4756},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10624218,"byte_end":10624233,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4756},"to":{"krate":2,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10624386,"byte_end":10624401,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4756},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10624563,"byte_end":10624578,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4756},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10629441,"byte_end":10629449,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5468},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10629482,"byte_end":10629490,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5468},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10630320,"byte_end":10630326,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10638902,"byte_end":10638908,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5446},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10640818,"byte_end":10640826,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10641339,"byte_end":10641347,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5468},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10647043,"byte_end":10647051,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5468},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10650106,"byte_end":10650112,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5461},"to":{"krate":0,"index":632}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10651988,"byte_end":10651997,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5498},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10652159,"byte_end":10652168,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5498},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10652237,"byte_end":10652249,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5510},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10652548,"byte_end":10652560,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5510},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10653054,"byte_end":10653058,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10655094,"byte_end":10655100,"line_start":174,"line_end":174,"column_start":9,"column_end":15},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10662727,"byte_end":10662733,"line_start":427,"line_end":427,"column_start":18,"column_end":24},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5486},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10662872,"byte_end":10662880,"line_start":435,"line_end":435,"column_start":9,"column_end":17},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10667271,"byte_end":10667279,"line_start":584,"line_end":584,"column_start":18,"column_end":26},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5492},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10667426,"byte_end":10667434,"line_start":592,"line_end":592,"column_start":20,"column_end":28},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5492},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10667897,"byte_end":10667902,"line_start":608,"line_end":608,"column_start":9,"column_end":14},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":4920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671008,"byte_end":10671013,"line_start":706,"line_end":706,"column_start":31,"column_end":36},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":4920},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671050,"byte_end":10671055,"line_start":707,"line_end":707,"column_start":31,"column_end":36},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":4920},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671156,"byte_end":10671161,"line_start":713,"line_end":713,"column_start":18,"column_end":23},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":4920},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671538,"byte_end":10671543,"line_start":731,"line_end":731,"column_start":36,"column_end":41},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":4920},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10671938,"byte_end":10671943,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10673656,"byte_end":10673661,"line_start":812,"line_end":812,"column_start":21,"column_end":26},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5523},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10677720,"byte_end":10677729,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10688754,"byte_end":10688763,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10688962,"byte_end":10688968,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10689834,"byte_end":10689841,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5035},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10690519,"byte_end":10690526,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10691325,"byte_end":10691332,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5035},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692582,"byte_end":10692589,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5035},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692636,"byte_end":10692648,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692741,"byte_end":10692753,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5539},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692897,"byte_end":10692909,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5539},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10692956,"byte_end":10692971,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10693489,"byte_end":10693504,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5529},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10693790,"byte_end":10693805,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5529},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10693898,"byte_end":10693904,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5041},"to":{"krate":0,"index":632}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10696772,"byte_end":10696781,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703119,"byte_end":10703134,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703379,"byte_end":10703399,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703653,"byte_end":10703668,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5548},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10703776,"byte_end":10703796,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5555},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10707208,"byte_end":10707223,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710641,"byte_end":10710656,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5150},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10710836,"byte_end":10710851,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5150},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711027,"byte_end":10711042,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5150},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10711506,"byte_end":10711522,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10713144,"byte_end":10713160,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5177},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10713340,"byte_end":10713356,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5177},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10713532,"byte_end":10713548,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5177},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10714624,"byte_end":10714630,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10714684,"byte_end":10714690,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10714924,"byte_end":10714939,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5150},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10714997,"byte_end":10715012,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5150},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715077,"byte_end":10715093,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5177},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715406,"byte_end":10715422,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":5177},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10715480,"byte_end":10715486,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10722855,"byte_end":10722870,"line_start":605,"line_end":605,"column_start":32,"column_end":47},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5150},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10723001,"byte_end":10723017,"line_start":613,"line_end":613,"column_start":32,"column_end":48},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5177},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10723151,"byte_end":10723167,"line_start":621,"line_end":621,"column_start":35,"column_end":51},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5177},"to":{"krate":2,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10723281,"byte_end":10723287,"line_start":627,"line_end":627,"column_start":21,"column_end":27},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":10723379,"byte_end":10723385,"line_start":633,"line_end":633,"column_start":29,"column_end":35},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10729660,"byte_end":10729671,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10735693,"byte_end":10735704,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5259},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10735790,"byte_end":10735801,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5259},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10735934,"byte_end":10735945,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5259},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10735970,"byte_end":10735981,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5259},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":10736077,"byte_end":10736082,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"kind":{"Impl":{"id":481}},"from":{"krate":2,"index":9851},"to":{"krate":0,"index":5282}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740311,"byte_end":10740320,"line_start":130,"line_end":130,"column_start":42,"column_end":51},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5598},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740500,"byte_end":10740509,"line_start":136,"line_end":136,"column_start":47,"column_end":56},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5598},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740702,"byte_end":10740711,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10740873,"byte_end":10740882,"line_start":150,"line_end":150,"column_start":32,"column_end":41},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5604},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10742088,"byte_end":10742096,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":5567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10744629,"byte_end":10744637,"line_start":287,"line_end":287,"column_start":19,"column_end":27},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5567},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10744975,"byte_end":10744983,"line_start":300,"line_end":300,"column_start":18,"column_end":26},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":5567},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10745353,"byte_end":10745359,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10747943,"byte_end":10747949,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":5574},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":10748139,"byte_end":10748142,"line_start":410,"line_end":410,"column_start":24,"column_end":27},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5580},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":10760367,"byte_end":10760375,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5781},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10771297,"byte_end":10771305,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":5786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10779298,"byte_end":10779306,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5786},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10779445,"byte_end":10779453,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":5786},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10780418,"byte_end":10780426,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":5786},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10780507,"byte_end":10780515,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5786},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10781382,"byte_end":10781390,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10782275,"byte_end":10782281,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":10782844,"byte_end":10782847,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"kind":{"Impl":{"id":500}},"from":{"krate":5,"index":4535},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10786354,"byte_end":10786362,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":5725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788138,"byte_end":10788146,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":5725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788354,"byte_end":10788362,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":5725},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788683,"byte_end":10788698,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6632},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10788999,"byte_end":10789004,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":5753},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10789622,"byte_end":10789623,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":5766},"to":{"krate":0,"index":5764}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10789808,"byte_end":10789819,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":5798},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10789963,"byte_end":10789974,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":5798},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":10790121,"byte_end":10790132,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":5798},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\clock.rs","byte_start":10793699,"byte_end":10793704,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10818135,"byte_end":10818144,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":5836},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10818228,"byte_end":10818237,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":5836},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10818383,"byte_end":10818392,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":5836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10825410,"byte_end":10825420,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6201},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10825445,"byte_end":10825455,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6201},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10826896,"byte_end":10826907,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10830430,"byte_end":10830447,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":5870},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10830748,"byte_end":10830765,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":5870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10831004,"byte_end":10831015,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6212},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10831040,"byte_end":10831051,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6212},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10831090,"byte_end":10831101,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6212},"to":{"krate":0,"index":632}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10831619,"byte_end":10831629,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10834505,"byte_end":10834516,"line_start":556,"line_end":556,"column_start":6,"column_end":17},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":10836907,"byte_end":10836917,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6201},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":10837422,"byte_end":10837428,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":10837999,"byte_end":10838005,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":10840041,"byte_end":10840047,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6228},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":10852645,"byte_end":10852650,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":5933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":10858718,"byte_end":10858723,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":5933},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":10841668,"byte_end":10841673,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10864513,"byte_end":10864518,"line_start":159,"line_end":159,"column_start":6,"column_end":11},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":10866520,"byte_end":10866525,"line_start":225,"line_end":225,"column_start":17,"column_end":22},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6604},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10803118,"byte_end":10803127,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10804534,"byte_end":10804540,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10807546,"byte_end":10807552,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10812246,"byte_end":10812252,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6248},"to":{"krate":0,"index":582}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10812983,"byte_end":10812989,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6248},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10813115,"byte_end":10813120,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":10813428,"byte_end":10813433,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6028},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868676,"byte_end":10868681,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6263},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10868922,"byte_end":10868927,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869827,"byte_end":10869832,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6263},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10869859,"byte_end":10869864,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6263},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10870326,"byte_end":10870333,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10870421,"byte_end":10870428,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6292},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10870572,"byte_end":10870579,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6292},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":10870616,"byte_end":10870621,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":547}},"from":{"krate":1,"index":2785},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10872163,"byte_end":10872170,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10875920,"byte_end":10875927,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6306},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876056,"byte_end":10876063,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"kind":{"Impl":{"id":550}},"from":{"krate":1,"index":8144},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876178,"byte_end":10876185,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6306},"to":{"krate":2,"index":2208}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876350,"byte_end":10876357,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6306},"to":{"krate":2,"index":2239}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876462,"byte_end":10876469,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6306},"to":{"krate":2,"index":2213}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876610,"byte_end":10876617,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6306},"to":{"krate":2,"index":2213}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876778,"byte_end":10876785,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6306},"to":{"krate":2,"index":2243}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":10876892,"byte_end":10876899,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6306},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":10881077,"byte_end":10881085,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10885854,"byte_end":10885861,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":10886399,"byte_end":10886406,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6566},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":10887051,"byte_end":10887055,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":10888483,"byte_end":10888487,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6477},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10892430,"byte_end":10892437,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2131},"to":{"krate":0,"index":6369}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893637,"byte_end":10893641,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6377},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893678,"byte_end":10893682,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6377},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893719,"byte_end":10893729,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6384},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893766,"byte_end":10893776,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6384},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893813,"byte_end":10893816,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6371},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10893853,"byte_end":10893856,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6371},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10894472,"byte_end":10894476,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10900082,"byte_end":10900086,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6359},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10900225,"byte_end":10900234,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10900801,"byte_end":10900810,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6365},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10900968,"byte_end":10900971,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6371},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10901233,"byte_end":10901236,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6371},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10901503,"byte_end":10901506,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6371},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10901627,"byte_end":10901631,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10904138,"byte_end":10904142,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10904486,"byte_end":10904490,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6377},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10904838,"byte_end":10904842,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10905204,"byte_end":10905214,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10906151,"byte_end":10906161,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6384},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10906304,"byte_end":10906309,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":6388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10907192,"byte_end":10907196,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10907756,"byte_end":10907761,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":10908087,"byte_end":10908094,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":6487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136255,"byte_end":136265,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":622},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":136335,"byte_end":136345,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":622},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":137645,"byte_end":137653,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":137690,"byte_end":137698,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":137749,"byte_end":137759,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":137994,"byte_end":138004,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140853,"byte_end":140863,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":622},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":141220,"byte_end":141230,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":141417,"byte_end":141427,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":622},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142599,"byte_end":142609,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142978,"byte_end":142989,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":6502},"to":{"krate":2,"index":5695}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143663,"byte_end":143671,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143870,"byte_end":143878,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":10915374,"byte_end":10915378,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2143},"to":{"krate":0,"index":6528}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":10915381,"byte_end":10915385,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2155},"to":{"krate":0,"index":6528}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":10915696,"byte_end":10915704,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":6552},"to":{"krate":2,"index":2343}}]}