{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12","program":"C:\\Users\\gabri\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_channel","--edition=2018","C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=41cdd8e297c7d50c","-C","extra-filename=-41cdd8e297c7d50c","--out-dir","c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libfutures_core-a40f239f97221124.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\gabri\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libfutures_channel-41cdd8e297c7d50c.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[4082039247007378112,15439871577712843125]},"crate_root":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src","external_crates":[{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7607668859873757532,1781785219377684392]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","num":2,"id":{"name":"core","disambiguator":[13611023294341355437,10043691270023661894]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[101447838822452173,8618322888261503379]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13475896778791491548,12248248351844131012]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4016777027723060150,6575819384461205726]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2651865965395105447,1277636433429132291]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6625204696738865430,3777009149181587391]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2466389407038385562,16922006968362962921]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7691805749014262489,8411562063720114408]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10977525908131958733,15669095950081001892]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14600121526287085947,8078689161172856885]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[15875267039736385556,9614836444850963760]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","num":13,"id":{"name":"futures_core","disambiguator":[1671919372578227713,2896883413225368489]}}],"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":256}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ other. This module contains two basic abstractions for doing so:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   library.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":687,"byte_end":775,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":943,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":532},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":350},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":353},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":364},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":90},{"krate":0,"index":379},{"krate":0,"index":390},{"krate":0,"index":388},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":392},{"krate":0,"index":407},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":410},{"krate":0,"index":423},{"krate":0,"index":421},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":425},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":451},{"krate":0,"index":449},{"krate":0,"index":448},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":140},{"krate":0,"index":155},{"krate":0,"index":170},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":1569,"byte_end":1592,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8749928,"byte_end":8749997,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8749998,"byte_end":8750021,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750022,"byte_end":8750025,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750026,"byte_end":8750096,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750097,"byte_end":8750176,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750177,"byte_end":8750252,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750253,"byte_end":8750325,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750326,"byte_end":8750408,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750409,"byte_end":8750486,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750487,"byte_end":8750564,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750565,"byte_end":8750610,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750611,"byte_end":8750614,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750615,"byte_end":8750691,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750692,"byte_end":8750695,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750696,"byte_end":8750715,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750716,"byte_end":8750719,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750720,"byte_end":8750786,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750787,"byte_end":8750867,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750868,"byte_end":8750925,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750926,"byte_end":8750960,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750961,"byte_end":8750964,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8750965,"byte_end":8751035,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751036,"byte_end":8751115,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751116,"byte_end":8751139,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751140,"byte_end":8751143,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751144,"byte_end":8751164,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751165,"byte_end":8751168,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751169,"byte_end":8751235,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751236,"byte_end":8751312,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751313,"byte_end":8751393,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751394,"byte_end":8751474,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751475,"byte_end":8751547,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751548,"byte_end":8751607,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751608,"byte_end":8751611,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751612,"byte_end":8751646,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751647,"byte_end":8751685,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751686,"byte_end":8751745,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751746,"byte_end":8751774,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8751775,"byte_end":8751845,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755219,"byte_end":8755225,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755071,"byte_end":8755122,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755123,"byte_end":8755126,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755127,"byte_end":8755190,"line_start":123,"line_end":123,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755417,"byte_end":8755432,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755262,"byte_end":8755316,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755317,"byte_end":8755320,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755321,"byte_end":8755388,"line_start":129,"line_end":129,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755704,"byte_end":8755712,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":369}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755559,"byte_end":8755607,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755608,"byte_end":8755611,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755612,"byte_end":8755675,"line_start":138,"line_end":138,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755914,"byte_end":8755931,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755762,"byte_end":8755813,"line_start":144,"line_end":144,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755814,"byte_end":8755817,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755818,"byte_end":8755885,"line_start":146,"line_end":146,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756208,"byte_end":8756217,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":380}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756098,"byte_end":8756157,"line_start":155,"line_end":155,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756356,"byte_end":8756368,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756248,"byte_end":8756312,"line_start":161,"line_end":161,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756578,"byte_end":8756590,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756500,"byte_end":8756566,"line_start":174,"line_end":174,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757040,"byte_end":8757047,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756957,"byte_end":8757028,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757264,"byte_end":8757279,"line_start":201,"line_end":201,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757177,"byte_end":8757252,"line_start":200,"line_end":200,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758104,"byte_end":8758111,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758021,"byte_end":8758092,"line_start":230,"line_end":230,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758254,"byte_end":8758269,"line_start":236,"line_end":236,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758167,"byte_end":8758242,"line_start":235,"line_end":235,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758410,"byte_end":8758420,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758333,"byte_end":8758398,"line_start":240,"line_end":240,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758528,"byte_end":8758543,"line_start":246,"line_end":246,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"pub fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758462,"byte_end":8758516,"line_start":245,"line_end":245,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761948,"byte_end":8761955,"line_start":363,"line_end":363,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761322,"byte_end":8761402,"line_start":352,"line_end":352,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761403,"byte_end":8761406,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761407,"byte_end":8761486,"line_start":354,"line_end":354,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761487,"byte_end":8761564,"line_start":355,"line_end":355,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761565,"byte_end":8761636,"line_start":356,"line_end":356,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761637,"byte_end":8761710,"line_start":357,"line_end":357,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761711,"byte_end":8761781,"line_start":358,"line_end":358,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761782,"byte_end":8761785,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761786,"byte_end":8761840,"line_start":360,"line_end":360,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761841,"byte_end":8761928,"line_start":361,"line_end":361,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761929,"byte_end":8761940,"line_start":362,"line_end":362,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8763219,"byte_end":8763228,"line_start":400,"line_end":400,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8762707,"byte_end":8762783,"line_start":390,"line_end":390,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8762784,"byte_end":8762794,"line_start":391,"line_end":391,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8762795,"byte_end":8762798,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8762799,"byte_end":8762879,"line_start":393,"line_end":393,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8762880,"byte_end":8762959,"line_start":394,"line_end":394,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8762960,"byte_end":8762973,"line_start":395,"line_end":395,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8762974,"byte_end":8762977,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8762978,"byte_end":8763057,"line_start":397,"line_end":397,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8763058,"byte_end":8763134,"line_start":398,"line_end":398,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8763135,"byte_end":8763211,"line_start":399,"line_end":399,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8773998,"byte_end":8774006,"line_start":722,"line_end":722,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8773885,"byte_end":8773955,"line_start":720,"line_end":720,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8773960,"byte_end":8773986,"line_start":721,"line_end":721,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774567,"byte_end":8774577,"line_start":740,"line_end":740,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774351,"byte_end":8774385,"line_start":735,"line_end":735,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774390,"byte_end":8774393,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774398,"byte_end":8774443,"line_start":737,"line_end":737,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774448,"byte_end":8774519,"line_start":738,"line_end":738,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774524,"byte_end":8774555,"line_start":739,"line_end":739,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775205,"byte_end":8775215,"line_start":757,"line_end":757,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774694,"byte_end":8774768,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774773,"byte_end":8774811,"line_start":746,"line_end":746,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774816,"byte_end":8774819,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774824,"byte_end":8774842,"line_start":748,"line_end":748,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774847,"byte_end":8774850,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774855,"byte_end":8774879,"line_start":750,"line_end":750,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774884,"byte_end":8774887,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774892,"byte_end":8774951,"line_start":752,"line_end":752,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8774956,"byte_end":8775005,"line_start":753,"line_end":753,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775010,"byte_end":8775086,"line_start":754,"line_end":754,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775091,"byte_end":8775119,"line_start":755,"line_end":755,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775124,"byte_end":8775193,"line_start":756,"line_end":756,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775540,"byte_end":8775549,"line_start":768,"line_end":768,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775459,"byte_end":8775528,"line_start":767,"line_end":767,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775739,"byte_end":8775752,"line_start":773,"line_end":773,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"pub fn close_channel(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775653,"byte_end":8775727,"line_start":772,"line_end":772,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775968,"byte_end":8775978,"line_start":780,"line_end":780,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8775865,"byte_end":8775956,"line_start":779,"line_end":779,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776096,"byte_end":8776109,"line_start":785,"line_end":785,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776026,"byte_end":8776084,"line_start":784,"line_end":784,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776357,"byte_end":8776372,"line_start":793,"line_end":793,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776292,"byte_end":8776345,"line_start":792,"line_end":792,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776640,"byte_end":8776653,"line_start":801,"line_end":801,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776580,"byte_end":8776628,"line_start":800,"line_end":800,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776934,"byte_end":8776944,"line_start":811,"line_end":811,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"pub fn poll_ready(&Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776867,"byte_end":8776922,"line_start":810,"line_end":810,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8777265,"byte_end":8777274,"line_start":822,"line_end":822,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8777184,"byte_end":8777253,"line_start":821,"line_end":821,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8777466,"byte_end":8777479,"line_start":827,"line_end":827,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"pub fn close_channel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8777380,"byte_end":8777454,"line_start":826,"line_end":826,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8777687,"byte_end":8777697,"line_start":834,"line_end":834,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8777584,"byte_end":8777675,"line_start":833,"line_end":833,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778414,"byte_end":8778424,"line_start":859,"line_end":859,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778219,"byte_end":8778253,"line_start":855,"line_end":855,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778258,"byte_end":8778261,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778266,"byte_end":8778339,"line_start":857,"line_end":857,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778344,"byte_end":8778402,"line_start":858,"line_end":858,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778789,"byte_end":8778803,"line_start":869,"line_end":869,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778543,"byte_end":8778582,"line_start":864,"line_end":864,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778587,"byte_end":8778590,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778595,"byte_end":8778670,"line_start":866,"line_end":866,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778675,"byte_end":8778751,"line_start":867,"line_end":867,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778756,"byte_end":8778777,"line_start":868,"line_end":868,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778962,"byte_end":8778975,"line_start":874,"line_end":874,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8778892,"byte_end":8778950,"line_start":873,"line_end":873,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779223,"byte_end":8779238,"line_start":882,"line_end":882,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779158,"byte_end":8779211,"line_start":881,"line_end":881,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779515,"byte_end":8779528,"line_start":890,"line_end":890,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779455,"byte_end":8779503,"line_start":889,"line_end":889,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783139,"byte_end":8783144,"line_start":1005,"line_end":1005,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8782902,"byte_end":8782966,"line_start":1001,"line_end":1001,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8782971,"byte_end":8782974,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8782979,"byte_end":8783054,"line_start":1003,"line_end":1003,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783059,"byte_end":8783127,"line_start":1004,"line_end":1004,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783927,"byte_end":8783935,"line_start":1025,"line_end":1025,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783539,"byte_end":8783614,"line_start":1017,"line_end":1017,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783619,"byte_end":8783622,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783627,"byte_end":8783699,"line_start":1019,"line_end":1019,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783704,"byte_end":8783778,"line_start":1020,"line_end":1020,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783783,"byte_end":8783803,"line_start":1021,"line_end":1021,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783808,"byte_end":8783811,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783816,"byte_end":8783890,"line_start":1023,"line_end":1023,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8783895,"byte_end":8783915,"line_start":1024,"line_end":1024,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8787968,"byte_end":8787973,"line_start":1141,"line_end":1141,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8787731,"byte_end":8787795,"line_start":1137,"line_end":1137,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8787800,"byte_end":8787803,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8787808,"byte_end":8787883,"line_start":1139,"line_end":1139,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8787888,"byte_end":8787956,"line_start":1140,"line_end":1140,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8788475,"byte_end":8788483,"line_start":1155,"line_end":1155,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8788087,"byte_end":8788162,"line_start":1147,"line_end":1147,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8788167,"byte_end":8788170,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8788175,"byte_end":8788247,"line_start":1149,"line_end":1149,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8788252,"byte_end":8788326,"line_start":1150,"line_end":1150,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8788331,"byte_end":8788351,"line_start":1151,"line_end":1151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8788356,"byte_end":8788359,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8788364,"byte_end":8788438,"line_start":1153,"line_end":1153,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8788443,"byte_end":8788463,"line_start":1154,"line_end":1154,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":558},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":470},{"krate":0,"index":476},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":287},{"krate":0,"index":294},{"krate":0,"index":479},{"krate":0,"index":483},{"krate":0,"index":297},{"krate":0,"index":487},{"krate":0,"index":498},{"krate":0,"index":497},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":489},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":315}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":1615,"byte_end":1640,"line_start":42,"line_end":42,"column_start":5,"column_end":30}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8799862,"byte_end":8799932,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8799933,"byte_end":8799936,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8799937,"byte_end":8799992,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800486,"byte_end":8800494,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":460}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800251,"byte_end":8800327,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800328,"byte_end":8800331,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800332,"byte_end":8800389,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800390,"byte_end":8800457,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800679,"byte_end":8800685,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":466}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800529,"byte_end":8800588,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800589,"byte_end":8800592,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800593,"byte_end":8800650,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803789,"byte_end":8803796,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8802590,"byte_end":8802678,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8802679,"byte_end":8802682,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8802683,"byte_end":8802758,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8802759,"byte_end":8802762,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8802763,"byte_end":8802843,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8802844,"byte_end":8802922,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8802923,"byte_end":8803000,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803001,"byte_end":8803079,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803080,"byte_end":8803128,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803129,"byte_end":8803132,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803133,"byte_end":8803193,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803194,"byte_end":8803197,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803198,"byte_end":8803212,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803213,"byte_end":8803216,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803217,"byte_end":8803224,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803225,"byte_end":8803259,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803260,"byte_end":8803298,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803299,"byte_end":8803302,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803303,"byte_end":8803358,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803359,"byte_end":8803362,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803363,"byte_end":8803385,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803386,"byte_end":8803430,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803431,"byte_end":8803482,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803483,"byte_end":8803531,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803532,"byte_end":8803564,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803565,"byte_end":8803572,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803573,"byte_end":8803576,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803577,"byte_end":8803623,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803624,"byte_end":8803627,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803628,"byte_end":8803667,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803668,"byte_end":8803713,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803714,"byte_end":8803765,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803766,"byte_end":8803773,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8803774,"byte_end":8803781,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813059,"byte_end":8813063,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812566,"byte_end":8812618,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812623,"byte_end":8812626,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812631,"byte_end":8812703,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812708,"byte_end":8812780,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812785,"byte_end":8812817,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812822,"byte_end":8812825,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812830,"byte_end":8812902,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812907,"byte_end":8812977,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812982,"byte_end":8813047,"line_start":344,"line_end":344,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813715,"byte_end":8813728,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"pub fn poll_canceled(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813133,"byte_end":8813194,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813199,"byte_end":8813243,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813248,"byte_end":8813251,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813256,"byte_end":8813275,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813280,"byte_end":8813283,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813288,"byte_end":8813358,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813363,"byte_end":8813437,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813442,"byte_end":8813445,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813450,"byte_end":8813518,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813523,"byte_end":8813596,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813601,"byte_end":8813673,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813678,"byte_end":8813703,"line_start":360,"line_end":360,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814092,"byte_end":8814104,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"pub fn cancellation(&mut Self) -> Cancellation<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813824,"byte_end":8813893,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813898,"byte_end":8813942,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813947,"byte_end":8813950,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8813955,"byte_end":8814026,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814031,"byte_end":8814080,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814528,"byte_end":8814539,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814189,"byte_end":8814254,"line_start":374,"line_end":374,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814259,"byte_end":8814280,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814285,"byte_end":8814288,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814293,"byte_end":8814368,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814373,"byte_end":8814444,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814449,"byte_end":8814516,"line_start":379,"line_end":379,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814763,"byte_end":8814778,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814601,"byte_end":8814694,"line_start":384,"line_end":384,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814699,"byte_end":8814751,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815239,"byte_end":8815251,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":482}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814971,"byte_end":8815046,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815047,"byte_end":8815050,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815051,"byte_end":8815142,"line_start":399,"line_end":399,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815143,"byte_end":8815210,"line_start":400,"line_end":400,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815641,"byte_end":8815649,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815478,"byte_end":8815549,"line_start":414,"line_end":414,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815550,"byte_end":8815584,"line_start":415,"line_end":415,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816257,"byte_end":8816262,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815885,"byte_end":8815958,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815963,"byte_end":8815978,"line_start":430,"line_end":430,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815983,"byte_end":8815986,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815991,"byte_end":8816058,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816063,"byte_end":8816125,"line_start":433,"line_end":433,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816130,"byte_end":8816203,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816208,"byte_end":8816245,"line_start":435,"line_end":435,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816693,"byte_end":8816701,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816317,"byte_end":8816384,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816389,"byte_end":8816392,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816397,"byte_end":8816464,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816469,"byte_end":8816472,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816477,"byte_end":8816550,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816555,"byte_end":8816621,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816626,"byte_end":8816629,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816634,"byte_end":8816681,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8747939,"byte_end":8747943,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8747980,"byte_end":8747984,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8748000,"byte_end":8748004,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8748842,"byte_end":8748849,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8749102,"byte_end":8749109,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8749472,"byte_end":8749479,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8796399,"byte_end":8796404,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8796442,"byte_end":8796447,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8796464,"byte_end":8796468,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8796661,"byte_end":8796666,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8799563,"byte_end":8799568,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755000,"byte_end":8755020,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755045,"byte_end":8755063,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755534,"byte_end":8755549,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756073,"byte_end":8756090,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756633,"byte_end":8756642,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756922,"byte_end":8756931,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756941,"byte_end":8756950,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757438,"byte_end":8757450,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757657,"byte_end":8757669,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757971,"byte_end":8757983,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757999,"byte_end":8758011,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758611,"byte_end":8758623,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758780,"byte_end":8758792,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758941,"byte_end":8758953,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761049,"byte_end":8761059,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8763728,"byte_end":8763748,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8766606,"byte_end":8766624,"line_start":512,"line_end":512,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8773869,"byte_end":8773875,"line_start":719,"line_end":719,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776842,"byte_end":8776857,"line_start":809,"line_end":809,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779727,"byte_end":8779733,"line_start":898,"line_end":898,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779825,"byte_end":8779840,"line_start":904,"line_end":904,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779932,"byte_end":8779952,"line_start":910,"line_end":910,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8781053,"byte_end":8781071,"line_start":940,"line_end":940,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8782322,"byte_end":8782342,"line_start":972,"line_end":972,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8782587,"byte_end":8782605,"line_start":983,"line_end":983,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8782884,"byte_end":8782892,"line_start":1000,"line_end":1000,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8786387,"byte_end":8786395,"line_start":1089,"line_end":1089,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8786427,"byte_end":8786435,"line_start":1091,"line_end":1091,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8786536,"byte_end":8786544,"line_start":1097,"line_end":1097,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8787424,"byte_end":8787432,"line_start":1124,"line_end":1124,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8787704,"byte_end":8787721,"line_start":1136,"line_end":1136,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8790420,"byte_end":8790437,"line_start":1205,"line_end":1205,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8790538,"byte_end":8790555,"line_start":1211,"line_end":1211,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8791431,"byte_end":8791448,"line_start":1238,"line_end":1238,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8791760,"byte_end":8791774,"line_start":1256,"line_end":1256,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792057,"byte_end":8792069,"line_start":1268,"line_end":1268,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792595,"byte_end":8792609,"line_start":1286,"line_end":1286,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792646,"byte_end":8792660,"line_start":1287,"line_end":1287,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792698,"byte_end":8792710,"line_start":1289,"line_end":1289,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792747,"byte_end":8792759,"line_start":1290,"line_end":1290,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800793,"byte_end":8800801,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800826,"byte_end":8800832,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8804021,"byte_end":8804026,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812550,"byte_end":8812556,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814896,"byte_end":8814902,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815313,"byte_end":8815325,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815674,"byte_end":8815682,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815846,"byte_end":8815854,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815867,"byte_end":8815875,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816804,"byte_end":8816812,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8817029,"byte_end":8817037,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8817378,"byte_end":8817386,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":1605,"byte_end":1609,"line_start":41,"line_end":41,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lib.rs","byte_start":1653,"byte_end":1660,"line_start":43,"line_end":43,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":256}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8747939,"byte_end":8747943,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8747980,"byte_end":8747984,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8748000,"byte_end":8748004,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8748842,"byte_end":8748849,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8749102,"byte_end":8749109,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\lock.rs","byte_start":8749472,"byte_end":8749479,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8796399,"byte_end":8796404,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8796442,"byte_end":8796447,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8796464,"byte_end":8796468,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8796661,"byte_end":8796666,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\queue.rs","byte_start":8799563,"byte_end":8799568,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755000,"byte_end":8755020,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":339},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755045,"byte_end":8755063,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755490,"byte_end":8755494,"line_start":133,"line_end":133,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2143},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755497,"byte_end":8755501,"line_start":133,"line_end":133,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2155},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755504,"byte_end":8755509,"line_start":133,"line_end":133,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1832},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8755534,"byte_end":8755549,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":360},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756073,"byte_end":8756090,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756633,"byte_end":8756642,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":379},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756922,"byte_end":8756931,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":379},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8756941,"byte_end":8756950,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757438,"byte_end":8757450,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757657,"byte_end":8757669,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757971,"byte_end":8757983,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8757999,"byte_end":8758011,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758611,"byte_end":8758623,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758780,"byte_end":8758792,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8758941,"byte_end":8758953,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":92},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8761049,"byte_end":8761059,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8763728,"byte_end":8763748,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8766606,"byte_end":8766624,"line_start":512,"line_end":512,"column_start":9,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8773869,"byte_end":8773875,"line_start":719,"line_end":719,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8776842,"byte_end":8776857,"line_start":809,"line_end":809,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779727,"byte_end":8779733,"line_start":898,"line_end":898,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779825,"byte_end":8779840,"line_start":904,"line_end":904,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8779932,"byte_end":8779952,"line_start":910,"line_end":910,"column_start":19,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":339},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8781053,"byte_end":8781071,"line_start":940,"line_end":940,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8782322,"byte_end":8782342,"line_start":972,"line_end":972,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":339},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8782587,"byte_end":8782605,"line_start":983,"line_end":983,"column_start":18,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8782884,"byte_end":8782892,"line_start":1000,"line_end":1000,"column_start":9,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8786387,"byte_end":8786395,"line_start":1089,"line_end":1089,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8786427,"byte_end":8786435,"line_start":1091,"line_end":1091,"column_start":25,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":367},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8786536,"byte_end":8786544,"line_start":1097,"line_end":1097,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":367},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8787424,"byte_end":8787432,"line_start":1124,"line_end":1124,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8787704,"byte_end":8787721,"line_start":1136,"line_end":1136,"column_start":9,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8790420,"byte_end":8790437,"line_start":1205,"line_end":1205,"column_start":25,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":373},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8790538,"byte_end":8790555,"line_start":1211,"line_end":1211,"column_start":20,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":373},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8791431,"byte_end":8791448,"line_start":1238,"line_end":1238,"column_start":18,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8791760,"byte_end":8791774,"line_start":1256,"line_end":1256,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792057,"byte_end":8792069,"line_start":1268,"line_end":1268,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792595,"byte_end":8792609,"line_start":1286,"line_end":1286,"column_start":31,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792646,"byte_end":8792660,"line_start":1287,"line_end":1287,"column_start":31,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792698,"byte_end":8792710,"line_start":1289,"line_end":1289,"column_start":31,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":434},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\mpsc\\mod.rs","byte_start":8792747,"byte_end":8792759,"line_start":1290,"line_end":1290,"column_start":31,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":434},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800793,"byte_end":8800801,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":458},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8800826,"byte_end":8800832,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":464},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8804021,"byte_end":8804026,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8812550,"byte_end":8812556,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8814896,"byte_end":8814902,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":464},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815313,"byte_end":8815325,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815674,"byte_end":8815682,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815846,"byte_end":8815854,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":487},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8815867,"byte_end":8815875,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8816804,"byte_end":8816812,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":458},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8817029,"byte_end":8817037,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":458},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.12\\src\\oneshot.rs","byte_start":8817378,"byte_end":8817386,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":458},"to":{"krate":2,"index":2367}}]}