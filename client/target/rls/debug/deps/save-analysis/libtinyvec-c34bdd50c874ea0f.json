{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1","program":"C:\\Users\\gabri\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tinyvec","--edition=2018","C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"tinyvec_macros\"","-C","metadata=c34bdd50c874ea0f","-C","extra-filename=-c34bdd50c874ea0f","--out-dir","c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","--extern","tinyvec_macros=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libtinyvec_macros-8b42f6987ceb0d51.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\gabri\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libtinyvec-c34bdd50c874ea0f.rmeta"},"prelude":{"crate_id":{"name":"tinyvec","disambiguator":[15793117268302328188,4018498974907193365]},"crate_root":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src","external_crates":[{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[13611023294341355437,10043691270023661894]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[101447838822452173,8618322888261503379]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13475896778791491548,12248248351844131012]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[4016777027723060150,6575819384461205726]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","num":5,"id":{"name":"tinyvec_macros","disambiguator":[1349073208440602019,7200795570080412791]}}],"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":0,"byte_end":4144,"line_start":1,"line_end":111,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":3776,"byte_end":3777,"line_start":91,"line_end":91,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"Array","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":3812,"byte_end":3813,"line_start":94,"line_end":94,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"ArrayVec, ArrayVecIterator","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":3860,"byte_end":3861,"line_start":97,"line_end":97,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"ArrayVecDrain","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":3896,"byte_end":3897,"line_start":100,"line_end":100,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":3989,"byte_end":3990,"line_start":105,"line_end":105,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":0,"byte_end":4144,"line_start":1,"line_end":111,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":1130},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":1134},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":1138},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":1156},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":1081},{"krate":0,"index":1082}],"decl_id":null,"docs":" `tinyvec` provides 100% safe vec-like data structures.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":11,"byte_end":34,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"warn(clippy :: missing_inline_in_public_items)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":264,"byte_end":312,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"warn(clippy :: must_use_candidate)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":313,"byte_end":349,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":350,"byte_end":372,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ `tinyvec` provides 100% safe vec-like data structures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":374,"byte_end":432,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":433,"byte_end":436,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Provided Types","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":437,"byte_end":458,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/ With no features enabled, this crate provides the [`ArrayVec`] type, which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":459,"byte_end":537,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ is an array-backed storage. You can push values into the array and pop them","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":538,"byte_end":617,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ out of the array and so on. If the array is made to overflow it will panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":618,"byte_end":697,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":698,"byte_end":701,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Similarly, there is also a [`SliceVec`] type available, which is a vec-like","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":702,"byte_end":781,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ that's backed by a slice you provide. You can add and remove elements, but","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":782,"byte_end":860,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ if you overflow the slice it will panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":861,"byte_end":905,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":906,"byte_end":909,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ With the `alloc` feature enabled, the crate also has a [`TinyVec`] type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":910,"byte_end":986,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ This is an enum type which is either an `Inline(ArrayVec)` or a `Heap(Vec)`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":987,"byte_end":1067,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ If a `TinyVec` is `Inline` and would overflow it automatically transitions","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1068,"byte_end":1146,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ itself into being `Heap` mode instead of a panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1147,"byte_end":1200,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1201,"byte_end":1204,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ All of this is done with no `unsafe` code within the crate. Technically the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1205,"byte_end":1284,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ `Vec` type from the standard library uses `unsafe` internally, but *this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1285,"byte_end":1361,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ crate* introduces no new `unsafe` code into your project.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1362,"byte_end":1423,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1424,"byte_end":1427,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The limitation is that the element type of a vec from this crate must","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1428,"byte_end":1501,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ support the [`Default`] trait. This means that this crate isn't suitable for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1502,"byte_end":1582,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ all situations, but a very surprising number of types do support `Default`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1583,"byte_end":1662,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1663,"byte_end":1666,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Other Features","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1667,"byte_end":1688,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ * `grab_spare_slice` lets you get access to the \"inactive\" portions of an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1689,"byte_end":1766,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/   ArrayVec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1767,"byte_end":1782,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/ * `rustc_1_40` makes the crate assume a minimum rust version of `1.40.0`,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1783,"byte_end":1860,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/   which allows some better internal optimizations.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1861,"byte_end":1915,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ * `serde` provides a `Serialize` and `Deserialize` implementation for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1916,"byte_end":1989,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/   [`TinyVec`] and [`ArrayVec`] types, provided the inner item also has an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":1990,"byte_end":2067,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/   implementation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2068,"byte_end":2089,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2090,"byte_end":2093,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## API","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2094,"byte_end":2104,"line_start":49,"line_end":49,"column_start":1,"column_end":11}},{"value":"/ The general goal of the crate is that, as much as possible, the vecs here","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2105,"byte_end":2182,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ should be a \"drop in\" replacement for the standard library `Vec` type. We","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2183,"byte_end":2260,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ strive to provide all of the `Vec` methods with the same names and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2261,"byte_end":2331,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/ signatures. The exception is that the element type of some methods will have","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2332,"byte_end":2412,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ a `Default` bound that's not part of the normal `Vec` type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2413,"byte_end":2476,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2477,"byte_end":2480,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The vecs here also have a few additional methods that aren't on the `Vec`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2481,"byte_end":2558,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ type. In this case, the names tend to be fairly long so that they are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2559,"byte_end":2632,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ unlikely to clash with any future methods added to `Vec`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2633,"byte_end":2694,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2695,"byte_end":2698,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ## Stability","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2699,"byte_end":2715,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/ * The `1.0` series of the crate works with Rustc `1.34.0` or later, though","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2716,"byte_end":2794,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/   you still need to have Rustc `1.36.0` to use the `alloc` feature.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2795,"byte_end":2866,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ * The `2.0` version of the crate is planned for some time after the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2867,"byte_end":2938,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/   `min_const_generics` stuff becomes stable. This would greatly raise the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":2939,"byte_end":3016,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/   minimum rust version and also allow us to totally eliminate the need for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":3017,"byte_end":3095,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/   the `Array` trait. The actual usage of the crate is not expected to break","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":3096,"byte_end":3175,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/   significantly in this transition.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\lib.rs","byte_start":3176,"byte_end":3215,"line_start":67,"line_end":67,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5049,"byte_end":5054,"line_start":19,"line_end":19,"column_start":11,"column_end":16},"name":"Array","qualname":"::array::Array","value":"Array","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" A trait for types that are an array.","sig":null,"attributes":[{"value":"/ A trait for types that are an array.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4257,"byte_end":4297,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4298,"byte_end":4301,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An \"array\", for our purposes, has the following properties:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4302,"byte_end":4365,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"/ * Owns some number of elements.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4366,"byte_end":4401,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/ * The element type can be generic, but must implement [`Default`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4402,"byte_end":4472,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ * The capacity is fixed at compile time, based on the implementing type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4473,"byte_end":4549,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ * You can get a shared or mutable slice to the elements.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4550,"byte_end":4610,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4611,"byte_end":4614,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ You are generally **not** expected to need to implement this yourself. It is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4615,"byte_end":4695,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ already implemented for all the major array lengths (`0..=32` and the powers","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4696,"byte_end":4776,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ of 2 up to 4,096).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4777,"byte_end":4799,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4800,"byte_end":4803,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ **Additional lengths can easily be added upon request.**","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4804,"byte_end":4864,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4865,"byte_end":4868,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Safety Reminder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4869,"byte_end":4891,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4892,"byte_end":4895,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Just a reminder: this trait is 100% safe, which means that `unsafe` code","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4896,"byte_end":4972,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ **must not** rely on an instance of this trait being correct.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":4973,"byte_end":5038,"line_start":18,"line_end":18,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5106,"byte_end":5110,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"Item","qualname":"::array::Array::Item","value":"type Item: Default;","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" The type of the items in the thing.\n","sig":null,"attributes":[{"value":"/ The type of the items in the thing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5059,"byte_end":5098,"line_start":20,"line_end":20,"column_start":3,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5170,"byte_end":5178,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"name":"CAPACITY","qualname":"::array::Array::CAPACITY","value":"usize","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" The number of slots in the thing.\n","sig":null,"attributes":[{"value":"/ The number of slots in the thing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5124,"byte_end":5161,"line_start":23,"line_end":23,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5350,"byte_end":5358,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"name":"as_slice","qualname":"::array::Array::as_slice","value":"pub fn as_slice(&Self) -> &[Self::Item]","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Gives a shared slice over the whole thing.","sig":null,"attributes":[{"value":"/ Gives a shared slice over the whole thing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5190,"byte_end":5236,"line_start":26,"line_end":26,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5239,"byte_end":5242,"line_start":27,"line_end":27,"column_start":3,"column_end":6}},{"value":"/ A correct implementation will return a slice with a length equal to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5245,"byte_end":5320,"line_start":28,"line_end":28,"column_start":3,"column_end":78}},{"value":"/ `CAPACITY` value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5323,"byte_end":5344,"line_start":29,"line_end":29,"column_start":3,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5547,"byte_end":5559,"line_start":36,"line_end":36,"column_start":6,"column_end":18},"name":"as_slice_mut","qualname":"::array::Array::as_slice_mut","value":"pub fn as_slice_mut(&mut Self) -> &mut [Self::Item]","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Gives a unique slice over the whole thing.","sig":null,"attributes":[{"value":"/ Gives a unique slice over the whole thing.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5387,"byte_end":5433,"line_start":32,"line_end":32,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5436,"byte_end":5439,"line_start":33,"line_end":33,"column_start":3,"column_end":6}},{"value":"/ A correct implementation will return a slice with a length equal to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5442,"byte_end":5517,"line_start":34,"line_end":34,"column_start":3,"column_end":78}},{"value":"/ `CAPACITY` value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5520,"byte_end":5541,"line_start":35,"line_end":35,"column_start":3,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5759,"byte_end":5766,"line_start":41,"line_end":41,"column_start":6,"column_end":13},"name":"default","qualname":"::array::Array::default","value":"pub fn default() -> Self","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Create a default-initialized instance of ourself, similar to the\n [`Default`] trait, but implemented for the same range of sizes as\n [`Array`].\n","sig":null,"attributes":[{"value":"/ Create a default-initialized instance of ourself, similar to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5596,"byte_end":5664,"line_start":38,"line_end":38,"column_start":3,"column_end":71}},{"value":"/ [`Default`] trait, but implemented for the same range of sizes as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5667,"byte_end":5736,"line_start":39,"line_end":39,"column_start":3,"column_end":72}},{"value":"/ [`Array`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\array.rs","byte_start":5739,"byte_end":5753,"line_start":40,"line_end":40,"column_start":3,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205992,"byte_end":206000,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"ArrayVec","qualname":"::arrayvec::ArrayVec","value":"ArrayVec {  }","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087}],"decl_id":null,"docs":" An array-backed, vector-like data structure.","sig":null,"attributes":[{"value":"/ An array-backed, vector-like data structure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204075,"byte_end":204123,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204124,"byte_end":204127,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ * `ArrayVec` has a fixed capacity, equal to the array size.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204128,"byte_end":204191,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/ * `ArrayVec` has a variable length, as you add and remove elements. Attempts","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204192,"byte_end":204272,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/   to fill the vec beyond its capacity will cause a panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204273,"byte_end":204334,"line_start":56,"line_end":56,"column_start":1,"column_end":62}},{"value":"/ * All of the vec's array slots are always initialized in terms of Rust's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204335,"byte_end":204411,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/   memory model. When you remove a element from a location, the old value at","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204412,"byte_end":204491,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/   that location is replaced with the type's default value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204492,"byte_end":204554,"line_start":59,"line_end":59,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204555,"byte_end":204558,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ The overall API of this type is intended to, as much as possible, emulate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204559,"byte_end":204636,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/ the API of the [`Vec`](https://doc.rust-lang.org/alloc/vec/struct.Vec.html)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204637,"byte_end":204716,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204717,"byte_end":204726,"line_start":63,"line_end":63,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204727,"byte_end":204730,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Construction","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204731,"byte_end":204750,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204751,"byte_end":204754,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ You can use the `array_vec!` macro similarly to how you might use the `vec!`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204755,"byte_end":204835,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ macro. Specify the array type, then optionally give all the initial values","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204836,"byte_end":204914,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ you want to have.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204915,"byte_end":204936,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204937,"byte_end":204948,"line_start":70,"line_end":70,"column_start":1,"column_end":12}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204949,"byte_end":204970,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/ let some_ints = array_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":204971,"byte_end":205023,"line_start":72,"line_end":72,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(some_ints.len(), 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205024,"byte_end":205059,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205060,"byte_end":205067,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205068,"byte_end":205071,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The [`default`](ArrayVec::new) for an `ArrayVec` is to have a default","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205072,"byte_end":205145,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/ array with length 0. The [`new`](ArrayVec::new) method is the same as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205146,"byte_end":205219,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ calling `default`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205220,"byte_end":205241,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205242,"byte_end":205253,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205254,"byte_end":205275,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/ let some_ints = ArrayVec::<[i32; 7]>::default();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205276,"byte_end":205328,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(some_ints.len(), 0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205329,"byte_end":205364,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205365,"byte_end":205368,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ let more_ints = ArrayVec::<[i32; 7]>::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205369,"byte_end":205417,"line_start":84,"line_end":84,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(some_ints, more_ints);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205418,"byte_end":205455,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205456,"byte_end":205463,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205464,"byte_end":205467,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ If you have an array and want the _whole thing_ so count as being \"in\" the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205468,"byte_end":205546,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"/ new `ArrayVec` you can use one of the `from` implementations. If you want","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205547,"byte_end":205624,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"/ _part of_ the array then you can use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205625,"byte_end":205665,"line_start":90,"line_end":90,"column_start":1,"column_end":41}},{"value":"/ [`from_array_len`](ArrayVec::from_array_len):","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205666,"byte_end":205715,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205716,"byte_end":205727,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205728,"byte_end":205749,"line_start":93,"line_end":93,"column_start":1,"column_end":22}},{"value":"/ let some_ints = ArrayVec::from([5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205750,"byte_end":205799,"line_start":94,"line_end":94,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(some_ints.len(), 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205800,"byte_end":205835,"line_start":95,"line_end":95,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205836,"byte_end":205839,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let more_ints = ArrayVec::from_array_len([5, 6, 7, 8], 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205840,"byte_end":205902,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(more_ints.len(), 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205903,"byte_end":205938,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205939,"byte_end":205946,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":205947,"byte_end":205957,"line_start":100,"line_end":100,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208186,"byte_end":208192,"line_start":196,"line_end":196,"column_start":10,"column_end":16},"name":"append","qualname":"<ArrayVec<A>>::append","value":"pub fn append(&mut Self, &mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move all values from `other` into this vec.","sig":null,"attributes":[{"value":"/ Move all values from `other` into this vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207769,"byte_end":207816,"line_start":181,"line_end":181,"column_start":3,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207819,"byte_end":207822,"line_start":182,"line_end":182,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207825,"byte_end":207838,"line_start":183,"line_end":183,"column_start":3,"column_end":16}},{"value":"/ * If the vec overflows its capacity","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207841,"byte_end":207880,"line_start":184,"line_end":184,"column_start":3,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207883,"byte_end":207886,"line_start":185,"line_end":185,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207889,"byte_end":207903,"line_start":186,"line_end":186,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207906,"byte_end":207917,"line_start":187,"line_end":187,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207920,"byte_end":207941,"line_start":188,"line_end":188,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 10] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207944,"byte_end":207994,"line_start":189,"line_end":189,"column_start":3,"column_end":53}},{"value":"/ let mut av2 = array_vec!([i32; 10] => 4, 5, 6);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207997,"byte_end":208048,"line_start":190,"line_end":190,"column_start":3,"column_end":54}},{"value":"/ av.append(&mut av2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208051,"byte_end":208075,"line_start":191,"line_end":191,"column_start":3,"column_end":27}},{"value":"/ assert_eq!(av, &[1, 2, 3, 4, 5, 6][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208078,"byte_end":208122,"line_start":192,"line_end":192,"column_start":3,"column_end":47}},{"value":"/ assert_eq!(av2, &[][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208125,"byte_end":208154,"line_start":193,"line_end":193,"column_start":3,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208157,"byte_end":208164,"line_start":194,"line_end":194,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208167,"byte_end":208176,"line_start":195,"line_end":195,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209018,"byte_end":209028,"line_start":222,"line_end":222,"column_start":10,"column_end":20},"name":"try_append","qualname":"<ArrayVec<A>>::try_append","value":"pub fn try_append<'other>(&mut Self, &'other mut Self)\n-> Option<&'other mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Move all values from `other` into this vec.\n If appending would overflow the capacity, Some(other) is returned.\n ## Example\n ```rust\n # use tinyvec::*;\n let mut av = array_vec!([i32; 7] => 1, 2, 3);\n let mut av2 = array_vec!([i32; 7] => 4, 5, 6);\n av.append(&mut av2);\n assert_eq!(av, &[1, 2, 3, 4, 5, 6][..]);\n assert_eq!(av2, &[][..]);","sig":null,"attributes":[{"value":"/ Move all values from `other` into this vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208405,"byte_end":208452,"line_start":205,"line_end":205,"column_start":3,"column_end":50}},{"value":"/ If appending would overflow the capacity, Some(other) is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208455,"byte_end":208525,"line_start":206,"line_end":206,"column_start":3,"column_end":73}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208528,"byte_end":208542,"line_start":207,"line_end":207,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208545,"byte_end":208556,"line_start":208,"line_end":208,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208559,"byte_end":208580,"line_start":209,"line_end":209,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 7] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208583,"byte_end":208632,"line_start":210,"line_end":210,"column_start":3,"column_end":52}},{"value":"/ let mut av2 = array_vec!([i32; 7] => 4, 5, 6);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208635,"byte_end":208685,"line_start":211,"line_end":211,"column_start":3,"column_end":53}},{"value":"/ av.append(&mut av2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208688,"byte_end":208712,"line_start":212,"line_end":212,"column_start":3,"column_end":27}},{"value":"/ assert_eq!(av, &[1, 2, 3, 4, 5, 6][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208715,"byte_end":208759,"line_start":213,"line_end":213,"column_start":3,"column_end":47}},{"value":"/ assert_eq!(av2, &[][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208762,"byte_end":208791,"line_start":214,"line_end":214,"column_start":3,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208794,"byte_end":208797,"line_start":215,"line_end":215,"column_start":3,"column_end":6}},{"value":"/ let mut av3 = array_vec!([i32; 7] => 7, 8, 9);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208800,"byte_end":208850,"line_start":216,"line_end":216,"column_start":3,"column_end":53}},{"value":"/ assert!(av.try_append(&mut av3).is_some());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208853,"byte_end":208900,"line_start":217,"line_end":217,"column_start":3,"column_end":50}},{"value":"/ assert_eq!(av, &[1, 2, 3, 4, 5, 6][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208903,"byte_end":208947,"line_start":218,"line_end":218,"column_start":3,"column_end":47}},{"value":"/ assert_eq!(av3, &[7, 8, 9][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208950,"byte_end":208986,"line_start":219,"line_end":219,"column_start":3,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208989,"byte_end":208996,"line_start":220,"line_end":220,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":208999,"byte_end":209008,"line_start":221,"line_end":221,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209544,"byte_end":209554,"line_start":247,"line_end":247,"column_start":10,"column_end":20},"name":"as_mut_ptr","qualname":"<ArrayVec<A>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut A::Item","parent":null,"children":[],"decl_id":null,"docs":" A `*mut` pointer to the backing array.","sig":null,"attributes":[{"value":"/ A `*mut` pointer to the backing array.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209363,"byte_end":209405,"line_start":240,"line_end":240,"column_start":3,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209408,"byte_end":209411,"line_start":241,"line_end":241,"column_start":3,"column_end":6}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209414,"byte_end":209427,"line_start":242,"line_end":242,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209430,"byte_end":209433,"line_start":243,"line_end":243,"column_start":3,"column_end":6}},{"value":"/ This pointer has provenance over the _entire_ backing array.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209436,"byte_end":209500,"line_start":244,"line_end":244,"column_start":3,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209503,"byte_end":209520,"line_start":245,"line_end":245,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209523,"byte_end":209534,"line_start":246,"line_end":246,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209728,"byte_end":209740,"line_start":254,"line_end":254,"column_start":10,"column_end":22},"name":"as_mut_slice","qualname":"<ArrayVec<A>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Performs a `deref_mut`, into unique slice form.\n","sig":null,"attributes":[{"value":"/ Performs a `deref_mut`, into unique slice form.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209633,"byte_end":209684,"line_start":251,"line_end":251,"column_start":3,"column_end":54}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209687,"byte_end":209704,"line_start":252,"line_end":252,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209707,"byte_end":209718,"line_start":253,"line_end":253,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209983,"byte_end":209989,"line_start":265,"line_end":265,"column_start":10,"column_end":16},"name":"as_ptr","qualname":"<ArrayVec<A>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const A::Item","parent":null,"children":[],"decl_id":null,"docs":" A `*const` pointer to the backing array.","sig":null,"attributes":[{"value":"/ A `*const` pointer to the backing array.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209800,"byte_end":209844,"line_start":258,"line_end":258,"column_start":3,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209847,"byte_end":209850,"line_start":259,"line_end":259,"column_start":3,"column_end":6}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209853,"byte_end":209866,"line_start":260,"line_end":260,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209869,"byte_end":209872,"line_start":261,"line_end":261,"column_start":3,"column_end":6}},{"value":"/ This pointer has provenance over the _entire_ backing array.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209875,"byte_end":209939,"line_start":262,"line_end":262,"column_start":3,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209942,"byte_end":209959,"line_start":263,"line_end":263,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":209962,"byte_end":209973,"line_start":264,"line_end":264,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210149,"byte_end":210157,"line_start":272,"line_end":272,"column_start":10,"column_end":18},"name":"as_slice","qualname":"<ArrayVec<A>>::as_slice","value":"pub fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Performs a `deref`, into shared slice form.\n","sig":null,"attributes":[{"value":"/ Performs a `deref`, into shared slice form.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210058,"byte_end":210105,"line_start":269,"line_end":269,"column_start":3,"column_end":50}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210108,"byte_end":210125,"line_start":270,"line_end":270,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210128,"byte_end":210139,"line_start":271,"line_end":271,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210392,"byte_end":210400,"line_start":282,"line_end":282,"column_start":10,"column_end":18},"name":"capacity","qualname":"<ArrayVec<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The capacity of the `ArrayVec`.","sig":null,"attributes":[{"value":"/ The capacity of the `ArrayVec`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210205,"byte_end":210240,"line_start":276,"line_end":276,"column_start":3,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210243,"byte_end":210246,"line_start":277,"line_end":277,"column_start":3,"column_end":6}},{"value":"/ This is fixed based on the array type, but can't yet be made a `const fn`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210249,"byte_end":210326,"line_start":278,"line_end":278,"column_start":3,"column_end":80}},{"value":"/ on Stable Rust.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210329,"byte_end":210348,"line_start":279,"line_end":279,"column_start":3,"column_end":22}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210351,"byte_end":210368,"line_start":280,"line_end":280,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210371,"byte_end":210382,"line_start":281,"line_end":281,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210759,"byte_end":210764,"line_start":291,"line_end":291,"column_start":10,"column_end":15},"name":"clear","qualname":"<ArrayVec<A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Truncates the `ArrayVec` down to length 0.\n","sig":null,"attributes":[{"value":"/ Truncates the `ArrayVec` down to length 0.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210683,"byte_end":210729,"line_start":289,"line_end":289,"column_start":3,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210732,"byte_end":210749,"line_start":290,"line_end":290,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211395,"byte_end":211400,"line_start":314,"line_end":314,"column_start":10,"column_end":15},"name":"drain","qualname":"<ArrayVec<A>>::drain","value":"pub fn drain<R>(&mut Self, R) -> ArrayVecDrain<, A::Item> where\nR: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in the vector\n and yields the removed items.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range in the vector","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210806,"byte_end":210884,"line_start":295,"line_end":295,"column_start":3,"column_end":81}},{"value":"/ and yields the removed items.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210887,"byte_end":210920,"line_start":296,"line_end":296,"column_start":3,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210923,"byte_end":210926,"line_start":297,"line_end":297,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210929,"byte_end":210942,"line_start":298,"line_end":298,"column_start":3,"column_end":16}},{"value":"/ * If the start is greater than the end","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210945,"byte_end":210987,"line_start":299,"line_end":299,"column_start":3,"column_end":45}},{"value":"/ * If the end is past the edge of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":210990,"byte_end":211035,"line_start":300,"line_end":300,"column_start":3,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211038,"byte_end":211041,"line_start":301,"line_end":301,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211044,"byte_end":211058,"line_start":302,"line_end":302,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211061,"byte_end":211072,"line_start":303,"line_end":303,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211075,"byte_end":211096,"line_start":304,"line_end":304,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211099,"byte_end":211148,"line_start":305,"line_end":305,"column_start":3,"column_end":52}},{"value":"/ let av2: ArrayVec<[i32; 4]> = av.drain(1..).collect();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211151,"byte_end":211209,"line_start":306,"line_end":306,"column_start":3,"column_end":61}},{"value":"/ assert_eq!(av.as_slice(), &[1][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211212,"byte_end":211252,"line_start":307,"line_end":307,"column_start":3,"column_end":43}},{"value":"/ assert_eq!(av2.as_slice(), &[2, 3][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211255,"byte_end":211299,"line_start":308,"line_end":308,"column_start":3,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211302,"byte_end":211305,"line_start":309,"line_end":309,"column_start":3,"column_end":6}},{"value":"/ av.drain(..);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211308,"byte_end":211325,"line_start":310,"line_end":310,"column_start":3,"column_end":20}},{"value":"/ assert_eq!(av.as_slice(), &[]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211328,"byte_end":211363,"line_start":311,"line_end":311,"column_start":3,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211366,"byte_end":211373,"line_start":312,"line_end":312,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211376,"byte_end":211385,"line_start":313,"line_end":313,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212425,"byte_end":212435,"line_start":347,"line_end":347,"column_start":10,"column_end":20},"name":"into_inner","qualname":"<ArrayVec<A>>::into_inner","value":"pub fn into_inner(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner array of the `ArrayVec`.","sig":null,"attributes":[{"value":"/ Returns the inner array of the `ArrayVec`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211537,"byte_end":211583,"line_start":321,"line_end":321,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211586,"byte_end":211589,"line_start":322,"line_end":322,"column_start":3,"column_end":6}},{"value":"/ This returns the full array, even if the `ArrayVec` length is currently","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211592,"byte_end":211667,"line_start":323,"line_end":323,"column_start":3,"column_end":78}},{"value":"/ less than that.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211670,"byte_end":211689,"line_start":324,"line_end":324,"column_start":3,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211692,"byte_end":211695,"line_start":325,"line_end":325,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211698,"byte_end":211712,"line_start":326,"line_end":326,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211715,"byte_end":211718,"line_start":327,"line_end":327,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211721,"byte_end":211732,"line_start":328,"line_end":328,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::{array_vec, ArrayVec};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211735,"byte_end":211776,"line_start":329,"line_end":329,"column_start":3,"column_end":44}},{"value":"/ let mut favorite_numbers = array_vec!([i32; 5] => 87, 48, 33, 9, 26);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211779,"byte_end":211852,"line_start":330,"line_end":330,"column_start":3,"column_end":76}},{"value":"/ assert_eq!(favorite_numbers.clone().into_inner(), [87, 48, 33, 9, 26]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211855,"byte_end":211930,"line_start":331,"line_end":331,"column_start":3,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211933,"byte_end":211936,"line_start":332,"line_end":332,"column_start":3,"column_end":6}},{"value":"/ favorite_numbers.pop();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211939,"byte_end":211966,"line_start":333,"line_end":333,"column_start":3,"column_end":30}},{"value":"/ assert_eq!(favorite_numbers.into_inner(), [87, 48, 33, 9, 0]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":211969,"byte_end":212035,"line_start":334,"line_end":334,"column_start":3,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212038,"byte_end":212045,"line_start":335,"line_end":335,"column_start":3,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212048,"byte_end":212051,"line_start":336,"line_end":336,"column_start":3,"column_end":6}},{"value":"/ A use for this function is to build an array from an iterator by first","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212054,"byte_end":212128,"line_start":337,"line_end":337,"column_start":3,"column_end":77}},{"value":"/ collecting it into an `ArrayVec`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212131,"byte_end":212168,"line_start":338,"line_end":338,"column_start":3,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212171,"byte_end":212174,"line_start":339,"line_end":339,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212177,"byte_end":212188,"line_start":340,"line_end":340,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::ArrayVec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212191,"byte_end":212219,"line_start":341,"line_end":341,"column_start":3,"column_end":31}},{"value":"/ let arr_vec: ArrayVec<[i32; 10]> = (1..=3).cycle().take(10).collect();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212222,"byte_end":212296,"line_start":342,"line_end":342,"column_start":3,"column_end":77}},{"value":"/ let inner = arr_vec.into_inner();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212299,"byte_end":212336,"line_start":343,"line_end":343,"column_start":3,"column_end":40}},{"value":"/ assert_eq!(inner, [1, 2, 3, 1, 2, 3, 1, 2, 3, 1]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212339,"byte_end":212393,"line_start":344,"line_end":344,"column_start":3,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212396,"byte_end":212403,"line_start":345,"line_end":345,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212406,"byte_end":212415,"line_start":346,"line_end":346,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212630,"byte_end":212647,"line_start":356,"line_end":356,"column_start":10,"column_end":27},"name":"extend_from_slice","qualname":"<ArrayVec<A>>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[A::Item]) where A::Item: Clone","parent":null,"children":[],"decl_id":null,"docs":" Clone each element of the slice into this `ArrayVec`.","sig":null,"attributes":[{"value":"/ Clone each element of the slice into this `ArrayVec`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212470,"byte_end":212527,"line_start":351,"line_end":351,"column_start":3,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212530,"byte_end":212533,"line_start":352,"line_end":352,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212536,"byte_end":212549,"line_start":353,"line_end":353,"column_start":3,"column_end":16}},{"value":"/ * If the `ArrayVec` would overflow, this will panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212552,"byte_end":212608,"line_start":354,"line_end":354,"column_start":3,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":212611,"byte_end":212620,"line_start":355,"line_end":355,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214128,"byte_end":214132,"line_start":403,"line_end":403,"column_start":10,"column_end":14},"name":"fill","qualname":"<ArrayVec<A>>::fill","value":"pub fn fill<I: IntoIterator<Item = A::Item>>(&mut Self, I) -> I::IntoIter","parent":null,"children":[],"decl_id":null,"docs":" Fill the vector until its capacity has been reached.","sig":null,"attributes":[{"value":"/ Fill the vector until its capacity has been reached.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213105,"byte_end":213161,"line_start":377,"line_end":377,"column_start":3,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213164,"byte_end":213167,"line_start":378,"line_end":378,"column_start":3,"column_end":6}},{"value":"/ Successively fills unused space in the spare slice of the vector with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213170,"byte_end":213243,"line_start":379,"line_end":379,"column_start":3,"column_end":76}},{"value":"/ elements from the iterator. It then returns the remaining iterator","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213246,"byte_end":213316,"line_start":380,"line_end":380,"column_start":3,"column_end":73}},{"value":"/ without exhausting it. This also allows appending the head of an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213319,"byte_end":213387,"line_start":381,"line_end":381,"column_start":3,"column_end":71}},{"value":"/ infinite iterator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213390,"byte_end":213412,"line_start":382,"line_end":382,"column_start":3,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213415,"byte_end":213418,"line_start":383,"line_end":383,"column_start":3,"column_end":6}},{"value":"/ This is an alternative to `Extend::extend` method for cases where the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213421,"byte_end":213494,"line_start":384,"line_end":384,"column_start":3,"column_end":76}},{"value":"/ length of the iterator can not be checked. Since this vector can not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213497,"byte_end":213569,"line_start":385,"line_end":385,"column_start":3,"column_end":75}},{"value":"/ reallocate to increase its capacity, it is unclear what to do with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213572,"byte_end":213642,"line_start":386,"line_end":386,"column_start":3,"column_end":73}},{"value":"/ remaining elements in the iterator and the iterator itself. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213645,"byte_end":213712,"line_start":387,"line_end":387,"column_start":3,"column_end":70}},{"value":"/ interface also provides no way to communicate this to the caller.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213715,"byte_end":213784,"line_start":388,"line_end":388,"column_start":3,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213787,"byte_end":213790,"line_start":389,"line_end":389,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213793,"byte_end":213806,"line_start":390,"line_end":390,"column_start":3,"column_end":16}},{"value":"/ * If the `next` method of the provided iterator panics.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213809,"byte_end":213868,"line_start":391,"line_end":391,"column_start":3,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213871,"byte_end":213874,"line_start":392,"line_end":392,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213877,"byte_end":213891,"line_start":393,"line_end":393,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213894,"byte_end":213897,"line_start":394,"line_end":394,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213900,"byte_end":213911,"line_start":395,"line_end":395,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213914,"byte_end":213935,"line_start":396,"line_end":396,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 4]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213938,"byte_end":213976,"line_start":397,"line_end":397,"column_start":3,"column_end":41}},{"value":"/ let mut to_inf = av.fill(0..);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":213979,"byte_end":214013,"line_start":398,"line_end":398,"column_start":3,"column_end":37}},{"value":"/ assert_eq!(&av[..], [0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214016,"byte_end":214054,"line_start":399,"line_end":399,"column_start":3,"column_end":41}},{"value":"/ assert_eq!(to_inf.next(), Some(4));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214057,"byte_end":214096,"line_start":400,"line_end":400,"column_start":3,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214099,"byte_end":214106,"line_start":401,"line_end":401,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214109,"byte_end":214118,"line_start":402,"line_end":402,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215144,"byte_end":215158,"line_start":433,"line_end":433,"column_start":10,"column_end":24},"name":"from_array_len","qualname":"<ArrayVec<A>>::from_array_len","value":"pub fn from_array_len(A, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps up an array and uses the given length as the initial length.","sig":null,"attributes":[{"value":"/ Wraps up an array and uses the given length as the initial length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214803,"byte_end":214873,"line_start":422,"line_end":422,"column_start":3,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214876,"byte_end":214879,"line_start":423,"line_end":423,"column_start":3,"column_end":6}},{"value":"/ If you want to simply use the full array, use `from` instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214882,"byte_end":214947,"line_start":424,"line_end":424,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214950,"byte_end":214953,"line_start":425,"line_end":425,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214956,"byte_end":214969,"line_start":426,"line_end":426,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214972,"byte_end":214975,"line_start":427,"line_end":427,"column_start":3,"column_end":6}},{"value":"/ * The length specified must be less than or equal to the capacity of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":214978,"byte_end":215054,"line_start":428,"line_end":428,"column_start":3,"column_end":79}},{"value":"/   array.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215057,"byte_end":215069,"line_start":429,"line_end":429,"column_start":3,"column_end":15}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215072,"byte_end":215081,"line_start":430,"line_end":430,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215084,"byte_end":215095,"line_start":431,"line_end":431,"column_start":3,"column_end":14}},{"value":"allow(clippy :: match_wild_err_arm)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215098,"byte_end":215134,"line_start":432,"line_end":432,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215870,"byte_end":215876,"line_start":461,"line_end":461,"column_start":10,"column_end":16},"name":"insert","qualname":"<ArrayVec<A>>::insert","value":"pub fn insert(&mut Self, usize, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Inserts an item at the position given, moving all following elements +1\n index.","sig":null,"attributes":[{"value":"/ Inserts an item at the position given, moving all following elements +1","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215407,"byte_end":215482,"line_start":444,"line_end":444,"column_start":3,"column_end":78}},{"value":"/ index.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215485,"byte_end":215495,"line_start":445,"line_end":445,"column_start":3,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215498,"byte_end":215501,"line_start":446,"line_end":446,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215504,"byte_end":215517,"line_start":447,"line_end":447,"column_start":3,"column_end":16}},{"value":"/ * If `index` > `len`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215520,"byte_end":215544,"line_start":448,"line_end":448,"column_start":3,"column_end":27}},{"value":"/ * If the capacity is exhausted","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215547,"byte_end":215581,"line_start":449,"line_end":449,"column_start":3,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215584,"byte_end":215587,"line_start":450,"line_end":450,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215590,"byte_end":215604,"line_start":451,"line_end":451,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215607,"byte_end":215618,"line_start":452,"line_end":452,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215621,"byte_end":215640,"line_start":453,"line_end":453,"column_start":3,"column_end":22}},{"value":"/ let mut av = array_vec!([i32; 10] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215643,"byte_end":215693,"line_start":454,"line_end":454,"column_start":3,"column_end":53}},{"value":"/ av.insert(1, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215696,"byte_end":215716,"line_start":455,"line_end":455,"column_start":3,"column_end":23}},{"value":"/ assert_eq!(av.as_slice(), &[1, 4, 2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215719,"byte_end":215764,"line_start":456,"line_end":456,"column_start":3,"column_end":48}},{"value":"/ av.insert(4, 5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215767,"byte_end":215787,"line_start":457,"line_end":457,"column_start":3,"column_end":23}},{"value":"/ assert_eq!(av.as_slice(), &[1, 4, 2, 3, 5]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215790,"byte_end":215838,"line_start":458,"line_end":458,"column_start":3,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215841,"byte_end":215848,"line_start":459,"line_end":459,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":215851,"byte_end":215860,"line_start":460,"line_end":460,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216589,"byte_end":216599,"line_start":483,"line_end":483,"column_start":10,"column_end":20},"name":"try_insert","qualname":"<ArrayVec<A>>::try_insert","value":"pub fn try_insert(&mut Self, usize, A::Item) -> Option<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Tries to insert an item at the position given, moving all following\n elements +1 index.\n Returns back the element if the capacity is exhausted,\n otherwise returns None.","sig":null,"attributes":[{"value":"/ Tries to insert an item at the position given, moving all following","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216034,"byte_end":216105,"line_start":466,"line_end":466,"column_start":3,"column_end":74}},{"value":"/ elements +1 index.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216108,"byte_end":216130,"line_start":467,"line_end":467,"column_start":3,"column_end":25}},{"value":"/ Returns back the element if the capacity is exhausted,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216133,"byte_end":216191,"line_start":468,"line_end":468,"column_start":3,"column_end":61}},{"value":"/ otherwise returns None.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216194,"byte_end":216221,"line_start":469,"line_end":469,"column_start":3,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216224,"byte_end":216227,"line_start":470,"line_end":470,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216230,"byte_end":216243,"line_start":471,"line_end":471,"column_start":3,"column_end":16}},{"value":"/ * If `index` > `len`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216246,"byte_end":216270,"line_start":472,"line_end":472,"column_start":3,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216273,"byte_end":216276,"line_start":473,"line_end":473,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216279,"byte_end":216293,"line_start":474,"line_end":474,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216296,"byte_end":216307,"line_start":475,"line_end":475,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216310,"byte_end":216329,"line_start":476,"line_end":476,"column_start":3,"column_end":22}},{"value":"/ let mut av = array_vec!([&'static str; 4] => \"one\", \"two\", \"three\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216332,"byte_end":216404,"line_start":477,"line_end":477,"column_start":3,"column_end":75}},{"value":"/ av.insert(1, \"four\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216407,"byte_end":216432,"line_start":478,"line_end":478,"column_start":3,"column_end":28}},{"value":"/ assert_eq!(av.as_slice(), &[\"one\", \"four\", \"two\", \"three\"]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216435,"byte_end":216499,"line_start":479,"line_end":479,"column_start":3,"column_end":67}},{"value":"/ assert_eq!(av.try_insert(4, \"five\"), Some(\"five\"));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216502,"byte_end":216557,"line_start":480,"line_end":480,"column_start":3,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216560,"byte_end":216567,"line_start":481,"line_end":481,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":216570,"byte_end":216579,"line_start":482,"line_end":482,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217584,"byte_end":217592,"line_start":516,"line_end":516,"column_start":10,"column_end":18},"name":"is_empty","qualname":"<ArrayVec<A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the length is 0.\n","sig":null,"attributes":[{"value":"/ Checks if the length is 0.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217510,"byte_end":217540,"line_start":513,"line_end":513,"column_start":3,"column_end":33}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217543,"byte_end":217560,"line_start":514,"line_end":514,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217563,"byte_end":217574,"line_start":515,"line_end":515,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217726,"byte_end":217729,"line_start":523,"line_end":523,"column_start":10,"column_end":13},"name":"len","qualname":"<ArrayVec<A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the `ArrayVec` (in elements).\n","sig":null,"attributes":[{"value":"/ The length of the `ArrayVec` (in elements).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217635,"byte_end":217682,"line_start":520,"line_end":520,"column_start":3,"column_end":50}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217685,"byte_end":217702,"line_start":521,"line_end":521,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217705,"byte_end":217716,"line_start":522,"line_end":522,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217855,"byte_end":217858,"line_start":530,"line_end":530,"column_start":10,"column_end":13},"name":"new","qualname":"<ArrayVec<A>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new, empty `ArrayVec`.\n","sig":null,"attributes":[{"value":"/ Makes a new, empty `ArrayVec`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217777,"byte_end":217811,"line_start":527,"line_end":527,"column_start":3,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217814,"byte_end":217831,"line_start":528,"line_end":528,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217834,"byte_end":217845,"line_start":529,"line_end":529,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218283,"byte_end":218286,"line_start":548,"line_end":548,"column_start":10,"column_end":13},"name":"pop","qualname":"<ArrayVec<A>>::pop","value":"pub fn pop(&mut Self) -> Option<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the last element of the vec, if there is one.","sig":null,"attributes":[{"value":"/ Remove and return the last element of the vec, if there is one.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217898,"byte_end":217965,"line_start":534,"line_end":534,"column_start":3,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217968,"byte_end":217971,"line_start":535,"line_end":535,"column_start":3,"column_end":6}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217974,"byte_end":217988,"line_start":536,"line_end":536,"column_start":3,"column_end":17}},{"value":"/ * If the vec is empty you get `None`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":217991,"byte_end":218032,"line_start":537,"line_end":537,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218035,"byte_end":218038,"line_start":538,"line_end":538,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218041,"byte_end":218055,"line_start":539,"line_end":539,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218058,"byte_end":218069,"line_start":540,"line_end":540,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218072,"byte_end":218093,"line_start":541,"line_end":541,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 10] => 1, 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218096,"byte_end":218143,"line_start":542,"line_end":542,"column_start":3,"column_end":50}},{"value":"/ assert_eq!(av.pop(), Some(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218146,"byte_end":218180,"line_start":543,"line_end":543,"column_start":3,"column_end":37}},{"value":"/ assert_eq!(av.pop(), Some(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218183,"byte_end":218217,"line_start":544,"line_end":544,"column_start":3,"column_end":37}},{"value":"/ assert_eq!(av.pop(), None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218220,"byte_end":218251,"line_start":545,"line_end":545,"column_start":3,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218254,"byte_end":218261,"line_start":546,"line_end":546,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218264,"byte_end":218273,"line_start":547,"line_end":547,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218957,"byte_end":218961,"line_start":575,"line_end":575,"column_start":10,"column_end":14},"name":"push","qualname":"<ArrayVec<A>>::push","value":"pub fn push(&mut Self, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Place an element onto the end of the vec.","sig":null,"attributes":[{"value":"/ Place an element onto the end of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218487,"byte_end":218532,"line_start":558,"line_end":558,"column_start":3,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218535,"byte_end":218538,"line_start":559,"line_end":559,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218541,"byte_end":218554,"line_start":560,"line_end":560,"column_start":3,"column_end":16}},{"value":"/ * If the length of the vec would overflow the capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218557,"byte_end":218616,"line_start":561,"line_end":561,"column_start":3,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218619,"byte_end":218622,"line_start":562,"line_end":562,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218625,"byte_end":218639,"line_start":563,"line_end":563,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218642,"byte_end":218653,"line_start":564,"line_end":564,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218656,"byte_end":218677,"line_start":565,"line_end":565,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 2]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218680,"byte_end":218718,"line_start":566,"line_end":566,"column_start":3,"column_end":41}},{"value":"/ assert_eq!(&av[..], []);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218721,"byte_end":218749,"line_start":567,"line_end":567,"column_start":3,"column_end":31}},{"value":"/ av.push(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218752,"byte_end":218767,"line_start":568,"line_end":568,"column_start":3,"column_end":18}},{"value":"/ assert_eq!(&av[..], [1]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218770,"byte_end":218799,"line_start":569,"line_end":569,"column_start":3,"column_end":32}},{"value":"/ av.push(2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218802,"byte_end":218817,"line_start":570,"line_end":570,"column_start":3,"column_end":18}},{"value":"/ assert_eq!(&av[..], [1, 2]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218820,"byte_end":218852,"line_start":571,"line_end":571,"column_start":3,"column_end":35}},{"value":"/ // av.push(3); this would overflow the ArrayVec and panic!","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218855,"byte_end":218917,"line_start":572,"line_end":572,"column_start":3,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218920,"byte_end":218927,"line_start":573,"line_end":573,"column_start":3,"column_end":10}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":218930,"byte_end":218947,"line_start":574,"line_end":574,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219584,"byte_end":219592,"line_start":594,"line_end":594,"column_start":10,"column_end":18},"name":"try_push","qualname":"<ArrayVec<A>>::try_push","value":"pub fn try_push(&mut Self, A::Item) -> Option<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Tries to place an element onto the end of the vec.\\\n Returns back the element if the capacity is exhausted,\n otherwise returns None.\n ```rust\n # use tinyvec::*;\n let mut av = array_vec!([i32; 2]);\n assert_eq!(av.as_slice(), []);\n assert_eq!(av.try_push(1), None);\n assert_eq!(&av[..], [1]);\n assert_eq!(av.try_push(2), None);\n assert_eq!(&av[..], [1, 2]);\n assert_eq!(av.try_push(3), Some(3));\n ```\n","sig":null,"attributes":[{"value":"/ Tries to place an element onto the end of the vec.\\","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219092,"byte_end":219147,"line_start":580,"line_end":580,"column_start":3,"column_end":58}},{"value":"/ Returns back the element if the capacity is exhausted,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219150,"byte_end":219208,"line_start":581,"line_end":581,"column_start":3,"column_end":61}},{"value":"/ otherwise returns None.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219211,"byte_end":219238,"line_start":582,"line_end":582,"column_start":3,"column_end":30}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219241,"byte_end":219252,"line_start":583,"line_end":583,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219255,"byte_end":219276,"line_start":584,"line_end":584,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 2]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219279,"byte_end":219317,"line_start":585,"line_end":585,"column_start":3,"column_end":41}},{"value":"/ assert_eq!(av.as_slice(), []);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219320,"byte_end":219354,"line_start":586,"line_end":586,"column_start":3,"column_end":37}},{"value":"/ assert_eq!(av.try_push(1), None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219357,"byte_end":219394,"line_start":587,"line_end":587,"column_start":3,"column_end":40}},{"value":"/ assert_eq!(&av[..], [1]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219397,"byte_end":219426,"line_start":588,"line_end":588,"column_start":3,"column_end":32}},{"value":"/ assert_eq!(av.try_push(2), None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219429,"byte_end":219466,"line_start":589,"line_end":589,"column_start":3,"column_end":40}},{"value":"/ assert_eq!(&av[..], [1, 2]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219469,"byte_end":219501,"line_start":590,"line_end":590,"column_start":3,"column_end":35}},{"value":"/ assert_eq!(av.try_push(3), Some(3));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219504,"byte_end":219544,"line_start":591,"line_end":591,"column_start":3,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219547,"byte_end":219554,"line_start":592,"line_end":592,"column_start":3,"column_end":10}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219557,"byte_end":219574,"line_start":593,"line_end":593,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220294,"byte_end":220300,"line_start":624,"line_end":624,"column_start":10,"column_end":16},"name":"remove","qualname":"<ArrayVec<A>>::remove","value":"pub fn remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Removes the item at `index`, shifting all others down by one index.","sig":null,"attributes":[{"value":"/ Removes the item at `index`, shifting all others down by one index.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219894,"byte_end":219965,"line_start":607,"line_end":607,"column_start":3,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219968,"byte_end":219971,"line_start":608,"line_end":608,"column_start":3,"column_end":6}},{"value":"/ Returns the removed element.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":219974,"byte_end":220006,"line_start":609,"line_end":609,"column_start":3,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220009,"byte_end":220012,"line_start":610,"line_end":610,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220015,"byte_end":220028,"line_start":611,"line_end":611,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220031,"byte_end":220034,"line_start":612,"line_end":612,"column_start":3,"column_end":6}},{"value":"/ * If the index is out of bounds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220037,"byte_end":220073,"line_start":613,"line_end":613,"column_start":3,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220076,"byte_end":220079,"line_start":614,"line_end":614,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220082,"byte_end":220096,"line_start":615,"line_end":615,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220099,"byte_end":220102,"line_start":616,"line_end":616,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220105,"byte_end":220116,"line_start":617,"line_end":617,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220119,"byte_end":220140,"line_start":618,"line_end":618,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220143,"byte_end":220192,"line_start":619,"line_end":619,"column_start":3,"column_end":52}},{"value":"/ assert_eq!(av.remove(1), 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220195,"byte_end":220227,"line_start":620,"line_end":620,"column_start":3,"column_end":35}},{"value":"/ assert_eq!(&av[..], [1, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220230,"byte_end":220262,"line_start":621,"line_end":621,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220265,"byte_end":220272,"line_start":622,"line_end":622,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220275,"byte_end":220284,"line_start":623,"line_end":623,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221401,"byte_end":221407,"line_start":659,"line_end":659,"column_start":10,"column_end":16},"name":"resize","qualname":"<ArrayVec<A>>::resize","value":"pub fn resize(&mut Self, usize, A::Item) where A::Item: Clone","parent":null,"children":[],"decl_id":null,"docs":" As [`resize_with`](ArrayVec::resize_with)\n and it clones the value as the closure.","sig":null,"attributes":[{"value":"/ As [`resize_with`](ArrayVec::resize_with)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220946,"byte_end":220991,"line_start":642,"line_end":642,"column_start":3,"column_end":48}},{"value":"/ and it clones the value as the closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":220994,"byte_end":221037,"line_start":643,"line_end":643,"column_start":3,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221040,"byte_end":221043,"line_start":644,"line_end":644,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221046,"byte_end":221060,"line_start":645,"line_end":645,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221063,"byte_end":221066,"line_start":646,"line_end":646,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221069,"byte_end":221080,"line_start":647,"line_end":647,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221083,"byte_end":221104,"line_start":648,"line_end":648,"column_start":3,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221107,"byte_end":221110,"line_start":649,"line_end":649,"column_start":3,"column_end":6}},{"value":"/ let mut av = array_vec!([&str; 10] => \"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221113,"byte_end":221164,"line_start":650,"line_end":650,"column_start":3,"column_end":54}},{"value":"/ av.resize(3, \"world\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221167,"byte_end":221193,"line_start":651,"line_end":651,"column_start":3,"column_end":29}},{"value":"/ assert_eq!(&av[..], [\"hello\", \"world\", \"world\"]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221196,"byte_end":221249,"line_start":652,"line_end":652,"column_start":3,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221252,"byte_end":221255,"line_start":653,"line_end":653,"column_start":3,"column_end":6}},{"value":"/ let mut av = array_vec!([i32; 10] => 1, 2, 3, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221258,"byte_end":221311,"line_start":654,"line_end":654,"column_start":3,"column_end":56}},{"value":"/ av.resize(2, 0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221314,"byte_end":221334,"line_start":655,"line_end":655,"column_start":3,"column_end":23}},{"value":"/ assert_eq!(&av[..], [1, 2]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221337,"byte_end":221369,"line_start":656,"line_end":656,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221372,"byte_end":221379,"line_start":657,"line_end":657,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221382,"byte_end":221391,"line_start":658,"line_end":658,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222145,"byte_end":222156,"line_start":689,"line_end":689,"column_start":10,"column_end":21},"name":"resize_with","qualname":"<ArrayVec<A>>::resize_with","value":"pub fn resize_with<F: FnMut() -> A::Item>(&mut Self, usize, F)","parent":null,"children":[],"decl_id":null,"docs":" Resize the vec to the new length.","sig":null,"attributes":[{"value":"/ Resize the vec to the new length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221542,"byte_end":221579,"line_start":666,"line_end":666,"column_start":3,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221582,"byte_end":221585,"line_start":667,"line_end":667,"column_start":3,"column_end":6}},{"value":"/ If it needs to be longer, it's filled with repeated calls to the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221588,"byte_end":221665,"line_start":668,"line_end":668,"column_start":3,"column_end":80}},{"value":"/ function. If it needs to be shorter, it's truncated.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221668,"byte_end":221724,"line_start":669,"line_end":669,"column_start":3,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221727,"byte_end":221730,"line_start":670,"line_end":670,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221733,"byte_end":221747,"line_start":671,"line_end":671,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221750,"byte_end":221753,"line_start":672,"line_end":672,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221756,"byte_end":221767,"line_start":673,"line_end":673,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221770,"byte_end":221791,"line_start":674,"line_end":674,"column_start":3,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221794,"byte_end":221797,"line_start":675,"line_end":675,"column_start":3,"column_end":6}},{"value":"/ let mut av = array_vec!([i32; 10] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221800,"byte_end":221850,"line_start":676,"line_end":676,"column_start":3,"column_end":53}},{"value":"/ av.resize_with(5, Default::default);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221853,"byte_end":221893,"line_start":677,"line_end":677,"column_start":3,"column_end":43}},{"value":"/ assert_eq!(&av[..], [1, 2, 3, 0, 0]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221896,"byte_end":221937,"line_start":678,"line_end":678,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221940,"byte_end":221943,"line_start":679,"line_end":679,"column_start":3,"column_end":6}},{"value":"/ let mut av = array_vec!([i32; 10]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221946,"byte_end":221985,"line_start":680,"line_end":680,"column_start":3,"column_end":42}},{"value":"/ let mut p = 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":221988,"byte_end":222006,"line_start":681,"line_end":681,"column_start":3,"column_end":21}},{"value":"/ av.resize_with(4, || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222009,"byte_end":222035,"line_start":682,"line_end":682,"column_start":3,"column_end":29}},{"value":"/   p *= 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222038,"byte_end":222051,"line_start":683,"line_end":683,"column_start":3,"column_end":16}},{"value":"/   p","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222054,"byte_end":222061,"line_start":684,"line_end":684,"column_start":3,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222064,"byte_end":222071,"line_start":685,"line_end":685,"column_start":3,"column_end":10}},{"value":"/ assert_eq!(&av[..], [2, 4, 8, 16]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222074,"byte_end":222113,"line_start":686,"line_end":686,"column_start":3,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222116,"byte_end":222123,"line_start":687,"line_end":687,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222126,"byte_end":222135,"line_start":688,"line_end":688,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222749,"byte_end":222755,"line_start":714,"line_end":714,"column_start":10,"column_end":16},"name":"retain","qualname":"<ArrayVec<A>>::retain","value":"pub fn retain<F: FnMut(&A::Item) -> bool>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Walk the vec and keep only the elements that pass the predicate given.","sig":null,"attributes":[{"value":"/ Walk the vec and keep only the elements that pass the predicate given.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222439,"byte_end":222513,"line_start":702,"line_end":702,"column_start":3,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222516,"byte_end":222519,"line_start":703,"line_end":703,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222522,"byte_end":222536,"line_start":704,"line_end":704,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222539,"byte_end":222542,"line_start":705,"line_end":705,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222545,"byte_end":222556,"line_start":706,"line_end":706,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222559,"byte_end":222580,"line_start":707,"line_end":707,"column_start":3,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222583,"byte_end":222586,"line_start":708,"line_end":708,"column_start":3,"column_end":6}},{"value":"/ let mut av = array_vec!([i32; 10] => 1, 1, 2, 3, 3, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222589,"byte_end":222648,"line_start":709,"line_end":709,"column_start":3,"column_end":62}},{"value":"/ av.retain(|&x| x % 2 == 0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222651,"byte_end":222682,"line_start":710,"line_end":710,"column_start":3,"column_end":34}},{"value":"/ assert_eq!(&av[..], [2, 4]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222685,"byte_end":222717,"line_start":711,"line_end":711,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222720,"byte_end":222727,"line_start":712,"line_end":712,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":222730,"byte_end":222739,"line_start":713,"line_end":713,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224189,"byte_end":224196,"line_start":761,"line_end":761,"column_start":10,"column_end":17},"name":"set_len","qualname":"<ArrayVec<A>>::set_len","value":"pub fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Forces the length of the vector to `new_len`.","sig":null,"attributes":[{"value":"/ Forces the length of the vector to `new_len`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223747,"byte_end":223796,"line_start":750,"line_end":750,"column_start":3,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223799,"byte_end":223802,"line_start":751,"line_end":751,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223805,"byte_end":223818,"line_start":752,"line_end":752,"column_start":3,"column_end":16}},{"value":"/ * If `new_len` is greater than the vec's capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223821,"byte_end":223875,"line_start":753,"line_end":753,"column_start":3,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223878,"byte_end":223881,"line_start":754,"line_end":754,"column_start":3,"column_end":6}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223884,"byte_end":223897,"line_start":755,"line_end":755,"column_start":3,"column_end":16}},{"value":"/ * This is a fully safe operation! The inactive memory already counts as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223900,"byte_end":223975,"line_start":756,"line_end":756,"column_start":3,"column_end":78}},{"value":"/   \"initialized\" by Rust's rules.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223978,"byte_end":224014,"line_start":757,"line_end":757,"column_start":3,"column_end":39}},{"value":"/ * Other than \"the memory is initialized\" there are no other guarantees","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224017,"byte_end":224091,"line_start":758,"line_end":758,"column_start":3,"column_end":77}},{"value":"/   regarding what you find in the inactive portion of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224094,"byte_end":224159,"line_start":759,"line_end":759,"column_start":3,"column_end":68}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224162,"byte_end":224179,"line_start":760,"line_end":760,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225238,"byte_end":225247,"line_start":798,"line_end":798,"column_start":10,"column_end":19},"name":"split_off","qualname":"<ArrayVec<A>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection at the point given.","sig":null,"attributes":[{"value":"/ Splits the collection at the point given.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224813,"byte_end":224858,"line_start":780,"line_end":780,"column_start":3,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224861,"byte_end":224864,"line_start":781,"line_end":781,"column_start":3,"column_end":6}},{"value":"/ * `[0, at)` stays in this vec","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224867,"byte_end":224900,"line_start":782,"line_end":782,"column_start":3,"column_end":36}},{"value":"/ * `[at, len)` ends up in the new vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224903,"byte_end":224944,"line_start":783,"line_end":783,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224947,"byte_end":224950,"line_start":784,"line_end":784,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224953,"byte_end":224966,"line_start":785,"line_end":785,"column_start":3,"column_end":16}},{"value":"/ * if at > len","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224969,"byte_end":224986,"line_start":786,"line_end":786,"column_start":3,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224989,"byte_end":224992,"line_start":787,"line_end":787,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":224995,"byte_end":225009,"line_start":788,"line_end":788,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225012,"byte_end":225015,"line_start":789,"line_end":789,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225018,"byte_end":225029,"line_start":790,"line_end":790,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225032,"byte_end":225053,"line_start":791,"line_end":791,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225056,"byte_end":225105,"line_start":792,"line_end":792,"column_start":3,"column_end":52}},{"value":"/ let av2 = av.split_off(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225108,"byte_end":225138,"line_start":793,"line_end":793,"column_start":3,"column_end":33}},{"value":"/ assert_eq!(&av[..], [1]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225141,"byte_end":225170,"line_start":794,"line_end":794,"column_start":3,"column_end":32}},{"value":"/ assert_eq!(&av2[..], [2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225173,"byte_end":225206,"line_start":795,"line_end":795,"column_start":3,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225209,"byte_end":225216,"line_start":796,"line_end":796,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225219,"byte_end":225228,"line_start":797,"line_end":797,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226865,"byte_end":226871,"line_start":845,"line_end":845,"column_start":10,"column_end":16},"name":"splice","qualname":"<ArrayVec<A>>::splice","value":"pub fn splice<R, I>(&mut Self, R, I)\n-> ArrayVecSplice<, A, core::iter::Fuse<I::IntoIter>> where\nR: RangeBounds<usize>, I: IntoIterator<Item = A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a splicing iterator that removes the specified range in the\n vector, yields the removed items, and replaces them with elements from\n the provided iterator.","sig":null,"attributes":[{"value":"/ Creates a splicing iterator that removes the specified range in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225833,"byte_end":225904,"line_start":818,"line_end":818,"column_start":3,"column_end":74}},{"value":"/ vector, yields the removed items, and replaces them with elements from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225907,"byte_end":225981,"line_start":819,"line_end":819,"column_start":3,"column_end":77}},{"value":"/ the provided iterator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":225984,"byte_end":226010,"line_start":820,"line_end":820,"column_start":3,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226013,"byte_end":226016,"line_start":821,"line_end":821,"column_start":3,"column_end":6}},{"value":"/ `splice` fuses the provided iterator, so elements after the first `None`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226019,"byte_end":226095,"line_start":822,"line_end":822,"column_start":3,"column_end":79}},{"value":"/ are ignored.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226098,"byte_end":226114,"line_start":823,"line_end":823,"column_start":3,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226117,"byte_end":226120,"line_start":824,"line_end":824,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226123,"byte_end":226136,"line_start":825,"line_end":825,"column_start":3,"column_end":16}},{"value":"/ * If the start is greater than the end.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226139,"byte_end":226182,"line_start":826,"line_end":826,"column_start":3,"column_end":46}},{"value":"/ * If the end is past the edge of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226185,"byte_end":226230,"line_start":827,"line_end":827,"column_start":3,"column_end":48}},{"value":"/ * If the provided iterator panics.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226233,"byte_end":226271,"line_start":828,"line_end":828,"column_start":3,"column_end":41}},{"value":"/ * If the new length would overflow the capacity of the array. Because","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226274,"byte_end":226347,"line_start":829,"line_end":829,"column_start":3,"column_end":76}},{"value":"/   `ArrayVecSplice` adds elements to this vec in its destructor when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226350,"byte_end":226421,"line_start":830,"line_end":830,"column_start":3,"column_end":74}},{"value":"/   necessary, this panic would occur when it is dropped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226424,"byte_end":226483,"line_start":831,"line_end":831,"column_start":3,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226486,"byte_end":226489,"line_start":832,"line_end":832,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226492,"byte_end":226506,"line_start":833,"line_end":833,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226509,"byte_end":226520,"line_start":834,"line_end":834,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226523,"byte_end":226542,"line_start":835,"line_end":835,"column_start":3,"column_end":22}},{"value":"/ let mut av = array_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226545,"byte_end":226594,"line_start":836,"line_end":836,"column_start":3,"column_end":52}},{"value":"/ let av2: ArrayVec<[i32; 4]> = av.splice(1.., 4..=6).collect();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226597,"byte_end":226663,"line_start":837,"line_end":837,"column_start":3,"column_end":69}},{"value":"/ assert_eq!(av.as_slice(), &[1, 4, 5, 6][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226666,"byte_end":226715,"line_start":838,"line_end":838,"column_start":3,"column_end":52}},{"value":"/ assert_eq!(av2.as_slice(), &[2, 3][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226718,"byte_end":226762,"line_start":839,"line_end":839,"column_start":3,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226765,"byte_end":226768,"line_start":840,"line_end":840,"column_start":3,"column_end":6}},{"value":"/ av.splice(.., None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226771,"byte_end":226795,"line_start":841,"line_end":841,"column_start":3,"column_end":27}},{"value":"/ assert_eq!(av.as_slice(), &[]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226798,"byte_end":226833,"line_start":842,"line_end":842,"column_start":3,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226836,"byte_end":226843,"line_start":843,"line_end":843,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":226846,"byte_end":226855,"line_start":844,"line_end":844,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228312,"byte_end":228323,"line_start":901,"line_end":901,"column_start":10,"column_end":21},"name":"swap_remove","qualname":"<ArrayVec<A>>::swap_remove","value":"pub fn swap_remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove an element, swapping the end of the vec into its place.","sig":null,"attributes":[{"value":"/ Remove an element, swapping the end of the vec into its place.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":227821,"byte_end":227887,"line_start":884,"line_end":884,"column_start":3,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":227890,"byte_end":227893,"line_start":885,"line_end":885,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":227896,"byte_end":227909,"line_start":886,"line_end":886,"column_start":3,"column_end":16}},{"value":"/ * If the index is out of bounds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":227912,"byte_end":227948,"line_start":887,"line_end":887,"column_start":3,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":227951,"byte_end":227954,"line_start":888,"line_end":888,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":227957,"byte_end":227971,"line_start":889,"line_end":889,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":227974,"byte_end":227985,"line_start":890,"line_end":890,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":227988,"byte_end":228009,"line_start":891,"line_end":891,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([&str; 4] => \"foo\", \"bar\", \"quack\", \"zap\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228012,"byte_end":228083,"line_start":892,"line_end":892,"column_start":3,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228086,"byte_end":228089,"line_start":893,"line_end":893,"column_start":3,"column_end":6}},{"value":"/ assert_eq!(av.swap_remove(1), \"bar\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228092,"byte_end":228133,"line_start":894,"line_end":894,"column_start":3,"column_end":44}},{"value":"/ assert_eq!(&av[..], [\"foo\", \"zap\", \"quack\"]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228136,"byte_end":228185,"line_start":895,"line_end":895,"column_start":3,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228188,"byte_end":228191,"line_start":896,"line_end":896,"column_start":3,"column_end":6}},{"value":"/ assert_eq!(av.swap_remove(0), \"foo\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228194,"byte_end":228235,"line_start":897,"line_end":897,"column_start":3,"column_end":44}},{"value":"/ assert_eq!(&av[..], [\"quack\", \"zap\"]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228238,"byte_end":228280,"line_start":898,"line_end":898,"column_start":3,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228283,"byte_end":228290,"line_start":899,"line_end":899,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228293,"byte_end":228302,"line_start":900,"line_end":900,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228797,"byte_end":228805,"line_start":920,"line_end":920,"column_start":10,"column_end":18},"name":"truncate","qualname":"<ArrayVec<A>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reduces the vec's length to the given value.","sig":null,"attributes":[{"value":"/ Reduces the vec's length to the given value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228652,"byte_end":228700,"line_start":916,"line_end":916,"column_start":3,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228703,"byte_end":228706,"line_start":917,"line_end":917,"column_start":3,"column_end":6}},{"value":"/ If the vec is already shorter than the input, nothing happens.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228709,"byte_end":228775,"line_start":918,"line_end":918,"column_start":3,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":228778,"byte_end":228787,"line_start":919,"line_end":919,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229510,"byte_end":229528,"line_start":947,"line_end":947,"column_start":10,"column_end":28},"name":"try_from_array_len","qualname":"<ArrayVec<A>>::try_from_array_len","value":"pub fn try_from_array_len(A, usize) -> Result<Self, A>","parent":null,"children":[],"decl_id":null,"docs":" Wraps an array, using the given length as the starting length.","sig":null,"attributes":[{"value":"/ Wraps an array, using the given length as the starting length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229156,"byte_end":229222,"line_start":937,"line_end":937,"column_start":3,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229225,"byte_end":229228,"line_start":938,"line_end":938,"column_start":3,"column_end":6}},{"value":"/ If you want to use the whole length of the array, you can just use the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229231,"byte_end":229305,"line_start":939,"line_end":939,"column_start":3,"column_end":77}},{"value":"/ `From` impl.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229308,"byte_end":229324,"line_start":940,"line_end":940,"column_start":3,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229327,"byte_end":229330,"line_start":941,"line_end":941,"column_start":3,"column_end":6}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229333,"byte_end":229347,"line_start":942,"line_end":942,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229350,"byte_end":229353,"line_start":943,"line_end":943,"column_start":3,"column_end":6}},{"value":"/ If the given length is greater than the capacity of the array this will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229356,"byte_end":229431,"line_start":944,"line_end":944,"column_start":3,"column_end":78}},{"value":"/ error, and you'll get the array back in the `Err`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229434,"byte_end":229488,"line_start":945,"line_end":945,"column_start":3,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":229491,"byte_end":229500,"line_start":946,"line_end":946,"column_start":3,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":231694,"byte_end":231708,"line_start":1031,"line_end":1031,"column_start":12,"column_end":26},"name":"ArrayVecSplice","qualname":"::arrayvec::ArrayVecSplice","value":"ArrayVecSplice {  }","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"decl_id":null,"docs":" Splicing iterator for `ArrayVec`\n See [`ArrayVec::splice`](ArrayVec::<A>::splice)\n","sig":null,"attributes":[{"value":"/ Splicing iterator for `ArrayVec`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":231594,"byte_end":231630,"line_start":1029,"line_end":1029,"column_start":1,"column_end":37}},{"value":"/ See [`ArrayVec::splice`](ArrayVec::<A>::splice)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":231631,"byte_end":231682,"line_start":1030,"line_end":1030,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235524,"byte_end":235540,"line_start":1206,"line_end":1206,"column_start":12,"column_end":28},"name":"ArrayVecIterator","qualname":"::arrayvec::ArrayVecIterator","value":"ArrayVecIterator {  }","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"decl_id":null,"docs":" Iterator for consuming an `ArrayVec` and returning owned elements.\n","sig":null,"attributes":[{"value":"/ Iterator for consuming an `ArrayVec` and returning owned elements.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235442,"byte_end":235512,"line_start":1205,"line_end":1205,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235728,"byte_end":235736,"line_start":1216,"line_end":1216,"column_start":10,"column_end":18},"name":"as_slice","qualname":"<ArrayVecIterator<A>>::as_slice","value":"pub fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a slice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235632,"byte_end":235692,"line_start":1213,"line_end":1213,"column_start":3,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235695,"byte_end":235704,"line_start":1214,"line_end":1214,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235707,"byte_end":235718,"line_start":1215,"line_end":1215,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244125,"byte_end":244149,"line_start":1582,"line_end":1582,"column_start":10,"column_end":34},"name":"drain_to_vec_and_reserve","qualname":"<ArrayVec<A>>::drain_to_vec_and_reserve","value":"pub fn drain_to_vec_and_reserve(&mut Self, usize) -> Vec<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Drains all elements to a Vec, but reserves additional space\n ```\n # use tinyvec::*;\n let mut av = array_vec!([i32; 7] => 1, 2, 3);\n let v = av.drain_to_vec_and_reserve(10);\n assert_eq!(v, &[1, 2, 3]);\n assert_eq!(v.capacity(), 13);\n ```\n","sig":null,"attributes":[{"value":"/ Drains all elements to a Vec, but reserves additional space","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243840,"byte_end":243903,"line_start":1574,"line_end":1574,"column_start":3,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243906,"byte_end":243913,"line_start":1575,"line_end":1575,"column_start":3,"column_end":10}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243916,"byte_end":243937,"line_start":1576,"line_end":1576,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 7] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243940,"byte_end":243989,"line_start":1577,"line_end":1577,"column_start":3,"column_end":52}},{"value":"/ let v = av.drain_to_vec_and_reserve(10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243992,"byte_end":244036,"line_start":1578,"line_end":1578,"column_start":3,"column_end":47}},{"value":"/ assert_eq!(v, &[1, 2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244039,"byte_end":244069,"line_start":1579,"line_end":1579,"column_start":3,"column_end":33}},{"value":"/ assert_eq!(v.capacity(), 13);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244072,"byte_end":244105,"line_start":1580,"line_end":1580,"column_start":3,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244108,"byte_end":244115,"line_start":1581,"line_end":1581,"column_start":3,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244603,"byte_end":244615,"line_start":1599,"line_end":1599,"column_start":10,"column_end":22},"name":"drain_to_vec","qualname":"<ArrayVec<A>>::drain_to_vec","value":"pub fn drain_to_vec(&mut Self) -> Vec<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Drains all elements to a Vec\n ```\n # use tinyvec::*;\n let mut av = array_vec!([i32; 7] => 1, 2, 3);\n let v = av.drain_to_vec();\n assert_eq!(v, &[1, 2, 3]);\n assert_eq!(v.capacity(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Drains all elements to a Vec","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244364,"byte_end":244396,"line_start":1591,"line_end":1591,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244399,"byte_end":244406,"line_start":1592,"line_end":1592,"column_start":3,"column_end":10}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244409,"byte_end":244430,"line_start":1593,"line_end":1593,"column_start":3,"column_end":24}},{"value":"/ let mut av = array_vec!([i32; 7] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244433,"byte_end":244482,"line_start":1594,"line_end":1594,"column_start":3,"column_end":52}},{"value":"/ let v = av.drain_to_vec();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244485,"byte_end":244515,"line_start":1595,"line_end":1595,"column_start":3,"column_end":33}},{"value":"/ assert_eq!(v, &[1, 2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244518,"byte_end":244548,"line_start":1596,"line_end":1596,"column_start":3,"column_end":33}},{"value":"/ assert_eq!(v.capacity(), 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244551,"byte_end":244583,"line_start":1597,"line_end":1597,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":244586,"byte_end":244593,"line_start":1598,"line_end":1598,"column_start":3,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":247314,"byte_end":247327,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"ArrayVecDrain","qualname":"::arrayvec_drain::ArrayVecDrain","value":"ArrayVecDrain {  }","parent":null,"children":[{"krate":0,"index":616}],"decl_id":null,"docs":" Draining iterator for [`ArrayVec`]","sig":null,"attributes":[{"value":"/ Draining iterator for [`ArrayVec`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":247215,"byte_end":247253,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":247254,"byte_end":247257,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See [`ArrayVec::drain`](ArrayVec::drain)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":247258,"byte_end":247302,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250031,"byte_end":250039,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"SliceVec","qualname":"::slicevec::SliceVec","value":"SliceVec {  }","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":" A slice-backed vector-like data structure.","sig":null,"attributes":[{"value":"/ A slice-backed vector-like data structure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249592,"byte_end":249638,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249639,"byte_end":249642,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a very similar concept to `ArrayVec`, but instead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249643,"byte_end":249704,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ of the backing memory being an owned array, the backing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249705,"byte_end":249764,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ memory is a unique-borrowed slice. You can thus create","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249765,"byte_end":249823,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ one of these structures \"around\" some slice that you're","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249824,"byte_end":249883,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/ working with to make it easier to manipulate.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249884,"byte_end":249933,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249934,"byte_end":249937,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Has a fixed capacity (the initial slice size).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249938,"byte_end":249990,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/ * Has a variable length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":249991,"byte_end":250019,"line_start":15,"line_end":15,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251056,"byte_end":251062,"line_start":71,"line_end":71,"column_start":10,"column_end":16},"name":"append","qualname":"<SliceVec>::append","value":"pub fn append(&mut Self, &mut Self) where T: Default","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251037,"byte_end":251046,"line_start":70,"line_end":70,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251370,"byte_end":251380,"line_start":87,"line_end":87,"column_start":10,"column_end":20},"name":"as_mut_ptr","qualname":"<SliceVec>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" A `*mut` pointer to the backing slice.","sig":null,"attributes":[{"value":"/ A `*mut` pointer to the backing slice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251189,"byte_end":251231,"line_start":80,"line_end":80,"column_start":3,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251234,"byte_end":251237,"line_start":81,"line_end":81,"column_start":3,"column_end":6}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251240,"byte_end":251253,"line_start":82,"line_end":82,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251256,"byte_end":251259,"line_start":83,"line_end":83,"column_start":3,"column_end":6}},{"value":"/ This pointer has provenance over the _entire_ backing slice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251262,"byte_end":251326,"line_start":84,"line_end":84,"column_start":3,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251329,"byte_end":251346,"line_start":85,"line_end":85,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251349,"byte_end":251360,"line_start":86,"line_end":86,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251533,"byte_end":251545,"line_start":94,"line_end":94,"column_start":10,"column_end":22},"name":"as_mut_slice","qualname":"<SliceVec>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Performs a `deref_mut`, into unique slice form.\n","sig":null,"attributes":[{"value":"/ Performs a `deref_mut`, into unique slice form.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251438,"byte_end":251489,"line_start":91,"line_end":91,"column_start":3,"column_end":54}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251492,"byte_end":251509,"line_start":92,"line_end":92,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251512,"byte_end":251523,"line_start":93,"line_end":93,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251782,"byte_end":251788,"line_start":105,"line_end":105,"column_start":10,"column_end":16},"name":"as_ptr","qualname":"<SliceVec>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" A `*const` pointer to the backing slice.","sig":null,"attributes":[{"value":"/ A `*const` pointer to the backing slice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251599,"byte_end":251643,"line_start":98,"line_end":98,"column_start":3,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251646,"byte_end":251649,"line_start":99,"line_end":99,"column_start":3,"column_end":6}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251652,"byte_end":251665,"line_start":100,"line_end":100,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251668,"byte_end":251671,"line_start":101,"line_end":101,"column_start":3,"column_end":6}},{"value":"/ This pointer has provenance over the _entire_ backing slice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251674,"byte_end":251738,"line_start":102,"line_end":102,"column_start":3,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251741,"byte_end":251758,"line_start":103,"line_end":103,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251761,"byte_end":251772,"line_start":104,"line_end":104,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251931,"byte_end":251939,"line_start":112,"line_end":112,"column_start":10,"column_end":18},"name":"as_slice","qualname":"<SliceVec>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Performs a `deref`, into shared slice form.\n","sig":null,"attributes":[{"value":"/ Performs a `deref`, into shared slice form.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251840,"byte_end":251887,"line_start":109,"line_end":109,"column_start":3,"column_end":50}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251890,"byte_end":251907,"line_start":110,"line_end":110,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251910,"byte_end":251921,"line_start":111,"line_end":111,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252118,"byte_end":252126,"line_start":121,"line_end":121,"column_start":10,"column_end":18},"name":"capacity","qualname":"<SliceVec>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The capacity of the `SliceVec`.","sig":null,"attributes":[{"value":"/ The capacity of the `SliceVec`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251981,"byte_end":252016,"line_start":116,"line_end":116,"column_start":3,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252019,"byte_end":252022,"line_start":117,"line_end":117,"column_start":3,"column_end":6}},{"value":"/ This the length of the initial backing slice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252025,"byte_end":252074,"line_start":118,"line_end":118,"column_start":3,"column_end":52}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252077,"byte_end":252094,"line_start":119,"line_end":119,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252097,"byte_end":252108,"line_start":120,"line_end":120,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252248,"byte_end":252253,"line_start":127,"line_end":127,"column_start":10,"column_end":15},"name":"clear","qualname":"<SliceVec>::clear","value":"pub fn clear(&mut Self) where T: Default","parent":null,"children":[],"decl_id":null,"docs":" Truncates the `SliceVec` down to length 0.\n","sig":null,"attributes":[{"value":"/ Truncates the `SliceVec` down to length 0.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252172,"byte_end":252218,"line_start":125,"line_end":125,"column_start":3,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252221,"byte_end":252238,"line_start":126,"line_end":126,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252956,"byte_end":252961,"line_start":154,"line_end":154,"column_start":10,"column_end":15},"name":"drain","qualname":"<SliceVec>::drain","value":"pub fn drain<'p, R: RangeBounds<usize>>(&'p mut Self, R) -> SliceVecDrain\nwhere T: Default","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in the vector\n and yields the removed items.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range in the vector","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252321,"byte_end":252399,"line_start":134,"line_end":134,"column_start":3,"column_end":81}},{"value":"/ and yields the removed items.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252402,"byte_end":252435,"line_start":135,"line_end":135,"column_start":3,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252438,"byte_end":252441,"line_start":136,"line_end":136,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252444,"byte_end":252457,"line_start":137,"line_end":137,"column_start":3,"column_end":16}},{"value":"/ * If the start is greater than the end","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252460,"byte_end":252502,"line_start":138,"line_end":138,"column_start":3,"column_end":45}},{"value":"/ * If the end is past the edge of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252505,"byte_end":252550,"line_start":139,"line_end":139,"column_start":3,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252553,"byte_end":252556,"line_start":140,"line_end":140,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252559,"byte_end":252573,"line_start":141,"line_end":141,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252576,"byte_end":252587,"line_start":142,"line_end":142,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252590,"byte_end":252611,"line_start":143,"line_end":143,"column_start":3,"column_end":24}},{"value":"/ let mut arr = [6, 7, 8];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252614,"byte_end":252642,"line_start":144,"line_end":144,"column_start":3,"column_end":31}},{"value":"/ let mut sv = SliceVec::from(&mut arr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252645,"byte_end":252687,"line_start":145,"line_end":145,"column_start":3,"column_end":45}},{"value":"/ let drained_values: ArrayVec<[i32; 4]> = sv.drain(1..).collect();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252690,"byte_end":252759,"line_start":146,"line_end":146,"column_start":3,"column_end":72}},{"value":"/ assert_eq!(sv.as_slice(), &[6][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252762,"byte_end":252802,"line_start":147,"line_end":147,"column_start":3,"column_end":43}},{"value":"/ assert_eq!(drained_values.as_slice(), &[7, 8][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252805,"byte_end":252860,"line_start":148,"line_end":148,"column_start":3,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252863,"byte_end":252866,"line_start":149,"line_end":149,"column_start":3,"column_end":6}},{"value":"/ sv.drain(..);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252869,"byte_end":252886,"line_start":150,"line_end":150,"column_start":3,"column_end":20}},{"value":"/ assert_eq!(sv.as_slice(), &[]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252889,"byte_end":252924,"line_start":151,"line_end":151,"column_start":3,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252927,"byte_end":252934,"line_start":152,"line_end":152,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":252937,"byte_end":252946,"line_start":153,"line_end":153,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":253826,"byte_end":253843,"line_start":192,"line_end":192,"column_start":10,"column_end":27},"name":"extend_from_slice","qualname":"<SliceVec>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[T]) where T: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":253807,"byte_end":253816,"line_start":191,"line_end":191,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255352,"byte_end":255356,"line_start":241,"line_end":241,"column_start":10,"column_end":14},"name":"fill","qualname":"<SliceVec>::fill","value":"pub fn fill<I: IntoIterator<Item = T>>(&mut Self, I) -> I::IntoIter","parent":null,"children":[],"decl_id":null,"docs":" Fill the vector until its capacity has been reached.","sig":null,"attributes":[{"value":"/ Fill the vector until its capacity has been reached.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254278,"byte_end":254334,"line_start":214,"line_end":214,"column_start":3,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254337,"byte_end":254340,"line_start":215,"line_end":215,"column_start":3,"column_end":6}},{"value":"/ Successively fills unused space in the spare slice of the vector with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254343,"byte_end":254416,"line_start":216,"line_end":216,"column_start":3,"column_end":76}},{"value":"/ elements from the iterator. It then returns the remaining iterator","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254419,"byte_end":254489,"line_start":217,"line_end":217,"column_start":3,"column_end":73}},{"value":"/ without exhausting it. This also allows appending the head of an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254492,"byte_end":254560,"line_start":218,"line_end":218,"column_start":3,"column_end":71}},{"value":"/ infinite iterator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254563,"byte_end":254585,"line_start":219,"line_end":219,"column_start":3,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254588,"byte_end":254591,"line_start":220,"line_end":220,"column_start":3,"column_end":6}},{"value":"/ This is an alternative to `Extend::extend` method for cases where the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254594,"byte_end":254667,"line_start":221,"line_end":221,"column_start":3,"column_end":76}},{"value":"/ length of the iterator can not be checked. Since this vector can not","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254670,"byte_end":254742,"line_start":222,"line_end":222,"column_start":3,"column_end":75}},{"value":"/ reallocate to increase its capacity, it is unclear what to do with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254745,"byte_end":254815,"line_start":223,"line_end":223,"column_start":3,"column_end":73}},{"value":"/ remaining elements in the iterator and the iterator itself. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254818,"byte_end":254885,"line_start":224,"line_end":224,"column_start":3,"column_end":70}},{"value":"/ interface also provides no way to communicate this to the caller.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254888,"byte_end":254957,"line_start":225,"line_end":225,"column_start":3,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254960,"byte_end":254963,"line_start":226,"line_end":226,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254966,"byte_end":254979,"line_start":227,"line_end":227,"column_start":3,"column_end":16}},{"value":"/ * If the `next` method of the provided iterator panics.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":254982,"byte_end":255041,"line_start":228,"line_end":228,"column_start":3,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255044,"byte_end":255047,"line_start":229,"line_end":229,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255050,"byte_end":255064,"line_start":230,"line_end":230,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255067,"byte_end":255070,"line_start":231,"line_end":231,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255073,"byte_end":255084,"line_start":232,"line_end":232,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255087,"byte_end":255108,"line_start":233,"line_end":233,"column_start":3,"column_end":24}},{"value":"/ let mut arr = [7, 7, 7, 7];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255111,"byte_end":255142,"line_start":234,"line_end":234,"column_start":3,"column_end":34}},{"value":"/ let mut sv = SliceVec::from_slice_len(&mut arr, 0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255145,"byte_end":255200,"line_start":235,"line_end":235,"column_start":3,"column_end":58}},{"value":"/ let mut to_inf = sv.fill(0..);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255203,"byte_end":255237,"line_start":236,"line_end":236,"column_start":3,"column_end":37}},{"value":"/ assert_eq!(&sv[..], [0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255240,"byte_end":255278,"line_start":237,"line_end":237,"column_start":3,"column_end":41}},{"value":"/ assert_eq!(to_inf.next(), Some(4));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255281,"byte_end":255320,"line_start":238,"line_end":238,"column_start":3,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255323,"byte_end":255330,"line_start":239,"line_end":239,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255333,"byte_end":255342,"line_start":240,"line_end":240,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255916,"byte_end":255930,"line_start":260,"line_end":260,"column_start":10,"column_end":24},"name":"from_slice_len","qualname":"<SliceVec>::from_slice_len","value":"pub fn from_slice_len(&'s mut [T], usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps up a slice and uses the given length as the initial length.","sig":null,"attributes":[{"value":"/ Wraps up a slice and uses the given length as the initial length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255576,"byte_end":255645,"line_start":249,"line_end":249,"column_start":3,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255648,"byte_end":255651,"line_start":250,"line_end":250,"column_start":3,"column_end":6}},{"value":"/ If you want to simply use the full slice, use `from` instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255654,"byte_end":255719,"line_start":251,"line_end":251,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255722,"byte_end":255725,"line_start":252,"line_end":252,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255728,"byte_end":255741,"line_start":253,"line_end":253,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255744,"byte_end":255747,"line_start":254,"line_end":254,"column_start":3,"column_end":6}},{"value":"/ * The length specified must be less than or equal to the capacity of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255750,"byte_end":255826,"line_start":255,"line_end":255,"column_start":3,"column_end":79}},{"value":"/   slice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255829,"byte_end":255841,"line_start":256,"line_end":256,"column_start":3,"column_end":15}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255844,"byte_end":255853,"line_start":257,"line_end":257,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255856,"byte_end":255867,"line_start":258,"line_end":258,"column_start":3,"column_end":14}},{"value":"allow(clippy :: match_wild_err_arm)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":255870,"byte_end":255906,"line_start":259,"line_end":259,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256541,"byte_end":256547,"line_start":283,"line_end":283,"column_start":10,"column_end":16},"name":"insert","qualname":"<SliceVec>::insert","value":"pub fn insert(&mut Self, usize, T)","parent":null,"children":[],"decl_id":null,"docs":" Inserts an item at the position given, moving all following elements +1\n index.","sig":null,"attributes":[{"value":"/ Inserts an item at the position given, moving all following elements +1","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256034,"byte_end":256109,"line_start":265,"line_end":265,"column_start":3,"column_end":78}},{"value":"/ index.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256112,"byte_end":256122,"line_start":266,"line_end":266,"column_start":3,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256125,"byte_end":256128,"line_start":267,"line_end":267,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256131,"byte_end":256144,"line_start":268,"line_end":268,"column_start":3,"column_end":16}},{"value":"/ * If `index` > `len`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256147,"byte_end":256171,"line_start":269,"line_end":269,"column_start":3,"column_end":27}},{"value":"/ * If the capacity is exhausted","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256174,"byte_end":256208,"line_start":270,"line_end":270,"column_start":3,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256211,"byte_end":256214,"line_start":271,"line_end":271,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256217,"byte_end":256231,"line_start":272,"line_end":272,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256234,"byte_end":256245,"line_start":273,"line_end":273,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256248,"byte_end":256269,"line_start":274,"line_end":274,"column_start":3,"column_end":24}},{"value":"/ let mut arr = [1, 2, 3, 0, 0];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256272,"byte_end":256306,"line_start":275,"line_end":275,"column_start":3,"column_end":37}},{"value":"/ let mut sv = SliceVec::from_slice_len(&mut arr, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256309,"byte_end":256364,"line_start":276,"line_end":276,"column_start":3,"column_end":58}},{"value":"/ sv.insert(1, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256367,"byte_end":256387,"line_start":277,"line_end":277,"column_start":3,"column_end":23}},{"value":"/ assert_eq!(sv.as_slice(), &[1, 4, 2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256390,"byte_end":256435,"line_start":278,"line_end":278,"column_start":3,"column_end":48}},{"value":"/ sv.insert(4, 5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256438,"byte_end":256458,"line_start":279,"line_end":279,"column_start":3,"column_end":23}},{"value":"/ assert_eq!(sv.as_slice(), &[1, 4, 2, 3, 5]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256461,"byte_end":256509,"line_start":280,"line_end":280,"column_start":3,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256512,"byte_end":256519,"line_start":281,"line_end":281,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256522,"byte_end":256531,"line_start":282,"line_end":282,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256917,"byte_end":256925,"line_start":297,"line_end":297,"column_start":10,"column_end":18},"name":"is_empty","qualname":"<SliceVec>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the length is 0.\n","sig":null,"attributes":[{"value":"/ Checks if the length is 0.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256843,"byte_end":256873,"line_start":294,"line_end":294,"column_start":3,"column_end":33}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256876,"byte_end":256893,"line_start":295,"line_end":295,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256896,"byte_end":256907,"line_start":296,"line_end":296,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257059,"byte_end":257062,"line_start":304,"line_end":304,"column_start":10,"column_end":13},"name":"len","qualname":"<SliceVec>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the `SliceVec` (in elements).\n","sig":null,"attributes":[{"value":"/ The length of the `SliceVec` (in elements).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":256968,"byte_end":257015,"line_start":301,"line_end":301,"column_start":3,"column_end":50}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257018,"byte_end":257035,"line_start":302,"line_end":302,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257038,"byte_end":257049,"line_start":303,"line_end":303,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257509,"byte_end":257512,"line_start":323,"line_end":323,"column_start":10,"column_end":13},"name":"pop","qualname":"<SliceVec>::pop","value":"pub fn pop(&mut Self) -> Option<T> where T: Default","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the last element of the vec, if there is one.","sig":null,"attributes":[{"value":"/ Remove and return the last element of the vec, if there is one.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257101,"byte_end":257168,"line_start":308,"line_end":308,"column_start":3,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257171,"byte_end":257174,"line_start":309,"line_end":309,"column_start":3,"column_end":6}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257177,"byte_end":257191,"line_start":310,"line_end":310,"column_start":3,"column_end":17}},{"value":"/ * If the vec is empty you get `None`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257194,"byte_end":257235,"line_start":311,"line_end":311,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257238,"byte_end":257241,"line_start":312,"line_end":312,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257244,"byte_end":257258,"line_start":313,"line_end":313,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257261,"byte_end":257272,"line_start":314,"line_end":314,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257275,"byte_end":257296,"line_start":315,"line_end":315,"column_start":3,"column_end":24}},{"value":"/ let mut arr = [1, 2];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257299,"byte_end":257324,"line_start":316,"line_end":316,"column_start":3,"column_end":28}},{"value":"/ let mut sv = SliceVec::from(&mut arr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257327,"byte_end":257369,"line_start":317,"line_end":317,"column_start":3,"column_end":45}},{"value":"/ assert_eq!(sv.pop(), Some(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257372,"byte_end":257406,"line_start":318,"line_end":318,"column_start":3,"column_end":37}},{"value":"/ assert_eq!(sv.pop(), Some(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257409,"byte_end":257443,"line_start":319,"line_end":319,"column_start":3,"column_end":37}},{"value":"/ assert_eq!(sv.pop(), None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257446,"byte_end":257477,"line_start":320,"line_end":320,"column_start":3,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257480,"byte_end":257487,"line_start":321,"line_end":321,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257490,"byte_end":257499,"line_start":322,"line_end":322,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258224,"byte_end":258228,"line_start":354,"line_end":354,"column_start":10,"column_end":14},"name":"push","qualname":"<SliceVec>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Place an element onto the end of the vec.","sig":null,"attributes":[{"value":"/ Place an element onto the end of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257709,"byte_end":257754,"line_start":336,"line_end":336,"column_start":3,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257757,"byte_end":257760,"line_start":337,"line_end":337,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257763,"byte_end":257776,"line_start":338,"line_end":338,"column_start":3,"column_end":16}},{"value":"/ * If the length of the vec would overflow the capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257779,"byte_end":257838,"line_start":339,"line_end":339,"column_start":3,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257841,"byte_end":257844,"line_start":340,"line_end":340,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257847,"byte_end":257861,"line_start":341,"line_end":341,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257864,"byte_end":257875,"line_start":342,"line_end":342,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257878,"byte_end":257899,"line_start":343,"line_end":343,"column_start":3,"column_end":24}},{"value":"/ let mut arr = [0, 0];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257902,"byte_end":257927,"line_start":344,"line_end":344,"column_start":3,"column_end":28}},{"value":"/ let mut sv = SliceVec::from_slice_len(&mut arr, 0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257930,"byte_end":257985,"line_start":345,"line_end":345,"column_start":3,"column_end":58}},{"value":"/ assert_eq!(&sv[..], []);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":257988,"byte_end":258016,"line_start":346,"line_end":346,"column_start":3,"column_end":31}},{"value":"/ sv.push(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258019,"byte_end":258034,"line_start":347,"line_end":347,"column_start":3,"column_end":18}},{"value":"/ assert_eq!(&sv[..], [1]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258037,"byte_end":258066,"line_start":348,"line_end":348,"column_start":3,"column_end":32}},{"value":"/ sv.push(2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258069,"byte_end":258084,"line_start":349,"line_end":349,"column_start":3,"column_end":18}},{"value":"/ assert_eq!(&sv[..], [1, 2]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258087,"byte_end":258119,"line_start":350,"line_end":350,"column_start":3,"column_end":35}},{"value":"/ // sv.push(3); this would overflow the ArrayVec and panic!","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258122,"byte_end":258184,"line_start":351,"line_end":351,"column_start":3,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258187,"byte_end":258194,"line_start":352,"line_end":352,"column_start":3,"column_end":10}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258197,"byte_end":258214,"line_start":353,"line_end":353,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258840,"byte_end":258846,"line_start":381,"line_end":381,"column_start":10,"column_end":16},"name":"remove","qualname":"<SliceVec>::remove","value":"pub fn remove(&mut Self, usize) -> T where T: Default","parent":null,"children":[],"decl_id":null,"docs":" Removes the item at `index`, shifting all others down by one index.","sig":null,"attributes":[{"value":"/ Removes the item at `index`, shifting all others down by one index.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258416,"byte_end":258487,"line_start":363,"line_end":363,"column_start":3,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258490,"byte_end":258493,"line_start":364,"line_end":364,"column_start":3,"column_end":6}},{"value":"/ Returns the removed element.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258496,"byte_end":258528,"line_start":365,"line_end":365,"column_start":3,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258531,"byte_end":258534,"line_start":366,"line_end":366,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258537,"byte_end":258550,"line_start":367,"line_end":367,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258553,"byte_end":258556,"line_start":368,"line_end":368,"column_start":3,"column_end":6}},{"value":"/ * If the index is out of bounds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258559,"byte_end":258595,"line_start":369,"line_end":369,"column_start":3,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258598,"byte_end":258601,"line_start":370,"line_end":370,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258604,"byte_end":258618,"line_start":371,"line_end":371,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258621,"byte_end":258624,"line_start":372,"line_end":372,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258627,"byte_end":258638,"line_start":373,"line_end":373,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258641,"byte_end":258662,"line_start":374,"line_end":374,"column_start":3,"column_end":24}},{"value":"/ let mut arr = [1, 2, 3];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258665,"byte_end":258693,"line_start":375,"line_end":375,"column_start":3,"column_end":31}},{"value":"/ let mut sv = SliceVec::from(&mut arr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258696,"byte_end":258738,"line_start":376,"line_end":376,"column_start":3,"column_end":45}},{"value":"/ assert_eq!(sv.remove(1), 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258741,"byte_end":258773,"line_start":377,"line_end":377,"column_start":3,"column_end":35}},{"value":"/ assert_eq!(&sv[..], [1, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258776,"byte_end":258808,"line_start":378,"line_end":378,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258811,"byte_end":258818,"line_start":379,"line_end":379,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":258821,"byte_end":258830,"line_start":380,"line_end":380,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259636,"byte_end":259642,"line_start":412,"line_end":412,"column_start":10,"column_end":16},"name":"resize","qualname":"<SliceVec>::resize","value":"pub fn resize(&mut Self, usize, T) where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" As [`resize_with`](SliceVec::resize_with)\n and it clones the value as the closure.","sig":null,"attributes":[{"value":"/ As [`resize_with`](SliceVec::resize_with)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259066,"byte_end":259111,"line_start":392,"line_end":392,"column_start":3,"column_end":48}},{"value":"/ and it clones the value as the closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259114,"byte_end":259157,"line_start":393,"line_end":393,"column_start":3,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259160,"byte_end":259163,"line_start":394,"line_end":394,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259166,"byte_end":259180,"line_start":395,"line_end":395,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259183,"byte_end":259186,"line_start":396,"line_end":396,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259189,"byte_end":259200,"line_start":397,"line_end":397,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259203,"byte_end":259224,"line_start":398,"line_end":398,"column_start":3,"column_end":24}},{"value":"/ // bigger","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259227,"byte_end":259240,"line_start":399,"line_end":399,"column_start":3,"column_end":16}},{"value":"/ let mut arr = [\"hello\", \"\", \"\", \"\", \"\"];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259243,"byte_end":259287,"line_start":400,"line_end":400,"column_start":3,"column_end":47}},{"value":"/ let mut sv = SliceVec::from_slice_len(&mut arr, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259290,"byte_end":259345,"line_start":401,"line_end":401,"column_start":3,"column_end":58}},{"value":"/ sv.resize(3, \"world\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259348,"byte_end":259374,"line_start":402,"line_end":402,"column_start":3,"column_end":29}},{"value":"/ assert_eq!(&sv[..], [\"hello\", \"world\", \"world\"]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259377,"byte_end":259430,"line_start":403,"line_end":403,"column_start":3,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259433,"byte_end":259436,"line_start":404,"line_end":404,"column_start":3,"column_end":6}},{"value":"/ // smaller","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259439,"byte_end":259453,"line_start":405,"line_end":405,"column_start":3,"column_end":17}},{"value":"/ let mut arr = ['a', 'b', 'c', 'd'];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259456,"byte_end":259495,"line_start":406,"line_end":406,"column_start":3,"column_end":42}},{"value":"/ let mut sv = SliceVec::from(&mut arr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259498,"byte_end":259540,"line_start":407,"line_end":407,"column_start":3,"column_end":45}},{"value":"/ sv.resize(2, 'z');","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259543,"byte_end":259565,"line_start":408,"line_end":408,"column_start":3,"column_end":25}},{"value":"/ assert_eq!(&sv[..], ['a', 'b']);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259568,"byte_end":259604,"line_start":409,"line_end":409,"column_start":3,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259607,"byte_end":259614,"line_start":410,"line_end":410,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259617,"byte_end":259626,"line_start":411,"line_end":411,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260586,"byte_end":260597,"line_start":446,"line_end":446,"column_start":10,"column_end":21},"name":"resize_with","qualname":"<SliceVec>::resize_with","value":"pub fn resize_with<F: FnMut() -> T>(&mut Self, usize, F)","parent":null,"children":[],"decl_id":null,"docs":" Resize the vec to the new length.","sig":null,"attributes":[{"value":"/ Resize the vec to the new length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259765,"byte_end":259802,"line_start":419,"line_end":419,"column_start":3,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259805,"byte_end":259808,"line_start":420,"line_end":420,"column_start":3,"column_end":6}},{"value":"/ * If it needs to be longer, it's filled with repeated calls to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259811,"byte_end":259881,"line_start":421,"line_end":421,"column_start":3,"column_end":73}},{"value":"/   provided function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259884,"byte_end":259908,"line_start":422,"line_end":422,"column_start":3,"column_end":27}},{"value":"/ * If it needs to be shorter, it's truncated.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259911,"byte_end":259959,"line_start":423,"line_end":423,"column_start":3,"column_end":51}},{"value":"/   * If the type needs to drop the truncated slots are filled with calls to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":259962,"byte_end":260040,"line_start":424,"line_end":424,"column_start":3,"column_end":81}},{"value":"/     the provided function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260043,"byte_end":260073,"line_start":425,"line_end":425,"column_start":3,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260076,"byte_end":260079,"line_start":426,"line_end":426,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260082,"byte_end":260096,"line_start":427,"line_end":427,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260099,"byte_end":260102,"line_start":428,"line_end":428,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260105,"byte_end":260116,"line_start":429,"line_end":429,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260119,"byte_end":260140,"line_start":430,"line_end":430,"column_start":3,"column_end":24}},{"value":"/ let mut arr = [1, 2, 3, 7, 7, 7, 7];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260143,"byte_end":260183,"line_start":431,"line_end":431,"column_start":3,"column_end":43}},{"value":"/ let mut sv = SliceVec::from_slice_len(&mut arr, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260186,"byte_end":260241,"line_start":432,"line_end":432,"column_start":3,"column_end":58}},{"value":"/ sv.resize_with(5, Default::default);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260244,"byte_end":260284,"line_start":433,"line_end":433,"column_start":3,"column_end":43}},{"value":"/ assert_eq!(&sv[..], [1, 2, 3, 0, 0]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260287,"byte_end":260328,"line_start":434,"line_end":434,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260331,"byte_end":260334,"line_start":435,"line_end":435,"column_start":3,"column_end":6}},{"value":"/ let mut arr = [0, 0, 0, 0];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260337,"byte_end":260368,"line_start":436,"line_end":436,"column_start":3,"column_end":34}},{"value":"/ let mut sv = SliceVec::from_slice_len(&mut arr, 0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260371,"byte_end":260426,"line_start":437,"line_end":437,"column_start":3,"column_end":58}},{"value":"/ let mut p = 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260429,"byte_end":260447,"line_start":438,"line_end":438,"column_start":3,"column_end":21}},{"value":"/ sv.resize_with(4, || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260450,"byte_end":260476,"line_start":439,"line_end":439,"column_start":3,"column_end":29}},{"value":"/   p *= 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260479,"byte_end":260492,"line_start":440,"line_end":440,"column_start":3,"column_end":16}},{"value":"/   p","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260495,"byte_end":260502,"line_start":441,"line_end":441,"column_start":3,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260505,"byte_end":260512,"line_start":442,"line_end":442,"column_start":3,"column_end":10}},{"value":"/ assert_eq!(&sv[..], [2, 4, 8, 16]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260515,"byte_end":260554,"line_start":443,"line_end":443,"column_start":3,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260557,"byte_end":260564,"line_start":444,"line_end":444,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":260567,"byte_end":260576,"line_start":445,"line_end":445,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261380,"byte_end":261386,"line_start":479,"line_end":479,"column_start":10,"column_end":16},"name":"retain","qualname":"<SliceVec>::retain","value":"pub fn retain<F: FnMut(&T) -> bool>(&mut Self, F) where T: Default","parent":null,"children":[],"decl_id":null,"docs":" Walk the vec and keep only the elements that pass the predicate given.","sig":null,"attributes":[{"value":"/ Walk the vec and keep only the elements that pass the predicate given.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261047,"byte_end":261121,"line_start":466,"line_end":466,"column_start":3,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261124,"byte_end":261127,"line_start":467,"line_end":467,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261130,"byte_end":261144,"line_start":468,"line_end":468,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261147,"byte_end":261150,"line_start":469,"line_end":469,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261153,"byte_end":261164,"line_start":470,"line_end":470,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261167,"byte_end":261188,"line_start":471,"line_end":471,"column_start":3,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261191,"byte_end":261194,"line_start":472,"line_end":472,"column_start":3,"column_end":6}},{"value":"/ let mut arr = [1, 1, 2, 3, 3, 4];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261197,"byte_end":261234,"line_start":473,"line_end":473,"column_start":3,"column_end":40}},{"value":"/ let mut sv = SliceVec::from(&mut arr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261237,"byte_end":261279,"line_start":474,"line_end":474,"column_start":3,"column_end":45}},{"value":"/ sv.retain(|&x| x % 2 == 0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261282,"byte_end":261313,"line_start":475,"line_end":475,"column_start":3,"column_end":34}},{"value":"/ assert_eq!(&sv[..], [2, 4]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261316,"byte_end":261348,"line_start":476,"line_end":476,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261351,"byte_end":261358,"line_start":477,"line_end":477,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261361,"byte_end":261370,"line_start":478,"line_end":478,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262748,"byte_end":262755,"line_start":524,"line_end":524,"column_start":10,"column_end":17},"name":"set_len","qualname":"<SliceVec>::set_len","value":"pub fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Forces the length of the vector to `new_len`.","sig":null,"attributes":[{"value":"/ Forces the length of the vector to `new_len`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262306,"byte_end":262355,"line_start":513,"line_end":513,"column_start":3,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262358,"byte_end":262361,"line_start":514,"line_end":514,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262364,"byte_end":262377,"line_start":515,"line_end":515,"column_start":3,"column_end":16}},{"value":"/ * If `new_len` is greater than the vec's capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262380,"byte_end":262434,"line_start":516,"line_end":516,"column_start":3,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262437,"byte_end":262440,"line_start":517,"line_end":517,"column_start":3,"column_end":6}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262443,"byte_end":262456,"line_start":518,"line_end":518,"column_start":3,"column_end":16}},{"value":"/ * This is a fully safe operation! The inactive memory already counts as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262459,"byte_end":262534,"line_start":519,"line_end":519,"column_start":3,"column_end":78}},{"value":"/   \"initialized\" by Rust's rules.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262537,"byte_end":262573,"line_start":520,"line_end":520,"column_start":3,"column_end":39}},{"value":"/ * Other than \"the memory is initialized\" there are no other guarantees","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262576,"byte_end":262650,"line_start":521,"line_end":521,"column_start":3,"column_end":77}},{"value":"/   regarding what you find in the inactive portion of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262653,"byte_end":262718,"line_start":522,"line_end":522,"column_start":3,"column_end":68}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":262721,"byte_end":262738,"line_start":523,"line_end":523,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263782,"byte_end":263791,"line_start":559,"line_end":559,"column_start":10,"column_end":19},"name":"split_off","qualname":"<SliceVec>::split_off","value":"pub fn split_off<'a>(&'a mut Self, usize) -> SliceVec","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection at the point given.","sig":null,"attributes":[{"value":"/ Splits the collection at the point given.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263268,"byte_end":263313,"line_start":540,"line_end":540,"column_start":3,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263316,"byte_end":263319,"line_start":541,"line_end":541,"column_start":3,"column_end":6}},{"value":"/ * `[0, at)` stays in this vec (and this vec is now full).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263322,"byte_end":263383,"line_start":542,"line_end":542,"column_start":3,"column_end":64}},{"value":"/ * `[at, len)` ends up in the new vec (with any spare capacity).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263386,"byte_end":263453,"line_start":543,"line_end":543,"column_start":3,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263456,"byte_end":263459,"line_start":544,"line_end":544,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263462,"byte_end":263475,"line_start":545,"line_end":545,"column_start":3,"column_end":16}},{"value":"/ * if `at` > `self.len()`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263478,"byte_end":263506,"line_start":546,"line_end":546,"column_start":3,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263509,"byte_end":263512,"line_start":547,"line_end":547,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263515,"byte_end":263529,"line_start":548,"line_end":548,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263532,"byte_end":263535,"line_start":549,"line_end":549,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263538,"byte_end":263549,"line_start":550,"line_end":550,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263552,"byte_end":263573,"line_start":551,"line_end":551,"column_start":3,"column_end":24}},{"value":"/ let mut arr = [1, 2, 3];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263576,"byte_end":263604,"line_start":552,"line_end":552,"column_start":3,"column_end":31}},{"value":"/ let mut sv = SliceVec::from(&mut arr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263607,"byte_end":263649,"line_start":553,"line_end":553,"column_start":3,"column_end":45}},{"value":"/ let sv2 = sv.split_off(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263652,"byte_end":263682,"line_start":554,"line_end":554,"column_start":3,"column_end":33}},{"value":"/ assert_eq!(&sv[..], [1]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263685,"byte_end":263714,"line_start":555,"line_end":555,"column_start":3,"column_end":32}},{"value":"/ assert_eq!(&sv2[..], [2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263717,"byte_end":263750,"line_start":556,"line_end":556,"column_start":3,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263753,"byte_end":263760,"line_start":557,"line_end":557,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":263763,"byte_end":263772,"line_start":558,"line_end":558,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264615,"byte_end":264626,"line_start":588,"line_end":588,"column_start":10,"column_end":21},"name":"swap_remove","qualname":"<SliceVec>::swap_remove","value":"pub fn swap_remove(&mut Self, usize) -> T where T: Default","parent":null,"children":[],"decl_id":null,"docs":" Remove an element, swapping the end of the vec into its place.","sig":null,"attributes":[{"value":"/ Remove an element, swapping the end of the vec into its place.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264101,"byte_end":264167,"line_start":570,"line_end":570,"column_start":3,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264170,"byte_end":264173,"line_start":571,"line_end":571,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264176,"byte_end":264189,"line_start":572,"line_end":572,"column_start":3,"column_end":16}},{"value":"/ * If the index is out of bounds.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264192,"byte_end":264228,"line_start":573,"line_end":573,"column_start":3,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264231,"byte_end":264234,"line_start":574,"line_end":574,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264237,"byte_end":264251,"line_start":575,"line_end":575,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264254,"byte_end":264265,"line_start":576,"line_end":576,"column_start":3,"column_end":14}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264268,"byte_end":264289,"line_start":577,"line_end":577,"column_start":3,"column_end":24}},{"value":"/ let mut arr = [\"foo\", \"bar\", \"quack\", \"zap\"];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264292,"byte_end":264341,"line_start":578,"line_end":578,"column_start":3,"column_end":52}},{"value":"/ let mut sv = SliceVec::from(&mut arr);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264344,"byte_end":264386,"line_start":579,"line_end":579,"column_start":3,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264389,"byte_end":264392,"line_start":580,"line_end":580,"column_start":3,"column_end":6}},{"value":"/ assert_eq!(sv.swap_remove(1), \"bar\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264395,"byte_end":264436,"line_start":581,"line_end":581,"column_start":3,"column_end":44}},{"value":"/ assert_eq!(&sv[..], [\"foo\", \"zap\", \"quack\"]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264439,"byte_end":264488,"line_start":582,"line_end":582,"column_start":3,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264491,"byte_end":264494,"line_start":583,"line_end":583,"column_start":3,"column_end":6}},{"value":"/ assert_eq!(sv.swap_remove(0), \"foo\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264497,"byte_end":264538,"line_start":584,"line_end":584,"column_start":3,"column_end":44}},{"value":"/ assert_eq!(&sv[..], [\"quack\", \"zap\"]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264541,"byte_end":264583,"line_start":585,"line_end":585,"column_start":3,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264586,"byte_end":264593,"line_start":586,"line_end":586,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264596,"byte_end":264605,"line_start":587,"line_end":587,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265116,"byte_end":265124,"line_start":610,"line_end":610,"column_start":10,"column_end":18},"name":"truncate","qualname":"<SliceVec>::truncate","value":"pub fn truncate(&mut Self, usize) where T: Default","parent":null,"children":[],"decl_id":null,"docs":" Reduces the vec's length to the given value.","sig":null,"attributes":[{"value":"/ Reduces the vec's length to the given value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":264971,"byte_end":265019,"line_start":606,"line_end":606,"column_start":3,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265022,"byte_end":265025,"line_start":607,"line_end":607,"column_start":3,"column_end":6}},{"value":"/ If the vec is already shorter than the input, nothing happens.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265028,"byte_end":265094,"line_start":608,"line_end":608,"column_start":3,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265097,"byte_end":265106,"line_start":609,"line_end":609,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265640,"byte_end":265658,"line_start":633,"line_end":633,"column_start":10,"column_end":28},"name":"try_from_slice_len","qualname":"<SliceVec>::try_from_slice_len","value":"pub fn try_from_slice_len(&'s mut [T], usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a slice, using the given length as the starting length.","sig":null,"attributes":[{"value":"/ Wraps a slice, using the given length as the starting length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265334,"byte_end":265399,"line_start":623,"line_end":623,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265402,"byte_end":265405,"line_start":624,"line_end":624,"column_start":3,"column_end":6}},{"value":"/ If you want to use the whole length of the slice, you can just use the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265408,"byte_end":265482,"line_start":625,"line_end":625,"column_start":3,"column_end":77}},{"value":"/ `From` impl.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265485,"byte_end":265501,"line_start":626,"line_end":626,"column_start":3,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265504,"byte_end":265507,"line_start":627,"line_end":627,"column_start":3,"column_end":6}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265510,"byte_end":265524,"line_start":628,"line_end":628,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265527,"byte_end":265530,"line_start":629,"line_end":629,"column_start":3,"column_end":6}},{"value":"/ If the given length is greater than the length of the slice you get","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265533,"byte_end":265604,"line_start":630,"line_end":630,"column_start":3,"column_end":74}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265607,"byte_end":265618,"line_start":631,"line_end":631,"column_start":3,"column_end":14}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":265621,"byte_end":265630,"line_start":632,"line_end":632,"column_start":3,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":267703,"byte_end":267716,"line_start":716,"line_end":716,"column_start":12,"column_end":25},"name":"SliceVecDrain","qualname":"::slicevec::SliceVecDrain","value":"SliceVecDrain {  }","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736}],"decl_id":null,"docs":" Draining iterator for [`SliceVec`]","sig":null,"attributes":[{"value":"/ Draining iterator for [`SliceVec`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":267604,"byte_end":267642,"line_start":713,"line_end":713,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":267643,"byte_end":267646,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ See [`SliceVec::drain`](SliceVec::drain)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":267647,"byte_end":267691,"line_start":715,"line_end":715,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277434,"byte_end":277440,"line_start":68,"line_end":68,"column_start":3,"column_end":9},"name":"Inline","qualname":"::tinyvec::TinyVecConstructor::Inline","value":"TinyVecConstructor::Inline(fn(: ArrayVec<A>) -> TinyVec<A>)","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277475,"byte_end":277479,"line_start":69,"line_end":69,"column_start":3,"column_end":7},"name":"Heap","qualname":"::tinyvec::TinyVecConstructor::Heap","value":"TinyVecConstructor::Heap(fn(: Vec<A::Item>) -> TinyVec<A>)","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277401,"byte_end":277419,"line_start":67,"line_end":67,"column_start":10,"column_end":28},"name":"TinyVecConstructor","qualname":"::tinyvec::TinyVecConstructor","value":"pub enum TinyVecConstructor<A: Array> {\n    Inline(fn(: ArrayVec<A>) -> TinyVec<A>),\n    Heap(fn(: Vec<A::Item>) -> TinyVec<A>),\n}","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278385,"byte_end":278391,"line_start":97,"line_end":97,"column_start":3,"column_end":9},"name":"Inline","qualname":"::tinyvec::TinyVec::Inline","value":"TinyVec::Inline(ArrayVec<A>)","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278360,"byte_end":278382,"line_start":96,"line_end":96,"column_start":3,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278433,"byte_end":278437,"line_start":99,"line_end":99,"column_start":3,"column_end":7},"name":"Heap","qualname":"::tinyvec::TinyVec::Heap","value":"TinyVec::Heap(Vec<A::Item>)","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278408,"byte_end":278430,"line_start":98,"line_end":98,"column_start":3,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278338,"byte_end":278345,"line_start":95,"line_end":95,"column_start":10,"column_end":17},"name":"TinyVec","qualname":"::tinyvec::TinyVec","value":"pub enum TinyVec<A: Array> {\n\n    #[allow(missing_docs)]\n    Inline(ArrayVec<A>),\n\n    #[allow(missing_docs)]\n    Heap(Vec<A::Item>),\n}","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1098}],"decl_id":null,"docs":" A vector that starts inline, but can automatically move to the heap.","sig":null,"attributes":[{"value":"/ A vector that starts inline, but can automatically move to the heap.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277516,"byte_end":277588,"line_start":72,"line_end":72,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277589,"byte_end":277592,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ * Requires the `alloc` feature","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277593,"byte_end":277627,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277628,"byte_end":277631,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A `TinyVec` is either an Inline([`ArrayVec`](crate::ArrayVec::<A>)) or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277632,"byte_end":277706,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ Heap([`Vec`](https://doc.rust-lang.org/alloc/vec/struct.Vec.html)). The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277707,"byte_end":277782,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ interface for the type as a whole is a bunch of methods that just match on","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277783,"byte_end":277861,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ the enum variant and then call the same method on the inner vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277862,"byte_end":277930,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277931,"byte_end":277934,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ## Construction","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277935,"byte_end":277954,"line_start":81,"line_end":81,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277955,"byte_end":277958,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Because it's an enum, you can construct a `TinyVec` simply by making an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":277959,"byte_end":278034,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ `ArrayVec` or `Vec` and then putting it into the enum.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278035,"byte_end":278093,"line_start":84,"line_end":84,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278094,"byte_end":278097,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ There is also a macro","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278098,"byte_end":278123,"line_start":86,"line_end":86,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278124,"byte_end":278127,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278128,"byte_end":278139,"line_start":88,"line_end":88,"column_start":1,"column_end":12}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278140,"byte_end":278161,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/ let empty_tv = tiny_vec!([u8; 16]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278162,"byte_end":278201,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/ let some_ints = tiny_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278202,"byte_end":278253,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278254,"byte_end":278261,"line_start":92,"line_end":92,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280290,"byte_end":280297,"line_start":184,"line_end":184,"column_start":10,"column_end":17},"name":"is_heap","qualname":"<TinyVec<A>>::is_heap","value":"pub fn is_heap(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether elements are on heap\n","sig":null,"attributes":[{"value":"/ Returns whether elements are on heap","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280206,"byte_end":280246,"line_start":181,"line_end":181,"column_start":3,"column_end":43}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280249,"byte_end":280266,"line_start":182,"line_end":182,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280269,"byte_end":280280,"line_start":183,"line_end":183,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280496,"byte_end":280505,"line_start":193,"line_end":193,"column_start":10,"column_end":19},"name":"is_inline","qualname":"<TinyVec<A>>::is_inline","value":"pub fn is_inline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether elements are on stack\n","sig":null,"attributes":[{"value":"/ Returns whether elements are on stack","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280411,"byte_end":280452,"line_start":190,"line_end":190,"column_start":3,"column_end":44}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280455,"byte_end":280472,"line_start":191,"line_end":191,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280475,"byte_end":280486,"line_start":192,"line_end":192,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280914,"byte_end":280927,"line_start":208,"line_end":208,"column_start":10,"column_end":23},"name":"shrink_to_fit","qualname":"<TinyVec<A>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the vector as much as possible.\\\n It is inlined if length is less than `A::CAPACITY`.\n ```rust\n use tinyvec::*;\n let mut tv = tiny_vec!([i32; 2] => 1, 2, 3);\n assert!(tv.is_heap());\n let _ = tv.pop();\n assert!(tv.is_heap());\n tv.shrink_to_fit();\n assert!(tv.is_inline());\n ```\n","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the vector as much as possible.\\","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280550,"byte_end":280610,"line_start":197,"line_end":197,"column_start":3,"column_end":63}},{"value":"/ It is inlined if length is less than `A::CAPACITY`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280613,"byte_end":280668,"line_start":198,"line_end":198,"column_start":3,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280671,"byte_end":280682,"line_start":199,"line_end":199,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280685,"byte_end":280704,"line_start":200,"line_end":200,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 2] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280707,"byte_end":280755,"line_start":201,"line_end":201,"column_start":3,"column_end":51}},{"value":"/ assert!(tv.is_heap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280758,"byte_end":280784,"line_start":202,"line_end":202,"column_start":3,"column_end":29}},{"value":"/ let _ = tv.pop();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280787,"byte_end":280808,"line_start":203,"line_end":203,"column_start":3,"column_end":24}},{"value":"/ assert!(tv.is_heap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280811,"byte_end":280837,"line_start":204,"line_end":204,"column_start":3,"column_end":29}},{"value":"/ tv.shrink_to_fit();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280840,"byte_end":280863,"line_start":205,"line_end":205,"column_start":3,"column_end":26}},{"value":"/ assert!(tv.is_inline());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280866,"byte_end":280894,"line_start":206,"line_end":206,"column_start":3,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280897,"byte_end":280904,"line_start":207,"line_end":207,"column_start":3,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281644,"byte_end":281660,"line_start":235,"line_end":235,"column_start":10,"column_end":26},"name":"move_to_the_heap","qualname":"<TinyVec<A>>::move_to_the_heap","value":"pub fn move_to_the_heap(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Moves the content of the TinyVec to the heap, if it's inline.\n ```rust\n use tinyvec::*;\n let mut tv = tiny_vec!([i32; 4] => 1, 2, 3);\n assert!(tv.is_inline());\n tv.move_to_the_heap();\n assert!(tv.is_heap());\n ```\n","sig":null,"attributes":[{"value":"/ Moves the content of the TinyVec to the heap, if it's inline.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281332,"byte_end":281397,"line_start":226,"line_end":226,"column_start":3,"column_end":68}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281400,"byte_end":281411,"line_start":227,"line_end":227,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281414,"byte_end":281433,"line_start":228,"line_end":228,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281436,"byte_end":281484,"line_start":229,"line_end":229,"column_start":3,"column_end":51}},{"value":"/ assert!(tv.is_inline());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281487,"byte_end":281515,"line_start":230,"line_end":230,"column_start":3,"column_end":31}},{"value":"/ tv.move_to_the_heap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281518,"byte_end":281544,"line_start":231,"line_end":231,"column_start":3,"column_end":29}},{"value":"/ assert!(tv.is_heap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281547,"byte_end":281573,"line_start":232,"line_end":232,"column_start":3,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281576,"byte_end":281583,"line_start":233,"line_end":233,"column_start":3,"column_end":10}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281586,"byte_end":281634,"line_start":234,"line_end":234,"column_start":3,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282189,"byte_end":282217,"line_start":255,"line_end":255,"column_start":10,"column_end":38},"name":"move_to_the_heap_and_reserve","qualname":"<TinyVec<A>>::move_to_the_heap_and_reserve","value":"pub fn move_to_the_heap_and_reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" If TinyVec is inline, moves the content of it to the heap.\n Also reserves additional space.\n ```rust\n use tinyvec::*;\n let mut tv = tiny_vec!([i32; 4] => 1, 2, 3);\n assert!(tv.is_inline());\n tv.move_to_the_heap_and_reserve(32);\n assert!(tv.is_heap());\n assert!(tv.capacity() >= 35);\n ```\n","sig":null,"attributes":[{"value":"/ If TinyVec is inline, moves the content of it to the heap.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281843,"byte_end":281905,"line_start":245,"line_end":245,"column_start":3,"column_end":65}},{"value":"/ Also reserves additional space.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281908,"byte_end":281943,"line_start":246,"line_end":246,"column_start":3,"column_end":38}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281946,"byte_end":281957,"line_start":247,"line_end":247,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281960,"byte_end":281979,"line_start":248,"line_end":248,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":281982,"byte_end":282030,"line_start":249,"line_end":249,"column_start":3,"column_end":51}},{"value":"/ assert!(tv.is_inline());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282033,"byte_end":282061,"line_start":250,"line_end":250,"column_start":3,"column_end":31}},{"value":"/ tv.move_to_the_heap_and_reserve(32);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282064,"byte_end":282104,"line_start":251,"line_end":251,"column_start":3,"column_end":43}},{"value":"/ assert!(tv.is_heap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282107,"byte_end":282133,"line_start":252,"line_end":252,"column_start":3,"column_end":29}},{"value":"/ assert!(tv.capacity() >= 35);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282136,"byte_end":282169,"line_start":253,"line_end":253,"column_start":3,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282172,"byte_end":282179,"line_start":254,"line_end":254,"column_start":3,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282751,"byte_end":282758,"line_start":275,"line_end":275,"column_start":10,"column_end":17},"name":"reserve","qualname":"<TinyVec<A>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves additional space.\n Moves to the heap if array can't hold `n` more items\n ```rust\n use tinyvec::*;\n let mut tv = tiny_vec!([i32; 4] => 1, 2, 3, 4);\n assert!(tv.is_inline());\n tv.reserve(1);\n assert!(tv.is_heap());\n assert!(tv.capacity() >= 5);\n ```\n","sig":null,"attributes":[{"value":"/ Reserves additional space.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282436,"byte_end":282466,"line_start":265,"line_end":265,"column_start":3,"column_end":33}},{"value":"/ Moves to the heap if array can't hold `n` more items","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282469,"byte_end":282525,"line_start":266,"line_end":266,"column_start":3,"column_end":59}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282528,"byte_end":282539,"line_start":267,"line_end":267,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282542,"byte_end":282561,"line_start":268,"line_end":268,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 4] => 1, 2, 3, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282564,"byte_end":282615,"line_start":269,"line_end":269,"column_start":3,"column_end":54}},{"value":"/ assert!(tv.is_inline());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282618,"byte_end":282646,"line_start":270,"line_end":270,"column_start":3,"column_end":31}},{"value":"/ tv.reserve(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282649,"byte_end":282667,"line_start":271,"line_end":271,"column_start":3,"column_end":21}},{"value":"/ assert!(tv.is_heap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282670,"byte_end":282696,"line_start":272,"line_end":272,"column_start":3,"column_end":29}},{"value":"/ assert!(tv.capacity() >= 5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282699,"byte_end":282731,"line_start":273,"line_end":273,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":282734,"byte_end":282741,"line_start":274,"line_end":274,"column_start":3,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283784,"byte_end":283797,"line_start":307,"line_end":307,"column_start":10,"column_end":23},"name":"reserve_exact","qualname":"<TinyVec<A>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves additional space.\n Moves to the heap if array can't hold `n` more items","sig":null,"attributes":[{"value":"/ Reserves additional space.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283114,"byte_end":283144,"line_start":290,"line_end":290,"column_start":3,"column_end":33}},{"value":"/ Moves to the heap if array can't hold `n` more items","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283147,"byte_end":283203,"line_start":291,"line_end":291,"column_start":3,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283206,"byte_end":283209,"line_start":292,"line_end":292,"column_start":3,"column_end":6}},{"value":"/ From [Vec::reserve_exact](https://doc.rust-lang.org/std/vec/struct.Vec.html#method.reserve_exact)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283212,"byte_end":283313,"line_start":293,"line_end":293,"column_start":3,"column_end":104}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283316,"byte_end":283327,"line_start":294,"line_end":294,"column_start":3,"column_end":14}},{"value":"/ Note that the allocator may give the collection more space than it requests.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283330,"byte_end":283410,"line_start":295,"line_end":295,"column_start":3,"column_end":83}},{"value":"/ Therefore, capacity can not be relied upon to be precisely minimal.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283413,"byte_end":283484,"line_start":296,"line_end":296,"column_start":3,"column_end":74}},{"value":"/ Prefer `reserve` if future insertions are expected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283487,"byte_end":283542,"line_start":297,"line_end":297,"column_start":3,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283545,"byte_end":283552,"line_start":298,"line_end":298,"column_start":3,"column_end":10}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283555,"byte_end":283566,"line_start":299,"line_end":299,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283569,"byte_end":283588,"line_start":300,"line_end":300,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 4] => 1, 2, 3, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283591,"byte_end":283642,"line_start":301,"line_end":301,"column_start":3,"column_end":54}},{"value":"/ assert!(tv.is_inline());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283645,"byte_end":283673,"line_start":302,"line_end":302,"column_start":3,"column_end":31}},{"value":"/ tv.reserve_exact(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283676,"byte_end":283700,"line_start":303,"line_end":303,"column_start":3,"column_end":27}},{"value":"/ assert!(tv.is_heap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283703,"byte_end":283729,"line_start":304,"line_end":304,"column_start":3,"column_end":29}},{"value":"/ assert!(tv.capacity() >= 5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283732,"byte_end":283764,"line_start":305,"line_end":305,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":283767,"byte_end":283774,"line_start":306,"line_end":306,"column_start":3,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284690,"byte_end":284703,"line_start":338,"line_end":338,"column_start":10,"column_end":23},"name":"with_capacity","qualname":"<TinyVec<A>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new TinyVec with _at least_ the given capacity.","sig":null,"attributes":[{"value":"/ Makes a new TinyVec with _at least_ the given capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284159,"byte_end":284218,"line_start":322,"line_end":322,"column_start":3,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284221,"byte_end":284224,"line_start":323,"line_end":323,"column_start":3,"column_end":6}},{"value":"/ If the requested capacity is less than or equal to the array capacity you","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284227,"byte_end":284304,"line_start":324,"line_end":324,"column_start":3,"column_end":80}},{"value":"/ get an inline vec. If it's greater than you get a heap vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284307,"byte_end":284370,"line_start":325,"line_end":325,"column_start":3,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284373,"byte_end":284380,"line_start":326,"line_end":326,"column_start":3,"column_end":10}},{"value":"/ # use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284383,"byte_end":284404,"line_start":327,"line_end":327,"column_start":3,"column_end":24}},{"value":"/ let t = TinyVec::<[u8; 10]>::with_capacity(5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284407,"byte_end":284457,"line_start":328,"line_end":328,"column_start":3,"column_end":53}},{"value":"/ assert!(t.is_inline());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284460,"byte_end":284487,"line_start":329,"line_end":329,"column_start":3,"column_end":30}},{"value":"/ assert!(t.capacity() >= 5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284490,"byte_end":284521,"line_start":330,"line_end":330,"column_start":3,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284524,"byte_end":284527,"line_start":331,"line_end":331,"column_start":3,"column_end":6}},{"value":"/ let t = TinyVec::<[u8; 10]>::with_capacity(20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284530,"byte_end":284581,"line_start":332,"line_end":332,"column_start":3,"column_end":54}},{"value":"/ assert!(t.is_heap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284584,"byte_end":284609,"line_start":333,"line_end":333,"column_start":3,"column_end":28}},{"value":"/ assert!(t.capacity() >= 20);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284612,"byte_end":284644,"line_start":334,"line_end":334,"column_start":3,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284647,"byte_end":284654,"line_start":335,"line_end":335,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284657,"byte_end":284666,"line_start":336,"line_end":336,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284669,"byte_end":284680,"line_start":337,"line_end":337,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":285500,"byte_end":285506,"line_start":365,"line_end":365,"column_start":10,"column_end":16},"name":"append","qualname":"<TinyVec<A>>::append","value":"pub fn append(&mut Self, &mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move all values from `other` into this vec.\n","sig":null,"attributes":[{"value":"/ Move all values from `other` into this vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":285393,"byte_end":285440,"line_start":362,"line_end":362,"column_start":3,"column_end":50}},{"value":"cfg(not(feature = \"rustc_1_40\"))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":285443,"byte_end":285478,"line_start":363,"line_end":363,"column_start":3,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":285481,"byte_end":285490,"line_start":364,"line_end":364,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":286268,"byte_end":286279,"line_start":392,"line_end":392,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<TinyVec<A>>::swap_remove","value":"pub fn swap_remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove an element, swapping the end of the vec into its place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234365,"byte_end":8234382,"line_start":14,"line_end":14,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":286494,"byte_end":286497,"line_start":399,"line_end":399,"column_start":12,"column_end":15},"name":"pop","qualname":"<TinyVec<A>>::pop","value":"pub fn pop(&mut Self) -> Option<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the last element of the vec, if there is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234365,"byte_end":8234382,"line_start":14,"line_end":14,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":286980,"byte_end":286986,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"remove","qualname":"<TinyVec<A>>::remove","value":"pub fn remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Removes the item at `index`, shifting all others down by one index.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234365,"byte_end":8234382,"line_start":14,"line_end":14,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":287125,"byte_end":287128,"line_start":423,"line_end":423,"column_start":12,"column_end":15},"name":"len","qualname":"<TinyVec<A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the vec (in elements).\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234365,"byte_end":8234382,"line_start":14,"line_end":14,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":287386,"byte_end":287394,"line_start":431,"line_end":431,"column_start":12,"column_end":20},"name":"capacity","qualname":"<TinyVec<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The capacity of the `TinyVec`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234365,"byte_end":8234382,"line_start":14,"line_end":14,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":287576,"byte_end":287584,"line_start":437,"line_end":437,"column_start":12,"column_end":20},"name":"truncate","qualname":"<TinyVec<A>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reduces the vec's length to the given value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234365,"byte_end":8234382,"line_start":14,"line_end":14,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":287827,"byte_end":287837,"line_start":446,"line_end":446,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<TinyVec<A>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut A::Item","parent":null,"children":[],"decl_id":null,"docs":" A mutable pointer to the backing array.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234365,"byte_end":8234382,"line_start":14,"line_end":14,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288078,"byte_end":288084,"line_start":455,"line_end":455,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<TinyVec<A>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const A::Item","parent":null,"children":[],"decl_id":null,"docs":" A const pointer to the backing array.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234365,"byte_end":8234382,"line_start":14,"line_end":14,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288436,"byte_end":288442,"line_start":470,"line_end":470,"column_start":10,"column_end":16},"name":"retain","qualname":"<TinyVec<A>>::retain","value":"pub fn retain<F: FnMut(&A::Item) -> bool>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Walk the vec and keep only the elements that pass the predicate given.","sig":null,"attributes":[{"value":"/ Walk the vec and keep only the elements that pass the predicate given.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288124,"byte_end":288198,"line_start":458,"line_end":458,"column_start":3,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288201,"byte_end":288204,"line_start":459,"line_end":459,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288207,"byte_end":288221,"line_start":460,"line_end":460,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288224,"byte_end":288227,"line_start":461,"line_end":461,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288230,"byte_end":288241,"line_start":462,"line_end":462,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288244,"byte_end":288263,"line_start":463,"line_end":463,"column_start":3,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288266,"byte_end":288269,"line_start":464,"line_end":464,"column_start":3,"column_end":6}},{"value":"/ let mut tv = tiny_vec!([i32; 10] => 1, 2, 3, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288272,"byte_end":288324,"line_start":465,"line_end":465,"column_start":3,"column_end":55}},{"value":"/ tv.retain(|&x| x % 2 == 0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288327,"byte_end":288358,"line_start":466,"line_end":466,"column_start":3,"column_end":34}},{"value":"/ assert_eq!(tv.as_slice(), &[2, 4][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288361,"byte_end":288404,"line_start":467,"line_end":467,"column_start":3,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288407,"byte_end":288414,"line_start":468,"line_end":468,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288417,"byte_end":288426,"line_start":469,"line_end":469,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288714,"byte_end":288726,"line_start":480,"line_end":480,"column_start":10,"column_end":22},"name":"as_mut_slice","qualname":"<TinyVec<A>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Helper for getting the mut slice.\n","sig":null,"attributes":[{"value":"/ Helper for getting the mut slice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288633,"byte_end":288670,"line_start":477,"line_end":477,"column_start":3,"column_end":40}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288673,"byte_end":288690,"line_start":478,"line_end":478,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288693,"byte_end":288704,"line_start":479,"line_end":479,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288876,"byte_end":288884,"line_start":487,"line_end":487,"column_start":10,"column_end":18},"name":"as_slice","qualname":"<TinyVec<A>>::as_slice","value":"pub fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Helper for getting the shared slice.\n","sig":null,"attributes":[{"value":"/ Helper for getting the shared slice.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288792,"byte_end":288832,"line_start":484,"line_end":484,"column_start":3,"column_end":43}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288835,"byte_end":288852,"line_start":485,"line_end":485,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288855,"byte_end":288866,"line_start":486,"line_end":486,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":289006,"byte_end":289011,"line_start":493,"line_end":493,"column_start":10,"column_end":15},"name":"clear","qualname":"<TinyVec<A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the vec.\n","sig":null,"attributes":[{"value":"/ Removes all elements from the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288938,"byte_end":288976,"line_start":491,"line_end":491,"column_start":3,"column_end":41}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":288979,"byte_end":288996,"line_start":492,"line_end":492,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290824,"byte_end":290829,"line_start":556,"line_end":556,"column_start":10,"column_end":15},"name":"drain","qualname":"<TinyVec<A>>::drain","value":"pub fn drain<R: RangeBounds<usize>>(&mut Self, R) -> TinyVecDrain<, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in the vector\n and yields the removed items.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range in the vector","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":289943,"byte_end":290021,"line_start":532,"line_end":532,"column_start":3,"column_end":81}},{"value":"/ and yields the removed items.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290024,"byte_end":290057,"line_start":533,"line_end":533,"column_start":3,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290060,"byte_end":290063,"line_start":534,"line_end":534,"column_start":3,"column_end":6}},{"value":"/ **Note: This method has significant performance issues compared to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290066,"byte_end":290136,"line_start":535,"line_end":535,"column_start":3,"column_end":73}},{"value":"/ matching on the TinyVec and then calling drain on the Inline or Heap value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290139,"byte_end":290217,"line_start":536,"line_end":536,"column_start":3,"column_end":81}},{"value":"/ inside. The draining iterator has to branch on every single access. It is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290220,"byte_end":290297,"line_start":537,"line_end":537,"column_start":3,"column_end":80}},{"value":"/ provided for simplicity and compatability only.**","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290300,"byte_end":290353,"line_start":538,"line_end":538,"column_start":3,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290356,"byte_end":290359,"line_start":539,"line_end":539,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290362,"byte_end":290375,"line_start":540,"line_end":540,"column_start":3,"column_end":16}},{"value":"/ * If the start is greater than the end","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290378,"byte_end":290420,"line_start":541,"line_end":541,"column_start":3,"column_end":45}},{"value":"/ * If the end is past the edge of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290423,"byte_end":290468,"line_start":542,"line_end":542,"column_start":3,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290471,"byte_end":290474,"line_start":543,"line_end":543,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290477,"byte_end":290491,"line_start":544,"line_end":544,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290494,"byte_end":290505,"line_start":545,"line_end":545,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290508,"byte_end":290527,"line_start":546,"line_end":546,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290530,"byte_end":290578,"line_start":547,"line_end":547,"column_start":3,"column_end":51}},{"value":"/ let tv2: TinyVec<[i32; 4]> = tv.drain(1..).collect();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290581,"byte_end":290638,"line_start":548,"line_end":548,"column_start":3,"column_end":60}},{"value":"/ assert_eq!(tv.as_slice(), &[1][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290641,"byte_end":290681,"line_start":549,"line_end":549,"column_start":3,"column_end":43}},{"value":"/ assert_eq!(tv2.as_slice(), &[2, 3][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290684,"byte_end":290728,"line_start":550,"line_end":550,"column_start":3,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290731,"byte_end":290734,"line_start":551,"line_end":551,"column_start":3,"column_end":6}},{"value":"/ tv.drain(..);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290737,"byte_end":290754,"line_start":552,"line_end":552,"column_start":3,"column_end":20}},{"value":"/ assert_eq!(tv.as_slice(), &[]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290757,"byte_end":290792,"line_start":553,"line_end":553,"column_start":3,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290795,"byte_end":290802,"line_start":554,"line_end":554,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":290805,"byte_end":290814,"line_start":555,"line_end":555,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291316,"byte_end":291333,"line_start":573,"line_end":573,"column_start":10,"column_end":27},"name":"extend_from_slice","qualname":"<TinyVec<A>>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[A::Item]) where A::Item: Clone","parent":null,"children":[],"decl_id":null,"docs":" Clone each element of the slice into this vec.\n ```rust\n use tinyvec::*;\n let mut tv = tiny_vec!([i32; 4] => 1, 2);\n tv.extend_from_slice(&[3, 4]);\n assert_eq!(tv.as_slice(), [1, 2, 3, 4]);\n ```\n","sig":null,"attributes":[{"value":"/ Clone each element of the slice into this vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291066,"byte_end":291116,"line_start":565,"line_end":565,"column_start":3,"column_end":53}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291119,"byte_end":291130,"line_start":566,"line_end":566,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291133,"byte_end":291152,"line_start":567,"line_end":567,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 4] => 1, 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291155,"byte_end":291200,"line_start":568,"line_end":568,"column_start":3,"column_end":48}},{"value":"/ tv.extend_from_slice(&[3, 4]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291203,"byte_end":291237,"line_start":569,"line_end":569,"column_start":3,"column_end":37}},{"value":"/ assert_eq!(tv.as_slice(), [1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291240,"byte_end":291284,"line_start":570,"line_end":570,"column_start":3,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291287,"byte_end":291294,"line_start":571,"line_end":571,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291297,"byte_end":291306,"line_start":572,"line_end":572,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291888,"byte_end":291902,"line_start":594,"line_end":594,"column_start":10,"column_end":24},"name":"from_array_len","qualname":"<TinyVec<A>>::from_array_len","value":"pub fn from_array_len(A, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps up an array and uses the given length as the initial length.","sig":null,"attributes":[{"value":"/ Wraps up an array and uses the given length as the initial length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291559,"byte_end":291629,"line_start":584,"line_end":584,"column_start":3,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291632,"byte_end":291635,"line_start":585,"line_end":585,"column_start":3,"column_end":6}},{"value":"/ Note that the `From` impl for arrays assumes the full length is used.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291638,"byte_end":291711,"line_start":586,"line_end":586,"column_start":3,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291714,"byte_end":291717,"line_start":587,"line_end":587,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291720,"byte_end":291733,"line_start":588,"line_end":588,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291736,"byte_end":291739,"line_start":589,"line_end":589,"column_start":3,"column_end":6}},{"value":"/ The length must be less than or equal to the capacity of the array.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291742,"byte_end":291813,"line_start":590,"line_end":590,"column_start":3,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291816,"byte_end":291825,"line_start":591,"line_end":591,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291828,"byte_end":291839,"line_start":592,"line_end":592,"column_start":3,"column_end":14}},{"value":"allow(clippy :: match_wild_err_arm)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":291842,"byte_end":291878,"line_start":593,"line_end":593,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292340,"byte_end":292364,"line_start":608,"line_end":608,"column_start":10,"column_end":34},"name":"constructor_for_capacity","qualname":"<TinyVec<A>>::constructor_for_capacity","value":"pub fn constructor_for_capacity(usize) -> TinyVecConstructor<A>","parent":null,"children":[],"decl_id":null,"docs":" This is an internal implementation detail of the `tiny_vec!` macro, and\n using it other than from that macro is not supported by this crate's\n SemVer guarantee.\n","sig":null,"attributes":[{"value":"/ This is an internal implementation detail of the `tiny_vec!` macro, and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292119,"byte_end":292194,"line_start":603,"line_end":603,"column_start":3,"column_end":78}},{"value":"/ using it other than from that macro is not supported by this crate's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292197,"byte_end":292269,"line_start":604,"line_end":604,"column_start":3,"column_end":75}},{"value":"/ SemVer guarantee.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292272,"byte_end":292293,"line_start":605,"line_end":605,"column_start":3,"column_end":24}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292296,"byte_end":292313,"line_start":606,"line_end":606,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292979,"byte_end":292985,"line_start":632,"line_end":632,"column_start":10,"column_end":16},"name":"insert","qualname":"<TinyVec<A>>::insert","value":"pub fn insert(&mut Self, usize, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Inserts an item at the position given, moving all following elements +1\n index.","sig":null,"attributes":[{"value":"/ Inserts an item at the position given, moving all following elements +1","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292554,"byte_end":292629,"line_start":616,"line_end":616,"column_start":3,"column_end":78}},{"value":"/ index.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292632,"byte_end":292642,"line_start":617,"line_end":617,"column_start":3,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292645,"byte_end":292648,"line_start":618,"line_end":618,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292651,"byte_end":292664,"line_start":619,"line_end":619,"column_start":3,"column_end":16}},{"value":"/ * If `index` > `len`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292667,"byte_end":292691,"line_start":620,"line_end":620,"column_start":3,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292694,"byte_end":292697,"line_start":621,"line_end":621,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292700,"byte_end":292714,"line_start":622,"line_end":622,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292717,"byte_end":292728,"line_start":623,"line_end":623,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292731,"byte_end":292750,"line_start":624,"line_end":624,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 10] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292753,"byte_end":292802,"line_start":625,"line_end":625,"column_start":3,"column_end":52}},{"value":"/ tv.insert(1, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292805,"byte_end":292825,"line_start":626,"line_end":626,"column_start":3,"column_end":23}},{"value":"/ assert_eq!(tv.as_slice(), &[1, 4, 2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292828,"byte_end":292873,"line_start":627,"line_end":627,"column_start":3,"column_end":48}},{"value":"/ tv.insert(4, 5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292876,"byte_end":292896,"line_start":628,"line_end":628,"column_start":3,"column_end":23}},{"value":"/ assert_eq!(tv.as_slice(), &[1, 4, 2, 3, 5]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292899,"byte_end":292947,"line_start":629,"line_end":629,"column_start":3,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292950,"byte_end":292957,"line_start":630,"line_end":630,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":292960,"byte_end":292969,"line_start":631,"line_end":631,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293675,"byte_end":293683,"line_start":659,"line_end":659,"column_start":10,"column_end":18},"name":"is_empty","qualname":"<TinyVec<A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If the vec is empty.\n","sig":null,"attributes":[{"value":"/ If the vec is empty.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293607,"byte_end":293631,"line_start":656,"line_end":656,"column_start":3,"column_end":27}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293634,"byte_end":293651,"line_start":657,"line_end":657,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293654,"byte_end":293665,"line_start":658,"line_end":658,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293799,"byte_end":293802,"line_start":666,"line_end":666,"column_start":10,"column_end":13},"name":"new","qualname":"<TinyVec<A>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new, empty vec.\n","sig":null,"attributes":[{"value":"/ Makes a new, empty vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293728,"byte_end":293755,"line_start":663,"line_end":663,"column_start":3,"column_end":30}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293758,"byte_end":293775,"line_start":664,"line_end":664,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293778,"byte_end":293789,"line_start":665,"line_end":665,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":294151,"byte_end":294155,"line_start":680,"line_end":680,"column_start":10,"column_end":14},"name":"push","qualname":"<TinyVec<A>>::push","value":"pub fn push(&mut Self, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Place an element onto the end of the vec.\n ## Panics\n * If the length of the vec would overflow the capacity.\n ```rust\n use tinyvec::*;\n let mut tv = tiny_vec!([i32; 10] => 1, 2, 3);\n tv.push(4);\n assert_eq!(tv.as_slice(), &[1, 2, 3, 4]);\n ```\n","sig":null,"attributes":[{"value":"/ Place an element onto the end of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293842,"byte_end":293887,"line_start":670,"line_end":670,"column_start":3,"column_end":48}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293890,"byte_end":293903,"line_start":671,"line_end":671,"column_start":3,"column_end":16}},{"value":"/ * If the length of the vec would overflow the capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293906,"byte_end":293965,"line_start":672,"line_end":672,"column_start":3,"column_end":62}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293968,"byte_end":293979,"line_start":673,"line_end":673,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":293982,"byte_end":294001,"line_start":674,"line_end":674,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 10] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":294004,"byte_end":294053,"line_start":675,"line_end":675,"column_start":3,"column_end":52}},{"value":"/ tv.push(4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":294056,"byte_end":294071,"line_start":676,"line_end":676,"column_start":3,"column_end":18}},{"value":"/ assert_eq!(tv.as_slice(), &[1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":294074,"byte_end":294119,"line_start":677,"line_end":677,"column_start":3,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":294122,"byte_end":294129,"line_start":678,"line_end":678,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":294132,"byte_end":294141,"line_start":679,"line_end":679,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295815,"byte_end":295821,"line_start":729,"line_end":729,"column_start":10,"column_end":16},"name":"resize","qualname":"<TinyVec<A>>::resize","value":"pub fn resize(&mut Self, usize, A::Item) where A::Item: Clone","parent":null,"children":[],"decl_id":null,"docs":" Resize the vec to the new length.","sig":null,"attributes":[{"value":"/ Resize the vec to the new length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295262,"byte_end":295299,"line_start":710,"line_end":710,"column_start":3,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295302,"byte_end":295305,"line_start":711,"line_end":711,"column_start":3,"column_end":6}},{"value":"/ If it needs to be longer, it's filled with clones of the provided value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295308,"byte_end":295384,"line_start":712,"line_end":712,"column_start":3,"column_end":79}},{"value":"/ If it needs to be shorter, it's truncated.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295387,"byte_end":295433,"line_start":713,"line_end":713,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295436,"byte_end":295439,"line_start":714,"line_end":714,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295442,"byte_end":295456,"line_start":715,"line_end":715,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295459,"byte_end":295462,"line_start":716,"line_end":716,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295465,"byte_end":295476,"line_start":717,"line_end":717,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295479,"byte_end":295498,"line_start":718,"line_end":718,"column_start":3,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295501,"byte_end":295504,"line_start":719,"line_end":719,"column_start":3,"column_end":6}},{"value":"/ let mut tv = tiny_vec!([&str; 10] => \"hello\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295507,"byte_end":295557,"line_start":720,"line_end":720,"column_start":3,"column_end":53}},{"value":"/ tv.resize(3, \"world\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295560,"byte_end":295586,"line_start":721,"line_end":721,"column_start":3,"column_end":29}},{"value":"/ assert_eq!(tv.as_slice(), &[\"hello\", \"world\", \"world\"][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295589,"byte_end":295653,"line_start":722,"line_end":722,"column_start":3,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295656,"byte_end":295659,"line_start":723,"line_end":723,"column_start":3,"column_end":6}},{"value":"/ let mut tv = tiny_vec!([i32; 10] => 1, 2, 3, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295662,"byte_end":295714,"line_start":724,"line_end":724,"column_start":3,"column_end":55}},{"value":"/ tv.resize(2, 0);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295717,"byte_end":295737,"line_start":725,"line_end":725,"column_start":3,"column_end":23}},{"value":"/ assert_eq!(tv.as_slice(), &[1, 2][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295740,"byte_end":295783,"line_start":726,"line_end":726,"column_start":3,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295786,"byte_end":295793,"line_start":727,"line_end":727,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295796,"byte_end":295805,"line_start":728,"line_end":728,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296576,"byte_end":296587,"line_start":759,"line_end":759,"column_start":10,"column_end":21},"name":"resize_with","qualname":"<TinyVec<A>>::resize_with","value":"pub fn resize_with<F: FnMut() -> A::Item>(&mut Self, usize, F)","parent":null,"children":[],"decl_id":null,"docs":" Resize the vec to the new length.","sig":null,"attributes":[{"value":"/ Resize the vec to the new length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295957,"byte_end":295994,"line_start":736,"line_end":736,"column_start":3,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":295997,"byte_end":296000,"line_start":737,"line_end":737,"column_start":3,"column_end":6}},{"value":"/ If it needs to be longer, it's filled with repeated calls to the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296003,"byte_end":296080,"line_start":738,"line_end":738,"column_start":3,"column_end":80}},{"value":"/ function. If it needs to be shorter, it's truncated.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296083,"byte_end":296139,"line_start":739,"line_end":739,"column_start":3,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296142,"byte_end":296145,"line_start":740,"line_end":740,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296148,"byte_end":296162,"line_start":741,"line_end":741,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296165,"byte_end":296168,"line_start":742,"line_end":742,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296171,"byte_end":296182,"line_start":743,"line_end":743,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296185,"byte_end":296204,"line_start":744,"line_end":744,"column_start":3,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296207,"byte_end":296210,"line_start":745,"line_end":745,"column_start":3,"column_end":6}},{"value":"/ let mut tv = tiny_vec!([i32; 3] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296213,"byte_end":296261,"line_start":746,"line_end":746,"column_start":3,"column_end":51}},{"value":"/ tv.resize_with(5, Default::default);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296264,"byte_end":296304,"line_start":747,"line_end":747,"column_start":3,"column_end":43}},{"value":"/ assert_eq!(tv.as_slice(), &[1, 2, 3, 0, 0][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296307,"byte_end":296359,"line_start":748,"line_end":748,"column_start":3,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296362,"byte_end":296365,"line_start":749,"line_end":749,"column_start":3,"column_end":6}},{"value":"/ let mut tv = tiny_vec!([i32; 2]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296368,"byte_end":296405,"line_start":750,"line_end":750,"column_start":3,"column_end":40}},{"value":"/ let mut p = 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296408,"byte_end":296426,"line_start":751,"line_end":751,"column_start":3,"column_end":21}},{"value":"/ tv.resize_with(4, || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296429,"byte_end":296455,"line_start":752,"line_end":752,"column_start":3,"column_end":29}},{"value":"/   p *= 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296458,"byte_end":296471,"line_start":753,"line_end":753,"column_start":3,"column_end":16}},{"value":"/   p","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296474,"byte_end":296481,"line_start":754,"line_end":754,"column_start":3,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296484,"byte_end":296491,"line_start":755,"line_end":755,"column_start":3,"column_end":10}},{"value":"/ assert_eq!(tv.as_slice(), &[2, 4, 8, 16][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296494,"byte_end":296544,"line_start":756,"line_end":756,"column_start":3,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296547,"byte_end":296554,"line_start":757,"line_end":757,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296557,"byte_end":296566,"line_start":758,"line_end":758,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297358,"byte_end":297367,"line_start":789,"line_end":789,"column_start":10,"column_end":19},"name":"split_off","qualname":"<TinyVec<A>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection at the point given.","sig":null,"attributes":[{"value":"/ Splits the collection at the point given.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296914,"byte_end":296959,"line_start":771,"line_end":771,"column_start":3,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296962,"byte_end":296965,"line_start":772,"line_end":772,"column_start":3,"column_end":6}},{"value":"/ * `[0, at)` stays in this vec","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":296968,"byte_end":297001,"line_start":773,"line_end":773,"column_start":3,"column_end":36}},{"value":"/ * `[at, len)` ends up in the new vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297004,"byte_end":297045,"line_start":774,"line_end":774,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297048,"byte_end":297051,"line_start":775,"line_end":775,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297054,"byte_end":297067,"line_start":776,"line_end":776,"column_start":3,"column_end":16}},{"value":"/ * if at > len","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297070,"byte_end":297087,"line_start":777,"line_end":777,"column_start":3,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297090,"byte_end":297093,"line_start":778,"line_end":778,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297096,"byte_end":297110,"line_start":779,"line_end":779,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297113,"byte_end":297116,"line_start":780,"line_end":780,"column_start":3,"column_end":6}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297119,"byte_end":297130,"line_start":781,"line_end":781,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297133,"byte_end":297152,"line_start":782,"line_end":782,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297155,"byte_end":297203,"line_start":783,"line_end":783,"column_start":3,"column_end":51}},{"value":"/ let tv2 = tv.split_off(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297206,"byte_end":297236,"line_start":784,"line_end":784,"column_start":3,"column_end":33}},{"value":"/ assert_eq!(tv.as_slice(), &[1][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297239,"byte_end":297279,"line_start":785,"line_end":785,"column_start":3,"column_end":43}},{"value":"/ assert_eq!(tv2.as_slice(), &[2, 3][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297282,"byte_end":297326,"line_start":786,"line_end":786,"column_start":3,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297329,"byte_end":297336,"line_start":787,"line_end":787,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297339,"byte_end":297348,"line_start":788,"line_end":788,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298368,"byte_end":298374,"line_start":820,"line_end":820,"column_start":10,"column_end":16},"name":"splice","qualname":"<TinyVec<A>>::splice","value":"pub fn splice<R, I>(&mut Self, R, I)\n-> TinyVecSplice<, A, core::iter::Fuse<I::IntoIter>> where\nR: RangeBounds<usize>, I: IntoIterator<Item = A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a splicing iterator that removes the specified range in the\n vector, yields the removed items, and replaces them with elements from\n the provided iterator.","sig":null,"attributes":[{"value":"/ Creates a splicing iterator that removes the specified range in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297550,"byte_end":297621,"line_start":796,"line_end":796,"column_start":3,"column_end":74}},{"value":"/ vector, yields the removed items, and replaces them with elements from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297624,"byte_end":297698,"line_start":797,"line_end":797,"column_start":3,"column_end":77}},{"value":"/ the provided iterator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297701,"byte_end":297727,"line_start":798,"line_end":798,"column_start":3,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297730,"byte_end":297733,"line_start":799,"line_end":799,"column_start":3,"column_end":6}},{"value":"/ `splice` fuses the provided iterator, so elements after the first `None`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297736,"byte_end":297812,"line_start":800,"line_end":800,"column_start":3,"column_end":79}},{"value":"/ are ignored.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297815,"byte_end":297831,"line_start":801,"line_end":801,"column_start":3,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297834,"byte_end":297837,"line_start":802,"line_end":802,"column_start":3,"column_end":6}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297840,"byte_end":297853,"line_start":803,"line_end":803,"column_start":3,"column_end":16}},{"value":"/ * If the start is greater than the end.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297856,"byte_end":297899,"line_start":804,"line_end":804,"column_start":3,"column_end":46}},{"value":"/ * If the end is past the edge of the vec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297902,"byte_end":297947,"line_start":805,"line_end":805,"column_start":3,"column_end":48}},{"value":"/ * If the provided iterator panics.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297950,"byte_end":297988,"line_start":806,"line_end":806,"column_start":3,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297991,"byte_end":297994,"line_start":807,"line_end":807,"column_start":3,"column_end":6}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":297997,"byte_end":298011,"line_start":808,"line_end":808,"column_start":3,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298014,"byte_end":298025,"line_start":809,"line_end":809,"column_start":3,"column_end":14}},{"value":"/ use tinyvec::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298028,"byte_end":298047,"line_start":810,"line_end":810,"column_start":3,"column_end":22}},{"value":"/ let mut tv = tiny_vec!([i32; 4] => 1, 2, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298050,"byte_end":298098,"line_start":811,"line_end":811,"column_start":3,"column_end":51}},{"value":"/ let tv2: TinyVec<[i32; 4]> = tv.splice(1.., 4..=6).collect();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298101,"byte_end":298166,"line_start":812,"line_end":812,"column_start":3,"column_end":68}},{"value":"/ assert_eq!(tv.as_slice(), &[1, 4, 5, 6][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298169,"byte_end":298218,"line_start":813,"line_end":813,"column_start":3,"column_end":52}},{"value":"/ assert_eq!(tv2.as_slice(), &[2, 3][..]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298221,"byte_end":298265,"line_start":814,"line_end":814,"column_start":3,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298268,"byte_end":298271,"line_start":815,"line_end":815,"column_start":3,"column_end":6}},{"value":"/ tv.splice(.., None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298274,"byte_end":298298,"line_start":816,"line_end":816,"column_start":3,"column_end":27}},{"value":"/ assert_eq!(tv.as_slice(), &[]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298301,"byte_end":298336,"line_start":817,"line_end":817,"column_start":3,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298339,"byte_end":298346,"line_start":818,"line_end":818,"column_start":3,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":298349,"byte_end":298358,"line_start":819,"line_end":819,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299674,"byte_end":299692,"line_start":869,"line_end":869,"column_start":10,"column_end":28},"name":"try_from_array_len","qualname":"<TinyVec<A>>::try_from_array_len","value":"pub fn try_from_array_len(A, usize) -> Result<Self, A>","parent":null,"children":[],"decl_id":null,"docs":" Wraps an array, using the given length as the starting length.","sig":null,"attributes":[{"value":"/ Wraps an array, using the given length as the starting length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299320,"byte_end":299386,"line_start":859,"line_end":859,"column_start":3,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299389,"byte_end":299392,"line_start":860,"line_end":860,"column_start":3,"column_end":6}},{"value":"/ If you want to use the whole length of the array, you can just use the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299395,"byte_end":299469,"line_start":861,"line_end":861,"column_start":3,"column_end":77}},{"value":"/ `From` impl.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299472,"byte_end":299488,"line_start":862,"line_end":862,"column_start":3,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299491,"byte_end":299494,"line_start":863,"line_end":863,"column_start":3,"column_end":6}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299497,"byte_end":299511,"line_start":864,"line_end":864,"column_start":3,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299514,"byte_end":299517,"line_start":865,"line_end":865,"column_start":3,"column_end":6}},{"value":"/ If the given length is greater than the capacity of the array this will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299520,"byte_end":299595,"line_start":866,"line_end":866,"column_start":3,"column_end":78}},{"value":"/ error, and you'll get the array back in the `Err`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299598,"byte_end":299652,"line_start":867,"line_end":867,"column_start":3,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299655,"byte_end":299664,"line_start":868,"line_end":868,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":300045,"byte_end":300051,"line_start":881,"line_end":881,"column_start":3,"column_end":9},"name":"Inline","qualname":"::tinyvec::TinyVecDrain::Inline","value":"TinyVecDrain::Inline(ArrayVecDrain)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":300020,"byte_end":300042,"line_start":880,"line_end":880,"column_start":3,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":300108,"byte_end":300112,"line_start":883,"line_end":883,"column_start":3,"column_end":7},"name":"Heap","qualname":"::tinyvec::TinyVecDrain::Heap","value":"TinyVecDrain::Heap(vec::Drain)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":300083,"byte_end":300105,"line_start":882,"line_end":882,"column_start":3,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299989,"byte_end":300001,"line_start":879,"line_end":879,"column_start":10,"column_end":22},"name":"TinyVecDrain","qualname":"::tinyvec::TinyVecDrain","value":"pub enum TinyVecDrain<'p, A: Array> {\n\n    #[allow(missing_docs)]\n    Inline(ArrayVecDrain),\n\n    #[allow(missing_docs)]\n    Heap(vec::Drain),\n}","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":918}],"decl_id":null,"docs":" Draining iterator for `TinyVecDrain`","sig":null,"attributes":[{"value":"/ Draining iterator for `TinyVecDrain`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299827,"byte_end":299867,"line_start":875,"line_end":875,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299868,"byte_end":299871,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ See [`TinyVecDrain::drain`](TinyVecDrain::<A>::drain)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":299872,"byte_end":299929,"line_start":877,"line_end":877,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":301243,"byte_end":301256,"line_start":929,"line_end":929,"column_start":12,"column_end":25},"name":"TinyVecSplice","qualname":"::tinyvec::TinyVecSplice","value":"TinyVecSplice {  }","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937}],"decl_id":null,"docs":" Splicing iterator for `TinyVec`\n See [`TinyVec::splice`](TinyVec::<A>::splice)\n","sig":null,"attributes":[{"value":"/ Splicing iterator for `TinyVec`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":301096,"byte_end":301131,"line_start":926,"line_end":926,"column_start":1,"column_end":36}},{"value":"/ See [`TinyVec::splice`](TinyVec::<A>::splice)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":301132,"byte_end":301181,"line_start":927,"line_end":927,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306542,"byte_end":306548,"line_start":1161,"line_end":1161,"column_start":3,"column_end":9},"name":"Inline","qualname":"::tinyvec::TinyVecIterator::Inline","value":"TinyVecIterator::Inline(ArrayVecIterator<A>)","parent":{"krate":0,"index":998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306517,"byte_end":306539,"line_start":1160,"line_end":1160,"column_start":3,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306598,"byte_end":306602,"line_start":1163,"line_end":1163,"column_start":3,"column_end":7},"name":"Heap","qualname":"::tinyvec::TinyVecIterator::Heap","value":"TinyVecIterator::Heap(alloc::vec::IntoIter<A::Item>)","parent":{"krate":0,"index":998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306573,"byte_end":306595,"line_start":1162,"line_end":1162,"column_start":3,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306487,"byte_end":306502,"line_start":1159,"line_end":1159,"column_start":10,"column_end":25},"name":"TinyVecIterator","qualname":"::tinyvec::TinyVecIterator","value":"pub enum TinyVecIterator<A: Array> {\n\n    #[allow(missing_docs)]\n    Inline(ArrayVecIterator<A>),\n\n    #[allow(missing_docs)]\n    Heap(alloc::vec::IntoIter<A::Item>),\n}","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1003}],"decl_id":null,"docs":" Iterator for consuming an `TinyVec` and returning owned elements.\n","sig":null,"attributes":[{"value":"/ Iterator for consuming an `TinyVec` and returning owned elements.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306358,"byte_end":306427,"line_start":1157,"line_end":1157,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306834,"byte_end":306842,"line_start":1172,"line_end":1172,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<TinyVecIterator<A>>::as_slice","value":"pub fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"must_use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234346,"byte_end":8234354,"line_start":13,"line_end":13,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec_macros-0.1.0\\src\\lib.rs","byte_start":8234365,"byte_end":8234382,"line_start":14,"line_end":14,"column_start":9,"column_end":26}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206077,"byte_end":206085,"line_start":107,"line_end":107,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206188,"byte_end":206196,"line_start":113,"line_end":113,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206382,"byte_end":206390,"line_start":122,"line_end":122,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206595,"byte_end":206603,"line_start":130,"line_end":130,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206833,"byte_end":206841,"line_start":139,"line_end":139,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207753,"byte_end":207761,"line_start":180,"line_end":180,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223098,"byte_end":223108,"line_start":724,"line_end":724,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":231915,"byte_end":231929,"line_start":1039,"line_end":1039,"column_start":7,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":232682,"byte_end":232696,"line_start":1073,"line_end":1073,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":232879,"byte_end":232893,"line_start":1084,"line_end":1084,"column_start":34,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":232997,"byte_end":233011,"line_start":1091,"line_end":1091,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":233731,"byte_end":233745,"line_start":1121,"line_end":1121,"column_start":7,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234046,"byte_end":234054,"line_start":1135,"line_end":1135,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234195,"byte_end":234203,"line_start":1143,"line_end":1143,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234333,"byte_end":234341,"line_start":1151,"line_end":1151,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234474,"byte_end":234482,"line_start":1159,"line_end":1159,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234626,"byte_end":234634,"line_start":1167,"line_end":1167,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234798,"byte_end":234806,"line_start":1176,"line_end":1176,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235244,"byte_end":235252,"line_start":1193,"line_end":1193,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235608,"byte_end":235624,"line_start":1212,"line_end":1212,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235865,"byte_end":235881,"line_start":1220,"line_end":1220,"column_start":34,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235916,"byte_end":235932,"line_start":1221,"line_end":1221,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":236973,"byte_end":236989,"line_start":1262,"line_end":1262,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":237810,"byte_end":237826,"line_start":1291,"line_end":1291,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":238079,"byte_end":238087,"line_start":1301,"line_end":1301,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":238805,"byte_end":238813,"line_start":1331,"line_end":1331,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":238981,"byte_end":238989,"line_start":1341,"line_end":1341,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239045,"byte_end":239053,"line_start":1343,"line_end":1343,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239264,"byte_end":239272,"line_start":1353,"line_end":1353,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239463,"byte_end":239471,"line_start":1364,"line_end":1364,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239657,"byte_end":239665,"line_start":1375,"line_end":1375,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239832,"byte_end":239840,"line_start":1386,"line_end":1386,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":240551,"byte_end":240559,"line_start":1416,"line_end":1416,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":240904,"byte_end":240912,"line_start":1433,"line_end":1433,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":241257,"byte_end":241265,"line_start":1450,"line_end":1450,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":241615,"byte_end":241623,"line_start":1467,"line_end":1467,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":241975,"byte_end":241983,"line_start":1484,"line_end":1484,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":242332,"byte_end":242340,"line_start":1501,"line_end":1501,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":242685,"byte_end":242693,"line_start":1518,"line_end":1518,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243043,"byte_end":243051,"line_start":1535,"line_end":1535,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243403,"byte_end":243411,"line_start":1552,"line_end":1552,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243824,"byte_end":243832,"line_start":1573,"line_end":1573,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":247411,"byte_end":247424,"line_start":15,"line_end":15,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":248500,"byte_end":248513,"line_start":58,"line_end":58,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":248788,"byte_end":248801,"line_start":69,"line_end":69,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":249306,"byte_end":249319,"line_start":91,"line_end":91,"column_start":45,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":249378,"byte_end":249391,"line_start":92,"line_end":92,"column_start":49,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250111,"byte_end":250119,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250252,"byte_end":250260,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250421,"byte_end":250429,"line_start":38,"line_end":38,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250588,"byte_end":250596,"line_start":46,"line_end":46,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250826,"byte_end":250834,"line_start":58,"line_end":58,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251017,"byte_end":251025,"line_start":69,"line_end":69,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261749,"byte_end":261759,"line_start":492,"line_end":492,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":266889,"byte_end":266897,"line_start":681,"line_end":681,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":267232,"byte_end":267240,"line_start":695,"line_end":695,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":267881,"byte_end":267894,"line_start":722,"line_end":722,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":268212,"byte_end":268225,"line_start":735,"line_end":735,"column_start":44,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":268274,"byte_end":268287,"line_start":736,"line_end":736,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":268765,"byte_end":268773,"line_start":750,"line_end":750,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":268903,"byte_end":268911,"line_start":758,"line_end":758,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269030,"byte_end":269038,"line_start":766,"line_end":766,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269160,"byte_end":269168,"line_start":774,"line_end":774,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269301,"byte_end":269309,"line_start":782,"line_end":782,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269473,"byte_end":269481,"line_start":791,"line_end":791,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269696,"byte_end":269704,"line_start":801,"line_end":801,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269867,"byte_end":269875,"line_start":811,"line_end":811,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269926,"byte_end":269934,"line_start":813,"line_end":813,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":270140,"byte_end":270148,"line_start":823,"line_end":823,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":270336,"byte_end":270344,"line_start":834,"line_end":834,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":270500,"byte_end":270508,"line_start":845,"line_end":845,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":271191,"byte_end":271199,"line_start":875,"line_end":875,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":271539,"byte_end":271547,"line_start":892,"line_end":892,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":271887,"byte_end":271895,"line_start":909,"line_end":909,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":272240,"byte_end":272248,"line_start":926,"line_end":926,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":272595,"byte_end":272603,"line_start":943,"line_end":943,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":272947,"byte_end":272955,"line_start":960,"line_end":960,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":273295,"byte_end":273303,"line_start":977,"line_end":977,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":273648,"byte_end":273656,"line_start":994,"line_end":994,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":274003,"byte_end":274011,"line_start":1011,"line_end":1011,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278483,"byte_end":278490,"line_start":102,"line_end":102,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278620,"byte_end":278627,"line_start":110,"line_end":110,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278824,"byte_end":278831,"line_start":121,"line_end":121,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":279038,"byte_end":279045,"line_start":130,"line_end":130,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":279275,"byte_end":279282,"line_start":139,"line_end":139,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280191,"byte_end":280198,"line_start":180,"line_end":180,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284883,"byte_end":284890,"line_start":347,"line_end":347,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":300174,"byte_end":300186,"line_start":886,"line_end":886,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":300828,"byte_end":300840,"line_start":913,"line_end":913,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":301427,"byte_end":301440,"line_start":936,"line_end":936,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":302242,"byte_end":302255,"line_start":973,"line_end":973,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":302438,"byte_end":302451,"line_start":984,"line_end":984,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":302555,"byte_end":302568,"line_start":991,"line_end":991,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":303288,"byte_end":303301,"line_start":1021,"line_end":1021,"column_start":7,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":303650,"byte_end":303657,"line_start":1036,"line_end":1036,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":303798,"byte_end":303805,"line_start":1044,"line_end":1044,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":303935,"byte_end":303942,"line_start":1052,"line_end":1052,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":304075,"byte_end":304082,"line_start":1060,"line_end":1060,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":304226,"byte_end":304233,"line_start":1068,"line_end":1068,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":304852,"byte_end":304859,"line_start":1095,"line_end":1095,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":304996,"byte_end":305003,"line_start":1103,"line_end":1103,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":305118,"byte_end":305125,"line_start":1109,"line_end":1109,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":305985,"byte_end":305992,"line_start":1135,"line_end":1135,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306183,"byte_end":306190,"line_start":1147,"line_end":1147,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306653,"byte_end":306668,"line_start":1166,"line_end":1166,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306911,"byte_end":306926,"line_start":1176,"line_end":1176,"column_start":34,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306962,"byte_end":306977,"line_start":1178,"line_end":1178,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":307449,"byte_end":307464,"line_start":1202,"line_end":1202,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":307716,"byte_end":307723,"line_start":1212,"line_end":1212,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":308527,"byte_end":308534,"line_start":1245,"line_end":1245,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":308702,"byte_end":308709,"line_start":1255,"line_end":1255,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":308765,"byte_end":308772,"line_start":1257,"line_end":1257,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":308983,"byte_end":308990,"line_start":1267,"line_end":1267,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":309181,"byte_end":309188,"line_start":1278,"line_end":1278,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":309374,"byte_end":309381,"line_start":1289,"line_end":1289,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":309548,"byte_end":309555,"line_start":1300,"line_end":1300,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":309775,"byte_end":309782,"line_start":1314,"line_end":1314,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":310127,"byte_end":310134,"line_start":1331,"line_end":1331,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":310479,"byte_end":310486,"line_start":1348,"line_end":1348,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":310836,"byte_end":310843,"line_start":1365,"line_end":1365,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":311195,"byte_end":311202,"line_start":1382,"line_end":1382,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":311551,"byte_end":311558,"line_start":1399,"line_end":1399,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":311903,"byte_end":311910,"line_start":1416,"line_end":1416,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":312260,"byte_end":312267,"line_start":1433,"line_end":1433,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":312619,"byte_end":312626,"line_start":1450,"line_end":1450,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206077,"byte_end":206085,"line_start":107,"line_end":107,"column_start":28,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206188,"byte_end":206196,"line_start":113,"line_end":113,"column_start":26,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206382,"byte_end":206390,"line_start":122,"line_end":122,"column_start":29,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206595,"byte_end":206603,"line_start":130,"line_end":130,"column_start":55,"column_end":63},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2424}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":206833,"byte_end":206841,"line_start":139,"line_end":139,"column_start":58,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2428}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":207753,"byte_end":207761,"line_start":180,"line_end":180,"column_start":16,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":223098,"byte_end":223108,"line_start":724,"line_end":724,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":436},"to":{"krate":1,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":231915,"byte_end":231929,"line_start":1039,"line_end":1039,"column_start":7,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":454},"to":{"krate":1,"index":5695}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":232682,"byte_end":232696,"line_start":1073,"line_end":1073,"column_start":38,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":454},"to":{"krate":1,"index":5647}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":232879,"byte_end":232893,"line_start":1084,"line_end":1084,"column_start":34,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":454},"to":{"krate":1,"index":5967}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":232997,"byte_end":233011,"line_start":1091,"line_end":1091,"column_start":40,"column_end":54},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":454},"to":{"krate":1,"index":5622}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":233731,"byte_end":233745,"line_start":1121,"line_end":1121,"column_start":7,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":454},"to":{"krate":1,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234046,"byte_end":234054,"line_start":1135,"line_end":1135,"column_start":37,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2053}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234195,"byte_end":234203,"line_start":1143,"line_end":1143,"column_start":37,"column_end":45},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2050}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234333,"byte_end":234341,"line_start":1151,"line_end":1151,"column_start":38,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":1810}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234474,"byte_end":234482,"line_start":1159,"line_end":1159,"column_start":41,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":1813}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234626,"byte_end":234634,"line_start":1167,"line_end":1167,"column_start":36,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":5608}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":234798,"byte_end":234806,"line_start":1176,"line_end":1176,"column_start":28,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235244,"byte_end":235252,"line_start":1193,"line_end":1193,"column_start":42,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":5595}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235608,"byte_end":235624,"line_start":1212,"line_end":1212,"column_start":16,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235865,"byte_end":235881,"line_start":1220,"line_end":1220,"column_start":34,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":5967}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":235916,"byte_end":235932,"line_start":1221,"line_end":1221,"column_start":29,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":5695}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":236973,"byte_end":236989,"line_start":1262,"line_end":1262,"column_start":40,"column_end":56},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":5622}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":237810,"byte_end":237826,"line_start":1291,"line_end":1291,"column_start":26,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":238079,"byte_end":238087,"line_start":1301,"line_end":1301,"column_start":33,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":5599}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":238805,"byte_end":238813,"line_start":1331,"line_end":1331,"column_start":30,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":238981,"byte_end":238989,"line_start":1341,"line_end":1341,"column_start":23,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":1865}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239045,"byte_end":239053,"line_start":1343,"line_end":1343,"column_start":31,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":1903}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239264,"byte_end":239272,"line_start":1353,"line_end":1353,"column_start":24,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":1892}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239463,"byte_end":239471,"line_start":1364,"line_end":1364,"column_start":34,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239657,"byte_end":239665,"line_start":1375,"line_end":1375,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":239832,"byte_end":239840,"line_start":1386,"line_end":1386,"column_start":25,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7220}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":240551,"byte_end":240559,"line_start":1416,"line_end":1416,"column_start":27,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7041}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":240904,"byte_end":240912,"line_start":1433,"line_end":1433,"column_start":26,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":241257,"byte_end":241265,"line_start":1450,"line_end":1450,"column_start":28,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":241615,"byte_end":241623,"line_start":1467,"line_end":1467,"column_start":29,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7049}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":241975,"byte_end":241983,"line_start":1484,"line_end":1484,"column_start":29,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7043}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":242332,"byte_end":242340,"line_start":1501,"line_end":1501,"column_start":26,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7039}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":242685,"byte_end":242693,"line_start":1518,"line_end":1518,"column_start":28,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7047}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243043,"byte_end":243051,"line_start":1535,"line_end":1535,"column_start":29,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7051}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243403,"byte_end":243411,"line_start":1552,"line_end":1552,"column_start":29,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec.rs","byte_start":243824,"byte_end":243832,"line_start":1573,"line_end":1573,"column_start":16,"column_end":24},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":247411,"byte_end":247424,"line_start":15,"line_end":15,"column_start":27,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":248500,"byte_end":248513,"line_start":58,"line_end":58,"column_start":51,"column_end":64},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":5622}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":248788,"byte_end":248801,"line_start":69,"line_end":69,"column_start":40,"column_end":53},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":5695}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":249306,"byte_end":249319,"line_start":91,"line_end":91,"column_start":45,"column_end":58},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":5967}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\arrayvec_drain.rs","byte_start":249378,"byte_end":249391,"line_start":92,"line_end":92,"column_start":49,"column_end":62},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":5647}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250111,"byte_end":250119,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250252,"byte_end":250260,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250421,"byte_end":250429,"line_start":38,"line_end":38,"column_start":26,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250588,"byte_end":250596,"line_start":46,"line_end":46,"column_start":29,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":2424}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":250826,"byte_end":250834,"line_start":58,"line_end":58,"column_start":32,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":2428}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":251017,"byte_end":251025,"line_start":69,"line_end":69,"column_start":13,"column_end":21},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":261749,"byte_end":261759,"line_start":492,"line_end":492,"column_start":25,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":705},"to":{"krate":1,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":266889,"byte_end":266897,"line_start":681,"line_end":681,"column_start":35,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":267232,"byte_end":267240,"line_start":695,"line_end":695,"column_start":36,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":267881,"byte_end":267894,"line_start":722,"line_end":722,"column_start":39,"column_end":52},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":729},"to":{"krate":1,"index":5695}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":268212,"byte_end":268225,"line_start":735,"line_end":735,"column_start":44,"column_end":57},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":729},"to":{"krate":1,"index":5967}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":268274,"byte_end":268287,"line_start":736,"line_end":736,"column_start":35,"column_end":48},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":729},"to":{"krate":1,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":268765,"byte_end":268773,"line_start":750,"line_end":750,"column_start":28,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":2053}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":268903,"byte_end":268911,"line_start":758,"line_end":758,"column_start":28,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":2050}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269030,"byte_end":269038,"line_start":766,"line_end":766,"column_start":29,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":1810}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269160,"byte_end":269168,"line_start":774,"line_end":774,"column_start":32,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":1813}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269301,"byte_end":269309,"line_start":782,"line_end":782,"column_start":27,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":5608}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269473,"byte_end":269481,"line_start":791,"line_end":791,"column_start":30,"column_end":38},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":5599}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269696,"byte_end":269704,"line_start":801,"line_end":801,"column_start":27,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269867,"byte_end":269875,"line_start":811,"line_end":811,"column_start":20,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":1865}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":269926,"byte_end":269934,"line_start":813,"line_end":813,"column_start":28,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":1903}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":270140,"byte_end":270148,"line_start":823,"line_end":823,"column_start":21,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":1892}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":270336,"byte_end":270344,"line_start":834,"line_end":834,"column_start":33,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":270500,"byte_end":270508,"line_start":845,"line_end":845,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7220}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":271191,"byte_end":271199,"line_start":875,"line_end":875,"column_start":24,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7041}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":271539,"byte_end":271547,"line_start":892,"line_end":892,"column_start":23,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":271887,"byte_end":271895,"line_start":909,"line_end":909,"column_start":25,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":272240,"byte_end":272248,"line_start":926,"line_end":926,"column_start":26,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7049}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":272595,"byte_end":272603,"line_start":943,"line_end":943,"column_start":26,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7043}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":272947,"byte_end":272955,"line_start":960,"line_end":960,"column_start":23,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7039}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":273295,"byte_end":273303,"line_start":977,"line_end":977,"column_start":25,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7047}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":273648,"byte_end":273656,"line_start":994,"line_end":994,"column_start":26,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7051}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\slicevec.rs","byte_start":274003,"byte_end":274011,"line_start":1011,"line_end":1011,"column_start":26,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278483,"byte_end":278490,"line_start":102,"line_end":102,"column_start":28,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278620,"byte_end":278627,"line_start":110,"line_end":110,"column_start":26,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":278824,"byte_end":278831,"line_start":121,"line_end":121,"column_start":29,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":279038,"byte_end":279045,"line_start":130,"line_end":130,"column_start":55,"column_end":62},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2424}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":279275,"byte_end":279282,"line_start":139,"line_end":139,"column_start":58,"column_end":65},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2428}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":280191,"byte_end":280198,"line_start":180,"line_end":180,"column_start":16,"column_end":23},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":284883,"byte_end":284890,"line_start":347,"line_end":347,"column_start":16,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":300174,"byte_end":300186,"line_start":886,"line_end":886,"column_start":33,"column_end":45},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":912},"to":{"krate":1,"index":5695}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":300828,"byte_end":300840,"line_start":913,"line_end":913,"column_start":44,"column_end":56},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":912},"to":{"krate":1,"index":5622}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":301427,"byte_end":301440,"line_start":936,"line_end":936,"column_start":29,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":930},"to":{"krate":1,"index":5695}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":302242,"byte_end":302255,"line_start":973,"line_end":973,"column_start":38,"column_end":51},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":930},"to":{"krate":1,"index":5647}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":302438,"byte_end":302451,"line_start":984,"line_end":984,"column_start":34,"column_end":47},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":930},"to":{"krate":1,"index":5967}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":302555,"byte_end":302568,"line_start":991,"line_end":991,"column_start":40,"column_end":53},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":930},"to":{"krate":1,"index":5622}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":303288,"byte_end":303301,"line_start":1021,"line_end":1021,"column_start":7,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":930},"to":{"krate":1,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":303650,"byte_end":303657,"line_start":1036,"line_end":1036,"column_start":37,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2053}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":303798,"byte_end":303805,"line_start":1044,"line_end":1044,"column_start":37,"column_end":44},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2050}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":303935,"byte_end":303942,"line_start":1052,"line_end":1052,"column_start":38,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":1810}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":304075,"byte_end":304082,"line_start":1060,"line_end":1060,"column_start":41,"column_end":48},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":1813}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":304226,"byte_end":304233,"line_start":1068,"line_end":1068,"column_start":36,"column_end":43},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":5608}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":304852,"byte_end":304859,"line_start":1095,"line_end":1095,"column_start":38,"column_end":45},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":304996,"byte_end":305003,"line_start":1103,"line_end":1103,"column_start":28,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":305118,"byte_end":305125,"line_start":1109,"line_end":1109,"column_start":30,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":305985,"byte_end":305992,"line_start":1135,"line_end":1135,"column_start":34,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306183,"byte_end":306190,"line_start":1147,"line_end":1147,"column_start":42,"column_end":49},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":5595}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306653,"byte_end":306668,"line_start":1166,"line_end":1166,"column_start":16,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306911,"byte_end":306926,"line_start":1176,"line_end":1176,"column_start":34,"column_end":49},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":998},"to":{"krate":1,"index":5967}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":306962,"byte_end":306977,"line_start":1178,"line_end":1178,"column_start":29,"column_end":44},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":998},"to":{"krate":1,"index":5695}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":307449,"byte_end":307464,"line_start":1202,"line_end":1202,"column_start":26,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":998},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":307716,"byte_end":307723,"line_start":1212,"line_end":1212,"column_start":33,"column_end":40},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":5599}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":308527,"byte_end":308534,"line_start":1245,"line_end":1245,"column_start":30,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":308702,"byte_end":308709,"line_start":1255,"line_end":1255,"column_start":23,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":1865}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":308765,"byte_end":308772,"line_start":1257,"line_end":1257,"column_start":31,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":1903}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":308983,"byte_end":308990,"line_start":1267,"line_end":1267,"column_start":24,"column_end":31},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":1892}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":309181,"byte_end":309188,"line_start":1278,"line_end":1278,"column_start":34,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":309374,"byte_end":309381,"line_start":1289,"line_end":1289,"column_start":42,"column_end":49},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":1860}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":309548,"byte_end":309555,"line_start":1300,"line_end":1300,"column_start":25,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7220}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":309775,"byte_end":309782,"line_start":1314,"line_end":1314,"column_start":27,"column_end":34},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7041}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":310127,"byte_end":310134,"line_start":1331,"line_end":1331,"column_start":26,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":310479,"byte_end":310486,"line_start":1348,"line_end":1348,"column_start":28,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":310836,"byte_end":310843,"line_start":1365,"line_end":1365,"column_start":29,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7049}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":311195,"byte_end":311202,"line_start":1382,"line_end":1382,"column_start":29,"column_end":36},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7043}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":311551,"byte_end":311558,"line_start":1399,"line_end":1399,"column_start":26,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7039}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":311903,"byte_end":311910,"line_start":1416,"line_end":1416,"column_start":28,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7047}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":312260,"byte_end":312267,"line_start":1433,"line_end":1433,"column_start":29,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7051}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinyvec-1.1.1\\src\\tinyvec.rs","byte_start":312619,"byte_end":312626,"line_start":1450,"line_end":1450,"column_start":29,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":7045}}]}