{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12","program":"C:\\Users\\gabri\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_util","--edition=2018","C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=60bdd9f3c4460ee4","-C","extra-filename=-60bdd9f3c4460ee4","--out-dir","c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libfutures_core-a40f239f97221124.rmeta","--extern","futures_task=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libfutures_task-5026725e6b0eaca5.rmeta","--extern","pin_project_lite=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libpin_project_lite-012c5347fd28e0f8.rmeta","--extern","pin_utils=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libpin_utils-479ea9958f16cbf5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\gabri\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libfutures_util-60bdd9f3c4460ee4.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[8562693692932808595,16690009528342934820]},"crate_root":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src","external_crates":[{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[13611023294341355437,10043691270023661894]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[101447838822452173,8618322888261503379]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13475896778791491548,12248248351844131012]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[1671919372578227713,2896883413225368489]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":5,"id":{"name":"std","disambiguator":[7607668859873757532,1781785219377684392]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":6,"id":{"name":"alloc","disambiguator":[4016777027723060150,6575819384461205726]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":7,"id":{"name":"libc","disambiguator":[2651865965395105447,1277636433429132291]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":8,"id":{"name":"unwind","disambiguator":[6625204696738865430,3777009149181587391]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[2466389407038385562,16922006968362962921]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[7691805749014262489,8411562063720114408]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10977525908131958733,15669095950081001892]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[14600121526287085947,8078689161172856885]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15875267039736385556,9614836444850963760]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","num":14,"id":{"name":"pin_utils","disambiguator":[16840040641944812805,15073646652259872033]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","num":15,"id":{"name":"futures_task","disambiguator":[2070340988363665294,5622839227080874982]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[6153343985636253266,15041629645710339115]}}],"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":0,"byte_end":12340,"line_start":1,"line_end":346,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":1485,"byte_end":1490,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":7},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":1511,"byte_end":1518,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":17},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12885,"byte_end":12896,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":1,"index":9666},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12898,"byte_end":12904,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":4,"index":32},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12906,"byte_end":12915,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":15,"index":89},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12941,"byte_end":12950,"line_start":15,"line_end":15,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":15,"index":55},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12952,"byte_end":12966,"line_start":15,"line_end":15,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":15,"index":110},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12968,"byte_end":12983,"line_start":15,"line_end":15,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13098,"byte_end":13105,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13107,"byte_end":13111,"line_start":21,"line_end":21,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13113,"byte_end":13122,"line_start":21,"line_end":21,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3095},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13124,"byte_end":13131,"line_start":21,"line_end":21,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13133,"byte_end":13143,"line_start":21,"line_end":21,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13145,"byte_end":13148,"line_start":21,"line_end":21,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13150,"byte_end":13160,"line_start":21,"line_end":21,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13162,"byte_end":13166,"line_start":21,"line_end":21,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13168,"byte_end":13177,"line_start":21,"line_end":21,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13179,"byte_end":13186,"line_start":21,"line_end":21,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13282,"byte_end":13295,"line_start":25,"line_end":25,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13625,"byte_end":13632,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13634,"byte_end":13641,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13643,"byte_end":13649,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13651,"byte_end":13661,"line_start":40,"line_end":40,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3823},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13663,"byte_end":13672,"line_start":40,"line_end":40,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13674,"byte_end":13684,"line_start":40,"line_end":40,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4006},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13686,"byte_end":13692,"line_start":40,"line_end":40,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13694,"byte_end":13699,"line_start":40,"line_end":40,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13701,"byte_end":13707,"line_start":40,"line_end":40,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13709,"byte_end":13725,"line_start":40,"line_end":40,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13731,"byte_end":13743,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4141},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13745,"byte_end":13757,"line_start":41,"line_end":41,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13759,"byte_end":13770,"line_start":41,"line_end":41,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13772,"byte_end":13782,"line_start":41,"line_end":41,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13954,"byte_end":13958,"line_start":51,"line_end":51,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4199},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":13960,"byte_end":13964,"line_start":51,"line_end":51,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14005,"byte_end":14012,"line_start":54,"line_end":54,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14014,"byte_end":14021,"line_start":54,"line_end":54,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14068,"byte_end":14078,"line_start":57,"line_end":57,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4211},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14080,"byte_end":14089,"line_start":57,"line_end":57,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14144,"byte_end":14158,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14160,"byte_end":14172,"line_start":60,"line_end":60,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14210,"byte_end":14222,"line_start":63,"line_end":63,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14262,"byte_end":14269,"line_start":66,"line_end":66,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14271,"byte_end":14277,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14314,"byte_end":14317,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14319,"byte_end":14321,"line_start":69,"line_end":69,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14323,"byte_end":14328,"line_start":69,"line_end":69,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4276},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14330,"byte_end":14335,"line_start":69,"line_end":69,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14370,"byte_end":14374,"line_start":72,"line_end":72,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14376,"byte_end":14381,"line_start":72,"line_end":72,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14383,"byte_end":14388,"line_start":72,"line_end":72,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14390,"byte_end":14395,"line_start":72,"line_end":72,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4378},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14397,"byte_end":14401,"line_start":72,"line_end":72,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14403,"byte_end":14408,"line_start":72,"line_end":72,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4480},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14410,"byte_end":14415,"line_start":72,"line_end":72,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14417,"byte_end":14422,"line_start":72,"line_end":72,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14573,"byte_end":14579,"line_start":80,"line_end":80,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4630},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14581,"byte_end":14587,"line_start":80,"line_end":80,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14755,"byte_end":14763,"line_start":89,"line_end":89,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14765,"byte_end":14774,"line_start":89,"line_end":89,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14776,"byte_end":14785,"line_start":89,"line_end":89,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14787,"byte_end":14796,"line_start":89,"line_end":89,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4708},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14798,"byte_end":14805,"line_start":89,"line_end":89,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4753},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14807,"byte_end":14815,"line_start":89,"line_end":89,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4810},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14817,"byte_end":14825,"line_start":89,"line_end":89,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4879},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":14827,"byte_end":14835,"line_start":89,"line_end":89,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15011,"byte_end":15021,"line_start":98,"line_end":98,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4960},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15023,"byte_end":15032,"line_start":98,"line_end":98,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":15186,"byte_end":15192,"line_start":106,"line_end":106,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11632,"byte_end":11641,"line_start":312,"line_end":312,"column_start":25,"column_end":34},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11643,"byte_end":11655,"line_start":312,"line_end":312,"column_start":36,"column_end":48},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":82},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114789,"byte_end":114800,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":4,"index":68},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114802,"byte_end":114808,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":4,"index":97},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114810,"byte_end":114819,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":4992},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114935,"byte_end":114940,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5041},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114942,"byte_end":114949,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114951,"byte_end":114957,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5190},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114959,"byte_end":114964,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114966,"byte_end":114975,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5269},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114977,"byte_end":114983,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5334},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114985,"byte_end":114994,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5801},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114996,"byte_end":115003,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5450},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115005,"byte_end":115012,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5503},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115014,"byte_end":115018,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5572},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115020,"byte_end":115027,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5634},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115033,"byte_end":115037,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5682},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115039,"byte_end":115046,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115048,"byte_end":115051,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5880},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115053,"byte_end":115057,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115059,"byte_end":115063,"line_start":22,"line_end":22,"column_start":31,"column_end":35},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5901},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115065,"byte_end":115073,"line_start":22,"line_end":22,"column_start":37,"column_end":45},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6382},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115075,"byte_end":115079,"line_start":22,"line_end":22,"column_start":47,"column_end":51},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5888},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115081,"byte_end":115095,"line_start":22,"line_end":22,"column_start":53,"column_end":67},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5986},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115097,"byte_end":115101,"line_start":22,"line_end":22,"column_start":69,"column_end":73},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115103,"byte_end":115112,"line_start":22,"line_end":22,"column_start":75,"column_end":84},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115114,"byte_end":115123,"line_start":22,"line_end":22,"column_start":86,"column_end":95},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5673},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115129,"byte_end":115141,"line_start":23,"line_end":23,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6099},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115143,"byte_end":115147,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6207},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115149,"byte_end":115158,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6138},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115160,"byte_end":115169,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6264},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115171,"byte_end":115175,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":5092},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115177,"byte_end":115182,"line_start":23,"line_end":23,"column_start":53,"column_end":58},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6332},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115184,"byte_end":115187,"line_start":23,"line_end":23,"column_start":60,"column_end":63},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115942,"byte_end":115952,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6451},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115954,"byte_end":115961,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6515},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115963,"byte_end":115970,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6653},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115972,"byte_end":115982,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6584},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115984,"byte_end":115993,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6724},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":115995,"byte_end":116005,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6831},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116007,"byte_end":116013,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6762},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116015,"byte_end":116020,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6897},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116022,"byte_end":116028,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7200},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116034,"byte_end":116044,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7247},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116046,"byte_end":116055,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7023},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116057,"byte_end":116066,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7088},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116068,"byte_end":116080,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7154},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116082,"byte_end":116092,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7282},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116094,"byte_end":116101,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6966},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116103,"byte_end":116113,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":6958},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116115,"byte_end":116122,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7408},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116128,"byte_end":116140,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2043},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116142,"byte_end":116154,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7477},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116156,"byte_end":116168,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7351},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116170,"byte_end":116179,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116562,"byte_end":116566,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7546},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116568,"byte_end":116572,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116611,"byte_end":116617,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7555},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116619,"byte_end":116625,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116674,"byte_end":116685,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7564},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116687,"byte_end":116697,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116734,"byte_end":116739,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7573},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116741,"byte_end":116746,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116781,"byte_end":116785,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7584},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116787,"byte_end":116791,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116832,"byte_end":116839,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7615},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116841,"byte_end":116848,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116889,"byte_end":116896,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116898,"byte_end":116904,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116943,"byte_end":116949,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7628},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116951,"byte_end":116957,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":116996,"byte_end":117002,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":7674},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":117004,"byte_end":117010,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":688}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11714,"byte_end":11723,"line_start":316,"line_end":316,"column_start":25,"column_end":34},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2043},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11725,"byte_end":11737,"line_start":316,"line_end":316,"column_start":36,"column_end":48},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":9841},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321998,"byte_end":322005,"line_start":13,"line_end":13,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":1,"index":37287},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322007,"byte_end":322011,"line_start":13,"line_end":13,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":1,"index":9851},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322013,"byte_end":322018,"line_start":13,"line_end":13,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":1,"index":37323},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322020,"byte_end":322028,"line_start":13,"line_end":13,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":1,"index":37332},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322030,"byte_end":322044,"line_start":13,"line_end":13,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":15,"index":10},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322076,"byte_end":322081,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":15,"index":13},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322083,"byte_end":322093,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":15,"index":16},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322095,"byte_end":322105,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":15,"index":89},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322111,"byte_end":322120,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":15,"index":55},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322122,"byte_end":322136,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":15,"index":110},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322138,"byte_end":322153,"line_start":17,"line_end":17,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":15,"index":151},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322181,"byte_end":322191,"line_start":20,"line_end":20,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":4,"index":142},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322535,"byte_end":322546,"line_start":34,"line_end":34,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":0,"index":2391},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322584,"byte_end":322592,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2368}},{"kind":"Use","ref_id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":322594,"byte_end":322607,"line_start":38,"line_end":38,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2368}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":0,"byte_end":12340,"line_start":1,"line_end":346,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":11},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2606}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":384,"byte_end":390,"line_start":7,"line_end":7,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":393,"byte_end":499,"line_start":8,"line_end":13,"column_start":1,"column_end":3}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":667,"byte_end":688,"line_start":16,"line_end":16,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":681},{"krate":0,"index":682}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12342,"byte_end":12366,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12367,"byte_end":12370,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12371,"byte_end":12396,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12397,"byte_end":12400,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12401,"byte_end":12428,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12429,"byte_end":12508,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12509,"byte_end":12546,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12547,"byte_end":12626,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12627,"byte_end":12702,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\mod.rs","byte_start":12703,"byte_end":12767,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":2621},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35841,"byte_end":35846,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":2618},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2623},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35875,"byte_end":35881,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":2618},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2625},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35910,"byte_end":35915,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":2618},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35811,"byte_end":35818,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":2621},{"krate":0,"index":2623},{"krate":0,"index":2625}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40350,"byte_end":40354,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":2668}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42173,"byte_end":42183,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40551,"byte_end":40619,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40624,"byte_end":40627,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40632,"byte_end":40700,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40705,"byte_end":40750,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40755,"byte_end":40758,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40763,"byte_end":40777,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40782,"byte_end":40785,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40790,"byte_end":40797,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40802,"byte_end":40843,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40848,"byte_end":40879,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40884,"byte_end":40940,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40945,"byte_end":40969,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40974,"byte_end":41009,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41014,"byte_end":41039,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41044,"byte_end":41047,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41052,"byte_end":41101,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41106,"byte_end":41109,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41114,"byte_end":41156,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41161,"byte_end":41200,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41205,"byte_end":41244,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41249,"byte_end":41266,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41271,"byte_end":41274,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41279,"byte_end":41349,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41354,"byte_end":41393,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41398,"byte_end":41439,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41444,"byte_end":41470,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41475,"byte_end":41478,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41483,"byte_end":41493,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41498,"byte_end":41515,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41520,"byte_end":41554,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41559,"byte_end":41606,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41611,"byte_end":41660,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41665,"byte_end":41727,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41732,"byte_end":41756,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41761,"byte_end":41804,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41809,"byte_end":41866,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41871,"byte_end":41946,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41951,"byte_end":41981,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":41986,"byte_end":42003,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42008,"byte_end":42022,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42027,"byte_end":42111,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42116,"byte_end":42125,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42130,"byte_end":42135,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42140,"byte_end":42149,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42154,"byte_end":42161,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43242,"byte_end":43252,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":2701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43336,"byte_end":43344,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":2701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43220,"byte_end":43223,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2707}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7273213,"byte_end":7273222,"line_start":631,"line_end":631,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":16342,"byte_end":16349,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":2754}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":16600,"byte_end":16613,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2802}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":16953,"byte_end":16956,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2853}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":17163,"byte_end":17173,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":2912}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":17379,"byte_end":17386,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":2963}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":17579,"byte_end":17583,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3026}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3095},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":17828,"byte_end":17835,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3098}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":18076,"byte_end":18086,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3157}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":18299,"byte_end":18308,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3205}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19290,"byte_end":19299,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19191,"byte_end":19265,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19266,"byte_end":19279,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20131,"byte_end":20134,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19314,"byte_end":19389,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19394,"byte_end":19417,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19422,"byte_end":19425,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19430,"byte_end":19504,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19509,"byte_end":19580,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19585,"byte_end":19647,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19652,"byte_end":19655,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19660,"byte_end":19731,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19736,"byte_end":19807,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19812,"byte_end":19833,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19838,"byte_end":19841,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19846,"byte_end":19860,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19865,"byte_end":19868,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19873,"byte_end":19880,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19885,"byte_end":19926,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19931,"byte_end":19966,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19971,"byte_end":19974,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19979,"byte_end":20008,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20013,"byte_end":20056,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20061,"byte_end":20097,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20102,"byte_end":20111,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20116,"byte_end":20123,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20531,"byte_end":20539,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20304,"byte_end":20379,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20384,"byte_end":20407,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20412,"byte_end":20415,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20420,"byte_end":20498,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20503,"byte_end":20523,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21551,"byte_end":21555,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20698,"byte_end":20774,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20779,"byte_end":20822,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20827,"byte_end":20830,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20835,"byte_end":20906,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20911,"byte_end":20985,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":20990,"byte_end":21006,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21011,"byte_end":21014,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21019,"byte_end":21094,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21099,"byte_end":21110,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21115,"byte_end":21118,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21123,"byte_end":21194,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21199,"byte_end":21225,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21230,"byte_end":21233,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21238,"byte_end":21252,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21257,"byte_end":21260,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21265,"byte_end":21272,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21277,"byte_end":21318,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21323,"byte_end":21358,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21363,"byte_end":21366,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21371,"byte_end":21405,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21410,"byte_end":21475,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21480,"byte_end":21517,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21522,"byte_end":21531,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21536,"byte_end":21543,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22425,"byte_end":22436,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21767,"byte_end":21842,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21847,"byte_end":21868,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21873,"byte_end":21876,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21881,"byte_end":21961,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":21966,"byte_end":22038,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22043,"byte_end":22046,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22051,"byte_end":22065,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22070,"byte_end":22073,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22078,"byte_end":22085,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22090,"byte_end":22131,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22136,"byte_end":22171,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22176,"byte_end":22179,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22184,"byte_end":22198,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22203,"byte_end":22231,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22236,"byte_end":22272,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22277,"byte_end":22289,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22294,"byte_end":22332,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22337,"byte_end":22343,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22348,"byte_end":22351,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22356,"byte_end":22391,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22396,"byte_end":22405,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22410,"byte_end":22417,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23275,"byte_end":23287,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22616,"byte_end":22692,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22697,"byte_end":22718,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22723,"byte_end":22726,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22731,"byte_end":22810,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22815,"byte_end":22887,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22892,"byte_end":22895,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22900,"byte_end":22914,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22919,"byte_end":22922,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22927,"byte_end":22934,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22939,"byte_end":22980,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":22985,"byte_end":23020,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23025,"byte_end":23028,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23033,"byte_end":23047,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23052,"byte_end":23080,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23085,"byte_end":23121,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23126,"byte_end":23138,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23143,"byte_end":23181,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23186,"byte_end":23192,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23197,"byte_end":23200,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23205,"byte_end":23241,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23246,"byte_end":23255,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23260,"byte_end":23267,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24066,"byte_end":24077,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23468,"byte_end":23521,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23526,"byte_end":23529,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23534,"byte_end":23608,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23613,"byte_end":23676,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23681,"byte_end":23684,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23689,"byte_end":23703,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23708,"byte_end":23711,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23716,"byte_end":23723,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23728,"byte_end":23769,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23774,"byte_end":23809,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23814,"byte_end":23849,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23854,"byte_end":23857,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23862,"byte_end":23892,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23897,"byte_end":23935,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23940,"byte_end":23991,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":23996,"byte_end":24032,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24037,"byte_end":24046,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24051,"byte_end":24058,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24942,"byte_end":24949,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24216,"byte_end":24280,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24285,"byte_end":24321,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24326,"byte_end":24329,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24334,"byte_end":24403,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24408,"byte_end":24445,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24450,"byte_end":24453,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24458,"byte_end":24518,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24523,"byte_end":24526,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24531,"byte_end":24602,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24607,"byte_end":24633,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24638,"byte_end":24641,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24646,"byte_end":24660,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24665,"byte_end":24668,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24673,"byte_end":24680,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24685,"byte_end":24726,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24731,"byte_end":24766,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24771,"byte_end":24774,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24779,"byte_end":24825,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24830,"byte_end":24871,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24876,"byte_end":24908,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24913,"byte_end":24922,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":24927,"byte_end":24934,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26054,"byte_end":26068,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25163,"byte_end":25238,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25243,"byte_end":25266,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25271,"byte_end":25274,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25279,"byte_end":25351,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25356,"byte_end":25429,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25434,"byte_end":25448,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25453,"byte_end":25456,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25461,"byte_end":25531,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25536,"byte_end":25554,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25559,"byte_end":25562,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25567,"byte_end":25581,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25586,"byte_end":25589,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25594,"byte_end":25601,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25606,"byte_end":25647,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25652,"byte_end":25687,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25692,"byte_end":25735,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25740,"byte_end":25743,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25748,"byte_end":25788,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25793,"byte_end":25859,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25864,"byte_end":25867,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25872,"byte_end":25925,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25930,"byte_end":25976,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":25981,"byte_end":26020,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26025,"byte_end":26034,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26039,"byte_end":26046,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27156,"byte_end":27160,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26261,"byte_end":26334,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26339,"byte_end":26405,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26410,"byte_end":26428,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26433,"byte_end":26436,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26441,"byte_end":26508,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26513,"byte_end":26578,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26583,"byte_end":26655,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26660,"byte_end":26734,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26739,"byte_end":26765,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26770,"byte_end":26773,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26778,"byte_end":26849,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26854,"byte_end":26929,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26934,"byte_end":26988,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":26993,"byte_end":26996,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27001,"byte_end":27075,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27080,"byte_end":27148,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":28000,"byte_end":28007,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27306,"byte_end":27372,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27377,"byte_end":27380,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27385,"byte_end":27460,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27465,"byte_end":27538,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27543,"byte_end":27612,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27617,"byte_end":27667,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27672,"byte_end":27675,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27680,"byte_end":27694,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27699,"byte_end":27702,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27707,"byte_end":27714,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27719,"byte_end":27760,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27765,"byte_end":27800,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27805,"byte_end":27808,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27813,"byte_end":27842,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27847,"byte_end":27925,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27930,"byte_end":27966,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27971,"byte_end":27980,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":27985,"byte_end":27992,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33168,"byte_end":33178,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33035,"byte_end":33084,"line_start":538,"line_end":538,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33089,"byte_end":33160,"line_start":539,"line_end":539,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33463,"byte_end":33474,"line_start":549,"line_end":549,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33327,"byte_end":33376,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33381,"byte_end":33455,"line_start":548,"line_end":548,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33705,"byte_end":33715,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33628,"byte_end":33697,"line_start":556,"line_end":556,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":35111,"byte_end":35123,"line_start":595,"line_end":595,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33851,"byte_end":33923,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33928,"byte_end":33991,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":33996,"byte_end":33999,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34004,"byte_end":34070,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34075,"byte_end":34078,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34083,"byte_end":34156,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34161,"byte_end":34230,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34235,"byte_end":34305,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34310,"byte_end":34313,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34318,"byte_end":34332,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34337,"byte_end":34340,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34345,"byte_end":34352,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34357,"byte_end":34387,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34392,"byte_end":34442,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34447,"byte_end":34486,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34491,"byte_end":34542,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34547,"byte_end":34550,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34555,"byte_end":34615,"line_start":581,"line_end":581,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34620,"byte_end":34672,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34677,"byte_end":34684,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34689,"byte_end":34692,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34697,"byte_end":34766,"line_start":585,"line_end":585,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34771,"byte_end":34844,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34849,"byte_end":34881,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34886,"byte_end":34889,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34894,"byte_end":34901,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34906,"byte_end":34953,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":34958,"byte_end":34997,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":35002,"byte_end":35005,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":35010,"byte_end":35091,"line_start":593,"line_end":593,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":35096,"byte_end":35103,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66420,"byte_end":66430,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":3256}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67415,"byte_end":67420,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":3289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3294},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67449,"byte_end":67455,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":3289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3296},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67484,"byte_end":67489,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":3289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3289},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67382,"byte_end":67392,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3292},{"krate":0,"index":3294},{"krate":0,"index":3296}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72614,"byte_end":72619,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":3336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72648,"byte_end":72654,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":3336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72683,"byte_end":72688,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":3336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72578,"byte_end":72591,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":45377,"byte_end":45387,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3385}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":45635,"byte_end":45648,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3446}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":45916,"byte_end":45932,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3505}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":46520,"byte_end":46527,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3558}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":46767,"byte_end":46773,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3632}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":47023,"byte_end":47030,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":3704}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":47238,"byte_end":47244,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":3765}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3823},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":47463,"byte_end":47472,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":3826}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":47744,"byte_end":47754,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":3887}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":48127,"byte_end":48132,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":3948}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4006},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":48373,"byte_end":48379,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4009}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":48636,"byte_end":48647,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4072}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4141},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":48931,"byte_end":48943,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4144}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49233,"byte_end":49245,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49169,"byte_end":49222,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51955,"byte_end":51961,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50583,"byte_end":50641,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50646,"byte_end":50649,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50654,"byte_end":50729,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50734,"byte_end":50804,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50809,"byte_end":50882,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50887,"byte_end":50916,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50921,"byte_end":50924,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":50929,"byte_end":51004,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51009,"byte_end":51084,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51089,"byte_end":51136,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51141,"byte_end":51144,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51149,"byte_end":51224,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51229,"byte_end":51255,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51260,"byte_end":51263,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51268,"byte_end":51282,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51287,"byte_end":51290,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51295,"byte_end":51302,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51307,"byte_end":51345,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51350,"byte_end":51353,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51358,"byte_end":51399,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51404,"byte_end":51449,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51454,"byte_end":51496,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51501,"byte_end":51537,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51542,"byte_end":51551,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51556,"byte_end":51563,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51568,"byte_end":51571,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51576,"byte_end":51648,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51653,"byte_end":51664,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51669,"byte_end":51672,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51677,"byte_end":51684,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51689,"byte_end":51727,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51732,"byte_end":51735,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51740,"byte_end":51781,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51786,"byte_end":51832,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51837,"byte_end":51879,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51884,"byte_end":51921,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51926,"byte_end":51935,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":51940,"byte_end":51947,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53520,"byte_end":53534,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52152,"byte_end":52269,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52274,"byte_end":52277,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52282,"byte_end":52404,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52409,"byte_end":52459,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52464,"byte_end":52467,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52472,"byte_end":52547,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52552,"byte_end":52627,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52632,"byte_end":52679,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52684,"byte_end":52687,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52692,"byte_end":52767,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52772,"byte_end":52847,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52852,"byte_end":52899,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52904,"byte_end":52907,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52912,"byte_end":52987,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":52992,"byte_end":53018,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53023,"byte_end":53026,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53031,"byte_end":53045,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53050,"byte_end":53053,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53058,"byte_end":53065,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53070,"byte_end":53108,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53113,"byte_end":53116,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53121,"byte_end":53162,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53167,"byte_end":53212,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53217,"byte_end":53278,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53283,"byte_end":53315,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53320,"byte_end":53323,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53328,"byte_end":53374,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53379,"byte_end":53440,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53445,"byte_end":53478,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53483,"byte_end":53492,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53497,"byte_end":53504,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53509,"byte_end":53512,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55217,"byte_end":55224,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53768,"byte_end":53824,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53829,"byte_end":53832,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53837,"byte_end":53911,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53916,"byte_end":53977,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":53982,"byte_end":54052,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54057,"byte_end":54132,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54137,"byte_end":54172,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54177,"byte_end":54180,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54185,"byte_end":54260,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54265,"byte_end":54340,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54345,"byte_end":54392,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54397,"byte_end":54400,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54405,"byte_end":54480,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54485,"byte_end":54511,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54516,"byte_end":54519,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54524,"byte_end":54538,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54543,"byte_end":54546,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54551,"byte_end":54558,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54563,"byte_end":54601,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54606,"byte_end":54609,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54614,"byte_end":54655,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54660,"byte_end":54706,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54711,"byte_end":54754,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54759,"byte_end":54796,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54801,"byte_end":54810,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54815,"byte_end":54822,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54827,"byte_end":54830,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54835,"byte_end":54908,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54913,"byte_end":54927,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54932,"byte_end":54935,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54940,"byte_end":54947,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54952,"byte_end":54990,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":54995,"byte_end":54998,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55003,"byte_end":55044,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55049,"byte_end":55094,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55099,"byte_end":55142,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55147,"byte_end":55183,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55188,"byte_end":55197,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55202,"byte_end":55209,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56314,"byte_end":56322,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55417,"byte_end":55487,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55492,"byte_end":55541,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55546,"byte_end":55549,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55554,"byte_end":55617,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55622,"byte_end":55690,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55695,"byte_end":55768,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55773,"byte_end":55849,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55854,"byte_end":55899,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55904,"byte_end":55907,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55912,"byte_end":55987,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":55992,"byte_end":56018,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56023,"byte_end":56026,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56031,"byte_end":56045,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56050,"byte_end":56053,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56058,"byte_end":56065,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56070,"byte_end":56108,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56113,"byte_end":56116,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56121,"byte_end":56162,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56167,"byte_end":56218,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56223,"byte_end":56280,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56285,"byte_end":56294,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56299,"byte_end":56306,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56618,"byte_end":56625,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56498,"byte_end":56556,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56561,"byte_end":56610,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58180,"byte_end":58188,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56799,"byte_end":56868,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56873,"byte_end":56947,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56952,"byte_end":56955,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":56960,"byte_end":57035,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57040,"byte_end":57110,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57115,"byte_end":57180,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57185,"byte_end":57251,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57256,"byte_end":57290,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57295,"byte_end":57298,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57303,"byte_end":57378,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57383,"byte_end":57409,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57414,"byte_end":57417,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57422,"byte_end":57436,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57441,"byte_end":57444,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57449,"byte_end":57456,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57461,"byte_end":57499,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57504,"byte_end":57507,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57512,"byte_end":57553,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57558,"byte_end":57603,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57608,"byte_end":57683,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57688,"byte_end":57724,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57729,"byte_end":57738,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57743,"byte_end":57750,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57755,"byte_end":57758,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57763,"byte_end":57839,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57844,"byte_end":57855,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57860,"byte_end":57863,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57868,"byte_end":57875,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57880,"byte_end":57918,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57923,"byte_end":57926,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57931,"byte_end":57972,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":57977,"byte_end":58023,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58028,"byte_end":58104,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58109,"byte_end":58146,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58151,"byte_end":58160,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58165,"byte_end":58172,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59809,"byte_end":59816,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58442,"byte_end":58507,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58512,"byte_end":58584,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58589,"byte_end":58592,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58597,"byte_end":58672,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58677,"byte_end":58747,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58752,"byte_end":58817,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58822,"byte_end":58898,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58903,"byte_end":58921,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58926,"byte_end":58929,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":58934,"byte_end":59009,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59014,"byte_end":59040,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59045,"byte_end":59048,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59053,"byte_end":59067,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59072,"byte_end":59075,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59080,"byte_end":59087,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59092,"byte_end":59130,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59135,"byte_end":59138,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59143,"byte_end":59184,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59189,"byte_end":59235,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59240,"byte_end":59315,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59320,"byte_end":59357,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59362,"byte_end":59371,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59376,"byte_end":59383,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59388,"byte_end":59391,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59396,"byte_end":59469,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59474,"byte_end":59488,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59493,"byte_end":59496,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59501,"byte_end":59508,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59513,"byte_end":59551,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59556,"byte_end":59559,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59564,"byte_end":59605,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59610,"byte_end":59655,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59660,"byte_end":59734,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59739,"byte_end":59775,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59780,"byte_end":59789,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":59794,"byte_end":59801,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60792,"byte_end":60802,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60065,"byte_end":60138,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60143,"byte_end":60146,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60151,"byte_end":60226,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60231,"byte_end":60304,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60309,"byte_end":60378,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60383,"byte_end":60436,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60441,"byte_end":60444,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60449,"byte_end":60463,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60468,"byte_end":60471,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60476,"byte_end":60483,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60488,"byte_end":60529,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60534,"byte_end":60572,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60577,"byte_end":60580,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60585,"byte_end":60627,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60632,"byte_end":60713,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60718,"byte_end":60758,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60763,"byte_end":60772,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":60777,"byte_end":60784,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61728,"byte_end":61739,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61001,"byte_end":61072,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61077,"byte_end":61080,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61085,"byte_end":61160,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61165,"byte_end":61238,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61243,"byte_end":61312,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61317,"byte_end":61371,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61376,"byte_end":61379,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61384,"byte_end":61398,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61403,"byte_end":61406,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61411,"byte_end":61418,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61423,"byte_end":61464,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61469,"byte_end":61507,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61512,"byte_end":61515,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61520,"byte_end":61563,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61568,"byte_end":61648,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61653,"byte_end":61694,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61699,"byte_end":61708,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61713,"byte_end":61720,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62124,"byte_end":62135,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":61943,"byte_end":62018,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62023,"byte_end":62052,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62057,"byte_end":62060,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62065,"byte_end":62116,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63244,"byte_end":63262,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62300,"byte_end":62375,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62380,"byte_end":62403,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62408,"byte_end":62411,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62416,"byte_end":62488,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62493,"byte_end":62566,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62571,"byte_end":62585,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62590,"byte_end":62593,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62598,"byte_end":62668,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62673,"byte_end":62691,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62696,"byte_end":62699,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62704,"byte_end":62718,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62723,"byte_end":62726,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62731,"byte_end":62738,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62743,"byte_end":62784,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62789,"byte_end":62827,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62832,"byte_end":62878,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62883,"byte_end":62886,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62891,"byte_end":62951,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":62956,"byte_end":63035,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63040,"byte_end":63043,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63048,"byte_end":63105,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63110,"byte_end":63162,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63167,"byte_end":63210,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63215,"byte_end":63224,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63229,"byte_end":63236,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64352,"byte_end":64366,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63522,"byte_end":63592,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63597,"byte_end":63634,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63639,"byte_end":63688,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63693,"byte_end":63696,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63701,"byte_end":63770,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63775,"byte_end":63848,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63853,"byte_end":63923,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63928,"byte_end":63946,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63951,"byte_end":63954,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":63959,"byte_end":64027,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64032,"byte_end":64035,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64040,"byte_end":64054,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64059,"byte_end":64062,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64067,"byte_end":64074,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64079,"byte_end":64117,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64122,"byte_end":64125,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64130,"byte_end":64171,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64176,"byte_end":64228,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64233,"byte_end":64280,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64285,"byte_end":64318,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64323,"byte_end":64332,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64337,"byte_end":64344,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65620,"byte_end":65631,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64919,"byte_end":64972,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":64977,"byte_end":65013,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65018,"byte_end":65021,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65026,"byte_end":65075,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65080,"byte_end":65147,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65152,"byte_end":65165,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65170,"byte_end":65173,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65178,"byte_end":65192,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65197,"byte_end":65200,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65205,"byte_end":65212,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65217,"byte_end":65276,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65281,"byte_end":65284,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65289,"byte_end":65308,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65313,"byte_end":65331,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65336,"byte_end":65408,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65413,"byte_end":65445,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65450,"byte_end":65457,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65462,"byte_end":65538,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65543,"byte_end":65546,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65551,"byte_end":65600,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65605,"byte_end":65612,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65890,"byte_end":65904,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65787,"byte_end":65860,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":65865,"byte_end":65882,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4199},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74387,"byte_end":74391,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4201}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74253,"byte_end":74290,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74308,"byte_end":74375,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74932,"byte_end":74936,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74495,"byte_end":74563,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74564,"byte_end":74567,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74568,"byte_end":74631,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74632,"byte_end":74635,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74636,"byte_end":74650,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74651,"byte_end":74654,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74655,"byte_end":74662,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74663,"byte_end":74704,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74705,"byte_end":74729,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74730,"byte_end":74733,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74734,"byte_end":74766,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74767,"byte_end":74794,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74795,"byte_end":74798,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74799,"byte_end":74836,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74837,"byte_end":74861,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74862,"byte_end":74869,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74870,"byte_end":74906,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74907,"byte_end":74916,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74917,"byte_end":74924,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75702,"byte_end":75709,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4207}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75563,"byte_end":75605,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75623,"byte_end":75690,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76228,"byte_end":76235,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75850,"byte_end":75930,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75931,"byte_end":75944,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75945,"byte_end":75948,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75949,"byte_end":76011,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76012,"byte_end":76015,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76016,"byte_end":76030,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76031,"byte_end":76034,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76035,"byte_end":76048,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76049,"byte_end":76090,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76091,"byte_end":76115,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76116,"byte_end":76119,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76120,"byte_end":76155,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76156,"byte_end":76182,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76183,"byte_end":76202,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76203,"byte_end":76212,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76213,"byte_end":76220,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4213},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76972,"byte_end":76978,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":4211},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76937,"byte_end":76967,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4216},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77045,"byte_end":77049,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":4211},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77002,"byte_end":77040,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4219},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77211,"byte_end":77215,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":4211},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77068,"byte_end":77134,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77139,"byte_end":77206,"line_start":19,"line_end":19,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":4211},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76908,"byte_end":76917,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4213},{"krate":0,"index":4216},{"krate":0,"index":4219}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76786,"byte_end":76823,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76824,"byte_end":76827,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":76828,"byte_end":76881,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77736,"byte_end":77746,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77275,"byte_end":77312,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77313,"byte_end":77316,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77317,"byte_end":77331,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77332,"byte_end":77335,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77336,"byte_end":77343,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77344,"byte_end":77385,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77386,"byte_end":77410,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77411,"byte_end":77436,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77437,"byte_end":77440,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77441,"byte_end":77490,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77491,"byte_end":77512,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77513,"byte_end":77565,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77566,"byte_end":77601,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77602,"byte_end":77657,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77658,"byte_end":77710,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77711,"byte_end":77720,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77721,"byte_end":77728,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78163,"byte_end":78173,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77865,"byte_end":77950,"line_start":47,"line_end":47,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77955,"byte_end":78026,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78031,"byte_end":78104,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78109,"byte_end":78137,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78142,"byte_end":78151,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78521,"byte_end":78532,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78401,"byte_end":78467,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78472,"byte_end":78495,"line_start":62,"line_end":62,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78500,"byte_end":78509,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4226},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80131,"byte_end":80137,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":4224},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80096,"byte_end":80126,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4229},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80204,"byte_end":80208,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":4224},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80161,"byte_end":80199,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4232},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80416,"byte_end":80420,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":4224},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80223,"byte_end":80292,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80297,"byte_end":80367,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80372,"byte_end":80411,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80061,"byte_end":80073,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4229},{"krate":0,"index":4232}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":79921,"byte_end":79972,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":79973,"byte_end":79976,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":79977,"byte_end":80034,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80534,"byte_end":80548,"line_start":27,"line_end":27,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80486,"byte_end":80526,"line_start":26,"line_end":26,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80991,"byte_end":81001,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80682,"byte_end":80767,"line_start":32,"line_end":32,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80772,"byte_end":80843,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80848,"byte_end":80932,"line_start":34,"line_end":34,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80937,"byte_end":80965,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80970,"byte_end":80979,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81351,"byte_end":81362,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81228,"byte_end":81297,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81302,"byte_end":81325,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81330,"byte_end":81339,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":83638,"byte_end":83650,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":4244}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84662,"byte_end":84668,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":448}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84542,"byte_end":84582,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84583,"byte_end":84650,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85255,"byte_end":85262,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84719,"byte_end":84790,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84791,"byte_end":84794,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84795,"byte_end":84861,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84862,"byte_end":84865,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84866,"byte_end":84880,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84881,"byte_end":84884,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84885,"byte_end":84892,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84893,"byte_end":84934,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84935,"byte_end":84968,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84969,"byte_end":85008,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85009,"byte_end":85012,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85013,"byte_end":85070,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85071,"byte_end":85114,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85115,"byte_end":85120,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85121,"byte_end":85124,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85125,"byte_end":85166,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85167,"byte_end":85229,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85230,"byte_end":85239,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85240,"byte_end":85247,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4276},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":85982,"byte_end":85987,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":85831,"byte_end":85878,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":85903,"byte_end":85970,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86110,"byte_end":86120,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86027,"byte_end":86084,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86089,"byte_end":86098,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86786,"byte_end":86791,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86540,"byte_end":86600,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86601,"byte_end":86604,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86605,"byte_end":86619,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86620,"byte_end":86623,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86624,"byte_end":86631,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86632,"byte_end":86673,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86674,"byte_end":86698,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86699,"byte_end":86702,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86703,"byte_end":86732,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86733,"byte_end":86760,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86761,"byte_end":86770,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86771,"byte_end":86778,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87103,"byte_end":87105,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86837,"byte_end":86904,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86905,"byte_end":86908,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86909,"byte_end":86923,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86924,"byte_end":86927,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86928,"byte_end":86935,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86936,"byte_end":86977,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86978,"byte_end":87002,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87003,"byte_end":87006,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87007,"byte_end":87045,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87046,"byte_end":87077,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87078,"byte_end":87087,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87088,"byte_end":87095,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87436,"byte_end":87439,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87169,"byte_end":87235,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87236,"byte_end":87239,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87240,"byte_end":87254,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87255,"byte_end":87258,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87259,"byte_end":87266,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87267,"byte_end":87308,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87309,"byte_end":87333,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87334,"byte_end":87337,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87338,"byte_end":87377,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87378,"byte_end":87410,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87411,"byte_end":87420,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":87421,"byte_end":87428,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4378},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89726,"byte_end":89730,"line_start":79,"line_end":79,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":4381},{"krate":0,"index":4382}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89796,"byte_end":89801,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4480},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89873,"byte_end":89878,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89956,"byte_end":89961,"line_start":88,"line_end":88,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4559}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90576,"byte_end":90580,"line_start":112,"line_end":112,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":89999,"byte_end":90070,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90071,"byte_end":90074,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90075,"byte_end":90146,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90147,"byte_end":90222,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90223,"byte_end":90226,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90227,"byte_end":90296,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90297,"byte_end":90323,"line_start":97,"line_end":97,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90324,"byte_end":90327,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90328,"byte_end":90342,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90343,"byte_end":90346,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90347,"byte_end":90354,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90355,"byte_end":90396,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90397,"byte_end":90421,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90422,"byte_end":90425,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90426,"byte_end":90450,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90451,"byte_end":90475,"line_start":106,"line_end":106,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90476,"byte_end":90510,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90511,"byte_end":90514,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90515,"byte_end":90550,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90551,"byte_end":90560,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90561,"byte_end":90568,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91126,"byte_end":91131,"line_start":137,"line_end":137,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90787,"byte_end":90839,"line_start":121,"line_end":121,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90840,"byte_end":90843,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90844,"byte_end":90858,"line_start":123,"line_end":123,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90859,"byte_end":90862,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90863,"byte_end":90870,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90871,"byte_end":90912,"line_start":126,"line_end":126,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90913,"byte_end":90937,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90938,"byte_end":90941,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90942,"byte_end":90966,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90967,"byte_end":90991,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":90992,"byte_end":91016,"line_start":131,"line_end":131,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91017,"byte_end":91056,"line_start":132,"line_end":132,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91057,"byte_end":91060,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91061,"byte_end":91100,"line_start":134,"line_end":134,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91101,"byte_end":91110,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91111,"byte_end":91118,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91714,"byte_end":91719,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91344,"byte_end":91396,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91397,"byte_end":91400,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91401,"byte_end":91415,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91416,"byte_end":91419,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91420,"byte_end":91427,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91428,"byte_end":91469,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91470,"byte_end":91494,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91495,"byte_end":91498,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91499,"byte_end":91523,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91524,"byte_end":91548,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91549,"byte_end":91573,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91574,"byte_end":91598,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91599,"byte_end":91641,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91642,"byte_end":91645,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91646,"byte_end":91688,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91689,"byte_end":91698,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91699,"byte_end":91706,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92391,"byte_end":92396,"line_start":200,"line_end":200,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":91990,"byte_end":92042,"line_start":182,"line_end":182,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92043,"byte_end":92046,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92047,"byte_end":92061,"line_start":184,"line_end":184,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92062,"byte_end":92065,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92066,"byte_end":92073,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92074,"byte_end":92115,"line_start":187,"line_end":187,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92116,"byte_end":92140,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92141,"byte_end":92144,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92145,"byte_end":92169,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92170,"byte_end":92194,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92195,"byte_end":92219,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92220,"byte_end":92244,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92245,"byte_end":92269,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92270,"byte_end":92315,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92316,"byte_end":92319,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92320,"byte_end":92365,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92366,"byte_end":92375,"line_start":198,"line_end":198,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\join.rs","byte_start":92376,"byte_end":92383,"line_start":199,"line_end":199,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4630},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93014,"byte_end":93020,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4633}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":92876,"byte_end":92917,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":92918,"byte_end":92985,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":95168,"byte_end":95174,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93111,"byte_end":93181,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93182,"byte_end":93185,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93186,"byte_end":93264,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93265,"byte_end":93341,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93342,"byte_end":93414,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93415,"byte_end":93418,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93419,"byte_end":93491,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93492,"byte_end":93520,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93521,"byte_end":93524,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93525,"byte_end":93592,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93593,"byte_end":93657,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93658,"byte_end":93708,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93709,"byte_end":93712,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93713,"byte_end":93727,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93728,"byte_end":93731,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93732,"byte_end":93752,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93753,"byte_end":93756,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93757,"byte_end":93764,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93765,"byte_end":93806,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93807,"byte_end":93847,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93848,"byte_end":93873,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93874,"byte_end":93877,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93878,"byte_end":93968,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ let future1 = async { 1 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93969,"byte_end":93999,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ let future2 = async { 2 };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94000,"byte_end":94030,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94031,"byte_end":94034,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94035,"byte_end":94081,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94082,"byte_end":94104,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94105,"byte_end":94127,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94128,"byte_end":94131,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94132,"byte_end":94194,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1, // `value1` is resolved from `future1`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94195,"byte_end":94278,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/                                          // `_` represents `future2`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94279,"byte_end":94351,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94352,"byte_end":94436,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94437,"byte_end":94510,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94511,"byte_end":94517,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94518,"byte_end":94521,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 1 || value == 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94522,"byte_end":94560,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94561,"byte_end":94570,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94571,"byte_end":94578,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94579,"byte_end":94582,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94583,"byte_end":94609,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94610,"byte_end":94613,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94614,"byte_end":94621,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94622,"byte_end":94681,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94682,"byte_end":94685,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94686,"byte_end":94739,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94740,"byte_end":94743,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94744,"byte_end":94819,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94820,"byte_end":94852,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94853,"byte_end":94885,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94886,"byte_end":94891,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94892,"byte_end":94936,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94937,"byte_end":94963,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":94964,"byte_end":95041,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":95042,"byte_end":95121,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":95122,"byte_end":95135,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":95136,"byte_end":95146,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":95147,"byte_end":95152,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":95153,"byte_end":95160,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4708},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99059,"byte_end":99066,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":4712}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4753},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99136,"byte_end":99144,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4810},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99220,"byte_end":99228,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":4815},{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4818}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4879},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99310,"byte_end":99318,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100590,"byte_end":100598,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99356,"byte_end":99429,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99430,"byte_end":99462,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99463,"byte_end":99466,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99467,"byte_end":99538,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99539,"byte_end":99615,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99616,"byte_end":99687,"line_start":111,"line_end":111,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99688,"byte_end":99704,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99705,"byte_end":99708,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99709,"byte_end":99778,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99779,"byte_end":99805,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99806,"byte_end":99809,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99810,"byte_end":99824,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99825,"byte_end":99828,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99829,"byte_end":99905,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99906,"byte_end":99942,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99943,"byte_end":99946,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99947,"byte_end":99954,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99955,"byte_end":99996,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":99997,"byte_end":100021,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100022,"byte_end":100025,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100026,"byte_end":100071,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100072,"byte_end":100117,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100118,"byte_end":100156,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100157,"byte_end":100160,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100161,"byte_end":100200,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100201,"byte_end":100210,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100211,"byte_end":100218,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100219,"byte_end":100222,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100223,"byte_end":100293,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100294,"byte_end":100309,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100310,"byte_end":100313,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100314,"byte_end":100321,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100322,"byte_end":100363,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100364,"byte_end":100388,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100389,"byte_end":100392,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100393,"byte_end":100438,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100439,"byte_end":100485,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100486,"byte_end":100524,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100525,"byte_end":100528,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100529,"byte_end":100564,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100565,"byte_end":100574,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100575,"byte_end":100582,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101191,"byte_end":101200,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100773,"byte_end":100833,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100834,"byte_end":100837,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100838,"byte_end":100852,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100853,"byte_end":100856,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100857,"byte_end":100864,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100865,"byte_end":100906,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100907,"byte_end":100931,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100932,"byte_end":100935,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100936,"byte_end":100981,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":100982,"byte_end":101027,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101028,"byte_end":101073,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101074,"byte_end":101117,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101118,"byte_end":101121,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101122,"byte_end":101165,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101166,"byte_end":101175,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101176,"byte_end":101183,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101940,"byte_end":101949,"line_start":202,"line_end":202,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101470,"byte_end":101530,"line_start":185,"line_end":185,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101531,"byte_end":101534,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101535,"byte_end":101549,"line_start":187,"line_end":187,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101550,"byte_end":101553,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101554,"byte_end":101561,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101562,"byte_end":101603,"line_start":190,"line_end":190,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101604,"byte_end":101628,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101629,"byte_end":101632,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101633,"byte_end":101678,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101679,"byte_end":101724,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101725,"byte_end":101770,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101771,"byte_end":101816,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101817,"byte_end":101863,"line_start":197,"line_end":197,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101864,"byte_end":101867,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101868,"byte_end":101914,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101915,"byte_end":101924,"line_start":200,"line_end":200,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":101925,"byte_end":101932,"line_start":201,"line_end":201,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102823,"byte_end":102832,"line_start":235,"line_end":235,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102301,"byte_end":102361,"line_start":217,"line_end":217,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102362,"byte_end":102365,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102366,"byte_end":102380,"line_start":219,"line_end":219,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102381,"byte_end":102384,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102385,"byte_end":102392,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102393,"byte_end":102434,"line_start":222,"line_end":222,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102435,"byte_end":102459,"line_start":223,"line_end":223,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102460,"byte_end":102463,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102464,"byte_end":102509,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102510,"byte_end":102555,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102556,"byte_end":102601,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102602,"byte_end":102647,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102648,"byte_end":102693,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102694,"byte_end":102743,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102744,"byte_end":102747,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102748,"byte_end":102797,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102798,"byte_end":102807,"line_start":233,"line_end":233,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_join.rs","byte_start":102808,"byte_end":102815,"line_start":234,"line_end":234,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4960},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103560,"byte_end":103569,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":4963}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103418,"byte_end":103463,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103464,"byte_end":103531,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":105154,"byte_end":105164,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103663,"byte_end":103733,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103734,"byte_end":103737,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103738,"byte_end":103816,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103817,"byte_end":103893,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103894,"byte_end":103966,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103967,"byte_end":103970,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103971,"byte_end":104043,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104044,"byte_end":104072,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104073,"byte_end":104076,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104077,"byte_end":104144,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104145,"byte_end":104216,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104217,"byte_end":104267,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104268,"byte_end":104271,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104272,"byte_end":104286,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104287,"byte_end":104290,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104291,"byte_end":104298,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104299,"byte_end":104383,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104384,"byte_end":104387,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104388,"byte_end":104445,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104446,"byte_end":104449,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104450,"byte_end":104532,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104533,"byte_end":104590,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104591,"byte_end":104648,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104649,"byte_end":104675,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104676,"byte_end":104681,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104682,"byte_end":104777,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104778,"byte_end":104801,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104802,"byte_end":104882,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104883,"byte_end":104964,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":104965,"byte_end":105035,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":105036,"byte_end":105107,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":105108,"byte_end":105121,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":105122,"byte_end":105132,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":105133,"byte_end":105138,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":105139,"byte_end":105146,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":106703,"byte_end":106707,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":106670,"byte_end":106698,"line_start":12,"line_end":12,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4974},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":106763,"byte_end":106768,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":106729,"byte_end":106758,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":106651,"byte_end":106657,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(A),\n\n    /// Second branch of the type\n    Right(B),\n}","parent":null,"children":[{"krate":0,"index":4971},{"krate":0,"index":4974}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":106507,"byte_end":106607,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":106608,"byte_end":106617,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107322,"byte_end":107334,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107174,"byte_end":107232,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107237,"byte_end":107240,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107245,"byte_end":107310,"line_start":32,"line_end":32,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107714,"byte_end":107727,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107565,"byte_end":107623,"line_start":42,"line_end":42,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107628,"byte_end":107631,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107636,"byte_end":107702,"line_start":44,"line_end":44,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":108015,"byte_end":108025,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107942,"byte_end":108003,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114289,"byte_end":114314,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114315,"byte_end":114318,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114319,"byte_end":114344,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114345,"byte_end":114348,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114349,"byte_end":114422,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114423,"byte_end":114448,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114449,"byte_end":114528,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114529,"byte_end":114566,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114567,"byte_end":114640,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\mod.rs","byte_start":114641,"byte_end":114671,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4992},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":168116,"byte_end":168121,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":4995},{"krate":0,"index":4996}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5041},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":170290,"byte_end":170297,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":5044},{"krate":0,"index":5045}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5092},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":171760,"byte_end":171765,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":5096},{"krate":0,"index":5097},{"krate":0,"index":5098}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":173680,"byte_end":173686,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":5152},{"krate":0,"index":5153}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5190},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":175441,"byte_end":175446,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":5192},{"krate":0,"index":5193}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":177126,"byte_end":177135,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5232},{"krate":0,"index":5233}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5269},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":178823,"byte_end":178829,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5276}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5334},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":182335,"byte_end":182344,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5338},{"krate":0,"index":5339},{"krate":0,"index":5340}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5402},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":185415,"byte_end":185422,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5405},{"krate":0,"index":5406}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5450},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":119369,"byte_end":119376,"line_start":60,"line_end":60,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5452}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5503},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":187239,"byte_end":187243,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510},{"krate":0,"index":5511}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5572},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":189806,"byte_end":189813,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5634},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":191839,"byte_end":191843,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5636},{"krate":0,"index":5637}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192295,"byte_end":192302,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192026,"byte_end":192088,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192093,"byte_end":192096,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192101,"byte_end":192169,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192174,"byte_end":192240,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192245,"byte_end":192283,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5673},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":193684,"byte_end":193696,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":5675}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":193514,"byte_end":193587,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":193605,"byte_end":193672,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194259,"byte_end":194266,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":193867,"byte_end":193940,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":193945,"byte_end":193962,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":193967,"byte_end":193970,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":193975,"byte_end":194056,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194061,"byte_end":194143,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194148,"byte_end":194227,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194232,"byte_end":194247,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194877,"byte_end":194884,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194331,"byte_end":194398,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194403,"byte_end":194434,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194439,"byte_end":194442,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194447,"byte_end":194520,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194525,"byte_end":194580,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194585,"byte_end":194588,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194593,"byte_end":194674,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194679,"byte_end":194761,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194766,"byte_end":194845,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194850,"byte_end":194865,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195510,"byte_end":195521,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":194957,"byte_end":195031,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195036,"byte_end":195067,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195072,"byte_end":195075,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195080,"byte_end":195153,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195158,"byte_end":195213,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195218,"byte_end":195221,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195226,"byte_end":195307,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195312,"byte_end":195394,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195399,"byte_end":195478,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195483,"byte_end":195498,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":196154,"byte_end":196164,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195634,"byte_end":195696,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195701,"byte_end":195704,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195709,"byte_end":195781,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195786,"byte_end":195857,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195862,"byte_end":195865,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195870,"byte_end":195951,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":195956,"byte_end":196038,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":196043,"byte_end":196122,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":196127,"byte_end":196142,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5682},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":120496,"byte_end":120503,"line_start":97,"line_end":97,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5685}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":197211,"byte_end":197214,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5752}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5801},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":120864,"byte_end":120871,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":5805}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5880},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":198941,"byte_end":198945,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":5883}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":198785,"byte_end":198844,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":198862,"byte_end":198929,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5888},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":199976,"byte_end":199990,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":5891}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":199792,"byte_end":199867,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":199868,"byte_end":199879,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":199897,"byte_end":199964,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5901},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":201525,"byte_end":201533,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":5903},{"krate":0,"index":5904}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202006,"byte_end":202010,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":201851,"byte_end":201924,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":201929,"byte_end":201994,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202335,"byte_end":202344,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202097,"byte_end":202159,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202164,"byte_end":202167,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202172,"byte_end":202245,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202250,"byte_end":202323,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":204066,"byte_end":204070,"line_start":108,"line_end":108,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":5943}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5986},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":205378,"byte_end":205382,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5988},{"krate":0,"index":5989}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":207284,"byte_end":207293,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6099},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":210937,"byte_end":210941,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6101},{"krate":0,"index":6102}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6138},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":213032,"byte_end":213041,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6142},{"krate":0,"index":6143},{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6146}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6207},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":216649,"byte_end":216658,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6213}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218038,"byte_end":218049,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":217738,"byte_end":217792,"line_start":60,"line_end":60,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":217797,"byte_end":217891,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":217896,"byte_end":217959,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":217964,"byte_end":218026,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219333,"byte_end":219344,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218186,"byte_end":218251,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218256,"byte_end":218313,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218318,"byte_end":218321,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218326,"byte_end":218391,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218396,"byte_end":218456,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218461,"byte_end":218464,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218469,"byte_end":218537,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218542,"byte_end":218585,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218590,"byte_end":218593,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218598,"byte_end":218612,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218617,"byte_end":218620,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218625,"byte_end":218632,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218637,"byte_end":218678,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218683,"byte_end":218707,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218712,"byte_end":218755,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218760,"byte_end":218788,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218793,"byte_end":218796,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218801,"byte_end":218839,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218844,"byte_end":218847,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218852,"byte_end":218870,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218875,"byte_end":218917,"line_start":92,"line_end":92,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218922,"byte_end":218937,"line_start":93,"line_end":93,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218942,"byte_end":218961,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218966,"byte_end":218991,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":218996,"byte_end":219012,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219017,"byte_end":219050,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219055,"byte_end":219064,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219069,"byte_end":219076,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219081,"byte_end":219084,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219089,"byte_end":219138,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219143,"byte_end":219197,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219202,"byte_end":219205,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219210,"byte_end":219257,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219262,"byte_end":219295,"line_start":105,"line_end":105,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219300,"byte_end":219309,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219314,"byte_end":219321,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219520,"byte_end":219530,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219423,"byte_end":219484,"line_start":112,"line_end":112,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219489,"byte_end":219508,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6264},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":221462,"byte_end":221466,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":6268},{"krate":0,"index":6269},{"krate":0,"index":6270}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6332},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224143,"byte_end":224146,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6335},{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6338}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224721,"byte_end":224728,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224613,"byte_end":224687,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224692,"byte_end":224709,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225084,"byte_end":225091,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224822,"byte_end":224890,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224895,"byte_end":224926,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224931,"byte_end":224934,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224939,"byte_end":225012,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225017,"byte_end":225072,"line_start":42,"line_end":42,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225466,"byte_end":225477,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225197,"byte_end":225272,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225277,"byte_end":225308,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225313,"byte_end":225316,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225321,"byte_end":225394,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225399,"byte_end":225454,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225883,"byte_end":225893,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225647,"byte_end":225710,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225715,"byte_end":225718,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225723,"byte_end":225795,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":225800,"byte_end":225871,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6382},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":228748,"byte_end":228752,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6389}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124186,"byte_end":124195,"line_start":210,"line_end":210,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1520},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1552}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124075,"byte_end":124149,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124150,"byte_end":124175,"line_start":209,"line_end":209,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125105,"byte_end":125109,"line_start":234,"line_end":234,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124210,"byte_end":124276,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124281,"byte_end":124284,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124289,"byte_end":124357,"line_start":213,"line_end":213,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124362,"byte_end":124437,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124442,"byte_end":124517,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124522,"byte_end":124576,"line_start":216,"line_end":216,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124581,"byte_end":124656,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124661,"byte_end":124671,"line_start":218,"line_end":218,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124676,"byte_end":124679,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124684,"byte_end":124698,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124703,"byte_end":124706,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124711,"byte_end":124718,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124723,"byte_end":124764,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124769,"byte_end":124812,"line_start":224,"line_end":224,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124817,"byte_end":124820,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124825,"byte_end":124866,"line_start":226,"line_end":226,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124871,"byte_end":124874,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124879,"byte_end":124924,"line_start":228,"line_end":228,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124929,"byte_end":124974,"line_start":229,"line_end":229,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124979,"byte_end":125024,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125029,"byte_end":125071,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125076,"byte_end":125085,"line_start":232,"line_end":232,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125090,"byte_end":125097,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126348,"byte_end":126359,"line_start":269,"line_end":269,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125251,"byte_end":125323,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125328,"byte_end":125389,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125394,"byte_end":125397,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125402,"byte_end":125477,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125482,"byte_end":125536,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125541,"byte_end":125544,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125549,"byte_end":125622,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125627,"byte_end":125689,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125694,"byte_end":125769,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125774,"byte_end":125828,"line_start":250,"line_end":250,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125833,"byte_end":125908,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125913,"byte_end":125923,"line_start":252,"line_end":252,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125928,"byte_end":125931,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125936,"byte_end":125950,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125955,"byte_end":125958,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125963,"byte_end":125970,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":125975,"byte_end":126016,"line_start":257,"line_end":257,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126021,"byte_end":126064,"line_start":258,"line_end":258,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126069,"byte_end":126072,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126077,"byte_end":126114,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126119,"byte_end":126122,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126127,"byte_end":126179,"line_start":262,"line_end":262,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126184,"byte_end":126214,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126219,"byte_end":126222,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126227,"byte_end":126279,"line_start":265,"line_end":265,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126284,"byte_end":126314,"line_start":266,"line_end":266,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126319,"byte_end":126328,"line_start":267,"line_end":267,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126333,"byte_end":126340,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127360,"byte_end":127363,"line_start":299,"line_end":299,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126524,"byte_end":126599,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126604,"byte_end":126627,"line_start":277,"line_end":277,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126632,"byte_end":126635,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126640,"byte_end":126712,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126717,"byte_end":126781,"line_start":280,"line_end":280,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126786,"byte_end":126823,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126828,"byte_end":126831,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126836,"byte_end":126912,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126917,"byte_end":126988,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":126993,"byte_end":127014,"line_start":285,"line_end":285,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127019,"byte_end":127022,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127027,"byte_end":127041,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127046,"byte_end":127049,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127054,"byte_end":127061,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127066,"byte_end":127107,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127112,"byte_end":127155,"line_start":291,"line_end":291,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127160,"byte_end":127163,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127168,"byte_end":127205,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127210,"byte_end":127249,"line_start":294,"line_end":294,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127254,"byte_end":127257,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127262,"byte_end":127326,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127331,"byte_end":127340,"line_start":297,"line_end":297,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127345,"byte_end":127352,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128923,"byte_end":128932,"line_start":345,"line_end":345,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127530,"byte_end":127601,"line_start":307,"line_end":307,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127606,"byte_end":127625,"line_start":308,"line_end":308,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127630,"byte_end":127633,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127638,"byte_end":127703,"line_start":310,"line_end":310,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127708,"byte_end":127777,"line_start":311,"line_end":311,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127782,"byte_end":127793,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127798,"byte_end":127801,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127806,"byte_end":127881,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127886,"byte_end":127968,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127973,"byte_end":127991,"line_start":316,"line_end":316,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":127996,"byte_end":127999,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128004,"byte_end":128027,"line_start":318,"line_end":318,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128032,"byte_end":128035,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128040,"byte_end":128115,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128120,"byte_end":128207,"line_start":321,"line_end":321,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128212,"byte_end":128268,"line_start":322,"line_end":322,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128273,"byte_end":128276,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128281,"byte_end":128293,"line_start":324,"line_end":324,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128298,"byte_end":128301,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128306,"byte_end":128375,"line_start":326,"line_end":326,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128380,"byte_end":128405,"line_start":327,"line_end":327,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128410,"byte_end":128413,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128418,"byte_end":128432,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128437,"byte_end":128440,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128445,"byte_end":128452,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128457,"byte_end":128498,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128503,"byte_end":128546,"line_start":333,"line_end":333,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128551,"byte_end":128554,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128559,"byte_end":128610,"line_start":335,"line_end":335,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128615,"byte_end":128618,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128623,"byte_end":128663,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128668,"byte_end":128671,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128676,"byte_end":128728,"line_start":339,"line_end":339,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128733,"byte_end":128785,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128790,"byte_end":128842,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128847,"byte_end":128889,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128894,"byte_end":128903,"line_start":343,"line_end":343,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":128908,"byte_end":128915,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130161,"byte_end":130167,"line_start":378,"line_end":378,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129076,"byte_end":129148,"line_start":352,"line_end":352,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129153,"byte_end":129180,"line_start":353,"line_end":353,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129185,"byte_end":129188,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129193,"byte_end":129268,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129273,"byte_end":129344,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129349,"byte_end":129421,"line_start":357,"line_end":357,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129426,"byte_end":129500,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129505,"byte_end":129563,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129568,"byte_end":129571,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129576,"byte_end":129652,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129657,"byte_end":129731,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129736,"byte_end":129757,"line_start":363,"line_end":363,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129762,"byte_end":129765,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129770,"byte_end":129784,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129789,"byte_end":129792,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129797,"byte_end":129804,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129809,"byte_end":129850,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129855,"byte_end":129879,"line_start":369,"line_end":369,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129884,"byte_end":129927,"line_start":370,"line_end":370,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129932,"byte_end":129935,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129940,"byte_end":129978,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":129983,"byte_end":130044,"line_start":373,"line_end":373,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130049,"byte_end":130052,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130057,"byte_end":130127,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130132,"byte_end":130141,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130146,"byte_end":130153,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131492,"byte_end":131502,"line_start":412,"line_end":412,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130395,"byte_end":130470,"line_start":387,"line_end":387,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130475,"byte_end":130551,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130556,"byte_end":130559,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130564,"byte_end":130639,"line_start":390,"line_end":390,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130644,"byte_end":130719,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130724,"byte_end":130800,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130805,"byte_end":130870,"line_start":393,"line_end":393,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130875,"byte_end":130878,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130883,"byte_end":130959,"line_start":395,"line_end":395,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":130964,"byte_end":131038,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131043,"byte_end":131068,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131073,"byte_end":131076,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131081,"byte_end":131095,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131100,"byte_end":131107,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131112,"byte_end":131153,"line_start":401,"line_end":401,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131158,"byte_end":131201,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131206,"byte_end":131209,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131214,"byte_end":131252,"line_start":404,"line_end":404,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131257,"byte_end":131307,"line_start":405,"line_end":405,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131312,"byte_end":131363,"line_start":406,"line_end":406,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131368,"byte_end":131375,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131380,"byte_end":131383,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131388,"byte_end":131458,"line_start":409,"line_end":409,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131463,"byte_end":131472,"line_start":410,"line_end":410,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131477,"byte_end":131484,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132531,"byte_end":132535,"line_start":443,"line_end":443,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131734,"byte_end":131807,"line_start":421,"line_end":421,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131812,"byte_end":131840,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131845,"byte_end":131848,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131853,"byte_end":131927,"line_start":424,"line_end":424,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":131932,"byte_end":131999,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132004,"byte_end":132049,"line_start":426,"line_end":426,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132054,"byte_end":132057,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132062,"byte_end":132138,"line_start":428,"line_end":428,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132143,"byte_end":132169,"line_start":429,"line_end":429,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132174,"byte_end":132177,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132182,"byte_end":132196,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132201,"byte_end":132204,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132209,"byte_end":132216,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132221,"byte_end":132262,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132267,"byte_end":132310,"line_start":435,"line_end":435,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132315,"byte_end":132318,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132323,"byte_end":132360,"line_start":437,"line_end":437,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132365,"byte_end":132420,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132425,"byte_end":132428,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132433,"byte_end":132497,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132502,"byte_end":132511,"line_start":441,"line_end":441,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132516,"byte_end":132523,"line_start":442,"line_end":442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133469,"byte_end":133476,"line_start":477,"line_end":477,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132744,"byte_end":132798,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132803,"byte_end":132858,"line_start":453,"line_end":453,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132863,"byte_end":132866,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132871,"byte_end":132939,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132944,"byte_end":132947,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132952,"byte_end":132966,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132971,"byte_end":132974,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132979,"byte_end":132986,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":132991,"byte_end":133032,"line_start":460,"line_end":460,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133037,"byte_end":133068,"line_start":461,"line_end":461,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133073,"byte_end":133108,"line_start":462,"line_end":462,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133113,"byte_end":133133,"line_start":463,"line_end":463,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133138,"byte_end":133141,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133146,"byte_end":133183,"line_start":465,"line_end":465,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133188,"byte_end":133191,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133196,"byte_end":133223,"line_start":467,"line_end":467,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133228,"byte_end":133252,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133257,"byte_end":133299,"line_start":469,"line_end":469,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133304,"byte_end":133313,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133318,"byte_end":133325,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133330,"byte_end":133333,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133338,"byte_end":133386,"line_start":473,"line_end":473,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133391,"byte_end":133435,"line_start":474,"line_end":474,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133440,"byte_end":133449,"line_start":475,"line_end":475,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133454,"byte_end":133461,"line_start":476,"line_end":476,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134595,"byte_end":134600,"line_start":514,"line_end":514,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133634,"byte_end":133685,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133690,"byte_end":133725,"line_start":485,"line_end":485,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133730,"byte_end":133733,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133738,"byte_end":133792,"line_start":487,"line_end":487,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133797,"byte_end":133854,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133859,"byte_end":133895,"line_start":489,"line_end":489,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133900,"byte_end":133903,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133908,"byte_end":133976,"line_start":491,"line_end":491,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133981,"byte_end":133984,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":133989,"byte_end":134003,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134008,"byte_end":134011,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134016,"byte_end":134023,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134028,"byte_end":134069,"line_start":496,"line_end":496,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134074,"byte_end":134105,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134110,"byte_end":134145,"line_start":498,"line_end":498,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134150,"byte_end":134170,"line_start":499,"line_end":499,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134175,"byte_end":134178,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134183,"byte_end":134220,"line_start":501,"line_end":501,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134225,"byte_end":134228,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134233,"byte_end":134260,"line_start":503,"line_end":503,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134265,"byte_end":134308,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134313,"byte_end":134356,"line_start":505,"line_end":505,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134361,"byte_end":134404,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134409,"byte_end":134416,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134421,"byte_end":134424,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134429,"byte_end":134483,"line_start":509,"line_end":509,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134488,"byte_end":134522,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134527,"byte_end":134561,"line_start":511,"line_end":511,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134566,"byte_end":134575,"line_start":512,"line_end":512,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134580,"byte_end":134587,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135896,"byte_end":135902,"line_start":555,"line_end":555,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134861,"byte_end":134923,"line_start":523,"line_end":523,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134928,"byte_end":134992,"line_start":524,"line_end":524,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":134997,"byte_end":135000,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135005,"byte_end":135069,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135074,"byte_end":135139,"line_start":527,"line_end":527,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135144,"byte_end":135190,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135195,"byte_end":135198,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135203,"byte_end":135252,"line_start":530,"line_end":530,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135257,"byte_end":135297,"line_start":531,"line_end":531,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135302,"byte_end":135305,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135310,"byte_end":135324,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135329,"byte_end":135332,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135337,"byte_end":135344,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135349,"byte_end":135390,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135395,"byte_end":135426,"line_start":537,"line_end":537,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135431,"byte_end":135466,"line_start":538,"line_end":538,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135471,"byte_end":135491,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135496,"byte_end":135499,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135504,"byte_end":135541,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135546,"byte_end":135549,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135554,"byte_end":135581,"line_start":543,"line_end":543,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135586,"byte_end":135617,"line_start":544,"line_end":544,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135622,"byte_end":135648,"line_start":545,"line_end":545,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135653,"byte_end":135719,"line_start":546,"line_end":546,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135724,"byte_end":135733,"line_start":547,"line_end":547,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135738,"byte_end":135745,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135750,"byte_end":135753,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135758,"byte_end":135793,"line_start":550,"line_end":550,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135798,"byte_end":135801,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135806,"byte_end":135862,"line_start":552,"line_end":552,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135867,"byte_end":135876,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":135881,"byte_end":135888,"line_start":554,"line_end":554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136966,"byte_end":136971,"line_start":586,"line_end":586,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136132,"byte_end":136163,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136168,"byte_end":136171,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136176,"byte_end":136243,"line_start":565,"line_end":565,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136248,"byte_end":136320,"line_start":566,"line_end":566,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136325,"byte_end":136382,"line_start":567,"line_end":567,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136387,"byte_end":136390,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136395,"byte_end":136409,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136414,"byte_end":136417,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136422,"byte_end":136429,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136434,"byte_end":136475,"line_start":572,"line_end":572,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136480,"byte_end":136523,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136528,"byte_end":136550,"line_start":574,"line_end":574,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136555,"byte_end":136602,"line_start":575,"line_end":575,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136607,"byte_end":136610,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136615,"byte_end":136656,"line_start":577,"line_end":577,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136661,"byte_end":136702,"line_start":578,"line_end":578,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136707,"byte_end":136748,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136753,"byte_end":136794,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136799,"byte_end":136840,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136845,"byte_end":136886,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136891,"byte_end":136932,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136937,"byte_end":136946,"line_start":584,"line_end":584,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":136951,"byte_end":136958,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137921,"byte_end":137925,"line_start":613,"line_end":613,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137106,"byte_end":137173,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137178,"byte_end":137230,"line_start":594,"line_end":594,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137235,"byte_end":137238,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137243,"byte_end":137313,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137318,"byte_end":137394,"line_start":597,"line_end":597,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137399,"byte_end":137475,"line_start":598,"line_end":598,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137480,"byte_end":137550,"line_start":599,"line_end":599,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137555,"byte_end":137581,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137586,"byte_end":137589,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137594,"byte_end":137608,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137613,"byte_end":137616,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137621,"byte_end":137628,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137633,"byte_end":137674,"line_start":605,"line_end":605,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137679,"byte_end":137722,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137727,"byte_end":137730,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137735,"byte_end":137778,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137783,"byte_end":137852,"line_start":609,"line_end":609,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137857,"byte_end":137887,"line_start":610,"line_end":610,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137892,"byte_end":137901,"line_start":611,"line_end":611,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":137906,"byte_end":137913,"line_start":612,"line_end":612,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139119,"byte_end":139126,"line_start":653,"line_end":653,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138160,"byte_end":138225,"line_start":622,"line_end":622,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138230,"byte_end":138233,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138238,"byte_end":138252,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138257,"byte_end":138260,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138265,"byte_end":138272,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138277,"byte_end":138318,"line_start":627,"line_end":627,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138323,"byte_end":138354,"line_start":628,"line_end":628,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138359,"byte_end":138394,"line_start":629,"line_end":629,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138399,"byte_end":138419,"line_start":630,"line_end":630,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138424,"byte_end":138427,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138432,"byte_end":138471,"line_start":632,"line_end":632,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138476,"byte_end":138515,"line_start":633,"line_end":633,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138520,"byte_end":138559,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138564,"byte_end":138567,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138572,"byte_end":138599,"line_start":636,"line_end":636,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138604,"byte_end":138643,"line_start":637,"line_end":637,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138648,"byte_end":138687,"line_start":638,"line_end":638,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138692,"byte_end":138699,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138704,"byte_end":138731,"line_start":640,"line_end":640,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138736,"byte_end":138775,"line_start":641,"line_end":641,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138780,"byte_end":138819,"line_start":642,"line_end":642,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138824,"byte_end":138831,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138836,"byte_end":138863,"line_start":644,"line_end":644,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138868,"byte_end":138909,"line_start":645,"line_end":645,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138914,"byte_end":138955,"line_start":646,"line_end":646,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138960,"byte_end":138967,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138972,"byte_end":138975,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":138980,"byte_end":139039,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139044,"byte_end":139085,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139090,"byte_end":139099,"line_start":651,"line_end":651,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139104,"byte_end":139111,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140388,"byte_end":140396,"line_start":686,"line_end":686,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139303,"byte_end":139375,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139380,"byte_end":139383,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139388,"byte_end":139465,"line_start":663,"line_end":663,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139470,"byte_end":139545,"line_start":664,"line_end":664,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139550,"byte_end":139626,"line_start":665,"line_end":665,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139631,"byte_end":139634,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139639,"byte_end":139721,"line_start":667,"line_end":667,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139726,"byte_end":139809,"line_start":668,"line_end":668,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139814,"byte_end":139817,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139822,"byte_end":139898,"line_start":670,"line_end":670,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139903,"byte_end":139979,"line_start":671,"line_end":671,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":139984,"byte_end":140005,"line_start":672,"line_end":672,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140010,"byte_end":140013,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140018,"byte_end":140032,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140037,"byte_end":140040,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140045,"byte_end":140052,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140057,"byte_end":140098,"line_start":677,"line_end":677,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140103,"byte_end":140146,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140151,"byte_end":140154,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140159,"byte_end":140196,"line_start":680,"line_end":680,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140201,"byte_end":140268,"line_start":681,"line_end":681,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140273,"byte_end":140276,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140281,"byte_end":140354,"line_start":683,"line_end":683,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140359,"byte_end":140368,"line_start":684,"line_end":684,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140373,"byte_end":140380,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141379,"byte_end":141383,"line_start":719,"line_end":719,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140570,"byte_end":140641,"line_start":695,"line_end":695,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140646,"byte_end":140676,"line_start":696,"line_end":696,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140681,"byte_end":140684,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140689,"byte_end":140764,"line_start":698,"line_end":698,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140769,"byte_end":140840,"line_start":699,"line_end":699,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140845,"byte_end":140885,"line_start":700,"line_end":700,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140890,"byte_end":140893,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140898,"byte_end":140912,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140917,"byte_end":140920,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140925,"byte_end":140932,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140937,"byte_end":140978,"line_start":705,"line_end":705,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":140983,"byte_end":141007,"line_start":706,"line_end":706,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141012,"byte_end":141055,"line_start":707,"line_end":707,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141060,"byte_end":141063,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141068,"byte_end":141106,"line_start":709,"line_end":709,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141111,"byte_end":141114,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141119,"byte_end":141163,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141168,"byte_end":141188,"line_start":712,"line_end":712,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141193,"byte_end":141256,"line_start":713,"line_end":713,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141261,"byte_end":141268,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141273,"byte_end":141276,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141281,"byte_end":141345,"line_start":716,"line_end":716,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141350,"byte_end":141359,"line_start":717,"line_end":717,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141364,"byte_end":141371,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142407,"byte_end":142417,"line_start":750,"line_end":750,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141629,"byte_end":141703,"line_start":728,"line_end":728,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141708,"byte_end":141731,"line_start":729,"line_end":729,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141736,"byte_end":141739,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141744,"byte_end":141817,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141822,"byte_end":141894,"line_start":732,"line_end":732,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141899,"byte_end":141976,"line_start":733,"line_end":733,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141981,"byte_end":141992,"line_start":734,"line_end":734,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":141997,"byte_end":142000,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142005,"byte_end":142019,"line_start":736,"line_end":736,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142024,"byte_end":142027,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142032,"byte_end":142039,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142044,"byte_end":142085,"line_start":739,"line_end":739,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142090,"byte_end":142114,"line_start":740,"line_end":740,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142119,"byte_end":142162,"line_start":741,"line_end":741,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142167,"byte_end":142170,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142175,"byte_end":142213,"line_start":743,"line_end":743,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142218,"byte_end":142221,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142226,"byte_end":142289,"line_start":745,"line_end":745,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142294,"byte_end":142297,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142302,"byte_end":142373,"line_start":747,"line_end":747,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142378,"byte_end":142387,"line_start":748,"line_end":748,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142392,"byte_end":142399,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143406,"byte_end":143416,"line_start":780,"line_end":780,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142651,"byte_end":142727,"line_start":759,"line_end":759,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142732,"byte_end":142755,"line_start":760,"line_end":760,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142760,"byte_end":142763,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142768,"byte_end":142843,"line_start":762,"line_end":762,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142848,"byte_end":142920,"line_start":763,"line_end":763,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142925,"byte_end":142992,"line_start":764,"line_end":764,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":142997,"byte_end":143000,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143005,"byte_end":143019,"line_start":766,"line_end":766,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143024,"byte_end":143027,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143032,"byte_end":143039,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143044,"byte_end":143085,"line_start":769,"line_end":769,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143090,"byte_end":143114,"line_start":770,"line_end":770,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143119,"byte_end":143162,"line_start":771,"line_end":771,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143167,"byte_end":143170,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143175,"byte_end":143213,"line_start":773,"line_end":773,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143218,"byte_end":143221,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143226,"byte_end":143289,"line_start":775,"line_end":775,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143294,"byte_end":143297,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143302,"byte_end":143372,"line_start":777,"line_end":777,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143377,"byte_end":143386,"line_start":778,"line_end":778,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143391,"byte_end":143398,"line_start":779,"line_end":779,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144932,"byte_end":144942,"line_start":825,"line_end":825,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143650,"byte_end":143720,"line_start":789,"line_end":789,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143725,"byte_end":143728,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143733,"byte_end":143804,"line_start":791,"line_end":791,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143809,"byte_end":143881,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143886,"byte_end":143956,"line_start":793,"line_end":793,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143961,"byte_end":143964,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":143969,"byte_end":144040,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144045,"byte_end":144131,"line_start":796,"line_end":796,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144136,"byte_end":144203,"line_start":797,"line_end":797,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144208,"byte_end":144272,"line_start":798,"line_end":798,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144277,"byte_end":144280,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144285,"byte_end":144299,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144304,"byte_end":144307,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144312,"byte_end":144319,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144324,"byte_end":144365,"line_start":803,"line_end":803,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144370,"byte_end":144394,"line_start":804,"line_end":804,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144399,"byte_end":144442,"line_start":805,"line_end":805,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144447,"byte_end":144475,"line_start":806,"line_end":806,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144480,"byte_end":144483,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144488,"byte_end":144526,"line_start":808,"line_end":808,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144531,"byte_end":144534,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144539,"byte_end":144557,"line_start":810,"line_end":810,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144562,"byte_end":144604,"line_start":811,"line_end":811,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144609,"byte_end":144624,"line_start":812,"line_end":812,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144629,"byte_end":144648,"line_start":813,"line_end":813,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144653,"byte_end":144678,"line_start":814,"line_end":814,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144683,"byte_end":144699,"line_start":815,"line_end":815,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144704,"byte_end":144731,"line_start":816,"line_end":816,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144736,"byte_end":144745,"line_start":817,"line_end":817,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144750,"byte_end":144757,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144762,"byte_end":144765,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144770,"byte_end":144815,"line_start":820,"line_end":820,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144820,"byte_end":144823,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144828,"byte_end":144898,"line_start":822,"line_end":822,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144903,"byte_end":144912,"line_start":823,"line_end":823,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":144917,"byte_end":144924,"line_start":824,"line_end":824,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146149,"byte_end":146157,"line_start":866,"line_end":866,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145091,"byte_end":145162,"line_start":833,"line_end":833,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145167,"byte_end":145210,"line_start":834,"line_end":834,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145215,"byte_end":145218,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145223,"byte_end":145298,"line_start":836,"line_end":836,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145303,"byte_end":145373,"line_start":837,"line_end":837,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145378,"byte_end":145416,"line_start":838,"line_end":838,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145421,"byte_end":145424,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145429,"byte_end":145504,"line_start":840,"line_end":840,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145509,"byte_end":145552,"line_start":841,"line_end":841,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145557,"byte_end":145560,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145565,"byte_end":145638,"line_start":843,"line_end":843,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145643,"byte_end":145686,"line_start":844,"line_end":844,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145691,"byte_end":145694,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145699,"byte_end":145713,"line_start":846,"line_end":846,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145718,"byte_end":145721,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145726,"byte_end":145733,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145738,"byte_end":145779,"line_start":849,"line_end":849,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145784,"byte_end":145808,"line_start":850,"line_end":850,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145813,"byte_end":145856,"line_start":851,"line_end":851,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145861,"byte_end":145864,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145869,"byte_end":145887,"line_start":853,"line_end":853,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145892,"byte_end":145895,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145900,"byte_end":145905,"line_start":855,"line_end":855,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145910,"byte_end":145971,"line_start":856,"line_end":856,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":145976,"byte_end":145998,"line_start":857,"line_end":857,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146003,"byte_end":146032,"line_start":858,"line_end":858,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146037,"byte_end":146048,"line_start":859,"line_end":859,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146053,"byte_end":146071,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146076,"byte_end":146081,"line_start":861,"line_end":861,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146086,"byte_end":146089,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146094,"byte_end":146115,"line_start":863,"line_end":863,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146120,"byte_end":146129,"line_start":864,"line_end":864,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":146134,"byte_end":146141,"line_start":865,"line_end":865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149207,"byte_end":149211,"line_start":951,"line_end":951,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148699,"byte_end":148770,"line_start":935,"line_end":935,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148775,"byte_end":148778,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148783,"byte_end":148856,"line_start":937,"line_end":937,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148861,"byte_end":148896,"line_start":938,"line_end":938,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148901,"byte_end":148904,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148909,"byte_end":148923,"line_start":940,"line_end":940,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148928,"byte_end":148931,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148936,"byte_end":148943,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148948,"byte_end":148989,"line_start":943,"line_end":943,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":148994,"byte_end":149037,"line_start":944,"line_end":944,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149042,"byte_end":149045,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149050,"byte_end":149096,"line_start":946,"line_end":946,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149101,"byte_end":149104,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149109,"byte_end":149173,"line_start":948,"line_end":948,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149178,"byte_end":149187,"line_start":949,"line_end":949,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149192,"byte_end":149199,"line_start":950,"line_end":950,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149876,"byte_end":149880,"line_start":974,"line_end":974,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149349,"byte_end":149421,"line_start":958,"line_end":958,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149426,"byte_end":149429,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149434,"byte_end":149507,"line_start":960,"line_end":960,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149512,"byte_end":149558,"line_start":961,"line_end":961,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149563,"byte_end":149566,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149571,"byte_end":149585,"line_start":963,"line_end":963,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149590,"byte_end":149593,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149598,"byte_end":149605,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149610,"byte_end":149651,"line_start":966,"line_end":966,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149656,"byte_end":149699,"line_start":967,"line_end":967,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149704,"byte_end":149707,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149712,"byte_end":149758,"line_start":969,"line_end":969,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149763,"byte_end":149766,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149771,"byte_end":149842,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149847,"byte_end":149856,"line_start":972,"line_end":972,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":149861,"byte_end":149868,"line_start":973,"line_end":973,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151501,"byte_end":151505,"line_start":1020,"line_end":1020,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150018,"byte_end":150089,"line_start":981,"line_end":981,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150094,"byte_end":150167,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150172,"byte_end":150210,"line_start":983,"line_end":983,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150215,"byte_end":150218,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150223,"byte_end":150277,"line_start":985,"line_end":985,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150282,"byte_end":150354,"line_start":986,"line_end":986,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150359,"byte_end":150435,"line_start":987,"line_end":987,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150440,"byte_end":150508,"line_start":988,"line_end":988,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150513,"byte_end":150589,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150594,"byte_end":150616,"line_start":990,"line_end":990,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150621,"byte_end":150624,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150629,"byte_end":150696,"line_start":992,"line_end":992,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150701,"byte_end":150769,"line_start":993,"line_end":993,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150774,"byte_end":150787,"line_start":994,"line_end":994,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150792,"byte_end":150795,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150800,"byte_end":150814,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150819,"byte_end":150822,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150827,"byte_end":150834,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150839,"byte_end":150882,"line_start":999,"line_end":999,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150887,"byte_end":150930,"line_start":1000,"line_end":1000,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150935,"byte_end":150963,"line_start":1001,"line_end":1001,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150968,"byte_end":150971,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150976,"byte_end":150994,"line_start":1003,"line_end":1003,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":150999,"byte_end":151037,"line_start":1004,"line_end":1004,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151042,"byte_end":151057,"line_start":1005,"line_end":1005,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151062,"byte_end":151079,"line_start":1006,"line_end":1006,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151084,"byte_end":151126,"line_start":1007,"line_end":1007,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151131,"byte_end":151166,"line_start":1008,"line_end":1008,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151171,"byte_end":151215,"line_start":1009,"line_end":1009,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151220,"byte_end":151229,"line_start":1010,"line_end":1010,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151234,"byte_end":151248,"line_start":1011,"line_end":1011,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151253,"byte_end":151256,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151261,"byte_end":151304,"line_start":1013,"line_end":1013,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151309,"byte_end":151346,"line_start":1014,"line_end":1014,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151351,"byte_end":151388,"line_start":1015,"line_end":1015,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151393,"byte_end":151427,"line_start":1016,"line_end":1016,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151432,"byte_end":151466,"line_start":1017,"line_end":1017,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151471,"byte_end":151481,"line_start":1018,"line_end":1018,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151486,"byte_end":151493,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152434,"byte_end":152440,"line_start":1053,"line_end":1053,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151630,"byte_end":151677,"line_start":1027,"line_end":1027,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151682,"byte_end":151685,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151690,"byte_end":151764,"line_start":1029,"line_end":1029,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151769,"byte_end":151806,"line_start":1030,"line_end":1030,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151811,"byte_end":151814,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151819,"byte_end":151833,"line_start":1032,"line_end":1032,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151838,"byte_end":151841,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151846,"byte_end":151853,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151858,"byte_end":151899,"line_start":1035,"line_end":1035,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151904,"byte_end":151947,"line_start":1036,"line_end":1036,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151952,"byte_end":151955,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":151960,"byte_end":152000,"line_start":1038,"line_end":1038,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152005,"byte_end":152008,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152013,"byte_end":152042,"line_start":1040,"line_end":1040,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152047,"byte_end":152075,"line_start":1041,"line_end":1041,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152080,"byte_end":152137,"line_start":1042,"line_end":1042,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152142,"byte_end":152169,"line_start":1043,"line_end":1043,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152174,"byte_end":152197,"line_start":1044,"line_end":1044,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152202,"byte_end":152205,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152210,"byte_end":152245,"line_start":1046,"line_end":1046,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152250,"byte_end":152278,"line_start":1047,"line_end":1047,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152283,"byte_end":152340,"line_start":1048,"line_end":1048,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152345,"byte_end":152372,"line_start":1049,"line_end":1049,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152377,"byte_end":152400,"line_start":1050,"line_end":1050,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152405,"byte_end":152414,"line_start":1051,"line_end":1051,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":152419,"byte_end":152426,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158640,"byte_end":158643,"line_start":1220,"line_end":1220,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":157952,"byte_end":158000,"line_start":1198,"line_end":1198,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158005,"byte_end":158008,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158013,"byte_end":158086,"line_start":1200,"line_end":1200,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158091,"byte_end":158163,"line_start":1201,"line_end":1201,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158168,"byte_end":158181,"line_start":1202,"line_end":1202,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158186,"byte_end":158189,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158194,"byte_end":158208,"line_start":1204,"line_end":1204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158213,"byte_end":158216,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158221,"byte_end":158228,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158233,"byte_end":158274,"line_start":1207,"line_end":1207,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158279,"byte_end":158322,"line_start":1208,"line_end":1208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158327,"byte_end":158330,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158335,"byte_end":158373,"line_start":1210,"line_end":1210,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158378,"byte_end":158417,"line_start":1211,"line_end":1211,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158422,"byte_end":158425,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158430,"byte_end":158464,"line_start":1213,"line_end":1213,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158469,"byte_end":158510,"line_start":1214,"line_end":1214,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158515,"byte_end":158543,"line_start":1215,"line_end":1215,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158548,"byte_end":158598,"line_start":1216,"line_end":1216,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158603,"byte_end":158612,"line_start":1217,"line_end":1217,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158617,"byte_end":158624,"line_start":1218,"line_end":1218,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158629,"byte_end":158632,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159551,"byte_end":159556,"line_start":1251,"line_end":1251,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158824,"byte_end":158861,"line_start":1228,"line_end":1228,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158866,"byte_end":158869,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158874,"byte_end":158945,"line_start":1230,"line_end":1230,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":158950,"byte_end":159026,"line_start":1231,"line_end":1231,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159031,"byte_end":159034,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159039,"byte_end":159046,"line_start":1233,"line_end":1233,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159051,"byte_end":159092,"line_start":1234,"line_end":1234,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159097,"byte_end":159140,"line_start":1235,"line_end":1235,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159145,"byte_end":159148,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159153,"byte_end":159210,"line_start":1237,"line_end":1237,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159215,"byte_end":159271,"line_start":1238,"line_end":1238,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159276,"byte_end":159279,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159284,"byte_end":159324,"line_start":1240,"line_end":1240,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159329,"byte_end":159332,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159337,"byte_end":159385,"line_start":1242,"line_end":1242,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159390,"byte_end":159418,"line_start":1243,"line_end":1243,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159423,"byte_end":159438,"line_start":1244,"line_end":1244,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159443,"byte_end":159462,"line_start":1245,"line_end":1245,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159467,"byte_end":159485,"line_start":1246,"line_end":1246,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159490,"byte_end":159505,"line_start":1247,"line_end":1247,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159510,"byte_end":159517,"line_start":1248,"line_end":1248,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159522,"byte_end":159531,"line_start":1249,"line_end":1249,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159536,"byte_end":159543,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159894,"byte_end":159902,"line_start":1262,"line_end":1262,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159748,"byte_end":159803,"line_start":1259,"line_end":1259,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159808,"byte_end":159811,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":159816,"byte_end":159886,"line_start":1261,"line_end":1261,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164294,"byte_end":164301,"line_start":1367,"line_end":1367,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":163991,"byte_end":164064,"line_start":1362,"line_end":1362,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164069,"byte_end":164072,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164077,"byte_end":164146,"line_start":1364,"line_end":1364,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164151,"byte_end":164220,"line_start":1365,"line_end":1365,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164225,"byte_end":164286,"line_start":1366,"line_end":1366,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164757,"byte_end":164768,"line_start":1380,"line_end":1380,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164478,"byte_end":164553,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164558,"byte_end":164579,"line_start":1376,"line_end":1376,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164584,"byte_end":164587,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164592,"byte_end":164672,"line_start":1378,"line_end":1378,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164677,"byte_end":164749,"line_start":1379,"line_end":1379,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165221,"byte_end":165233,"line_start":1393,"line_end":1393,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":164942,"byte_end":165018,"line_start":1388,"line_end":1388,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165023,"byte_end":165044,"line_start":1389,"line_end":1389,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165049,"byte_end":165052,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165057,"byte_end":165136,"line_start":1391,"line_end":1391,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165141,"byte_end":165213,"line_start":1392,"line_end":1392,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165509,"byte_end":165524,"line_start":1403,"line_end":1403,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165408,"byte_end":165479,"line_start":1401,"line_end":1401,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165484,"byte_end":165501,"line_start":1402,"line_end":1402,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167625,"byte_end":167641,"line_start":1458,"line_end":1458,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165671,"byte_end":165746,"line_start":1410,"line_end":1410,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165751,"byte_end":165761,"line_start":1411,"line_end":1411,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165766,"byte_end":165769,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165774,"byte_end":165847,"line_start":1413,"line_end":1413,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165852,"byte_end":165920,"line_start":1414,"line_end":1414,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165925,"byte_end":165973,"line_start":1415,"line_end":1415,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":165978,"byte_end":166053,"line_start":1416,"line_end":1416,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166058,"byte_end":166134,"line_start":1417,"line_end":1417,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166139,"byte_end":166165,"line_start":1418,"line_end":1418,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166170,"byte_end":166173,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166178,"byte_end":166251,"line_start":1420,"line_end":1420,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166256,"byte_end":166326,"line_start":1421,"line_end":1421,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166331,"byte_end":166371,"line_start":1422,"line_end":1422,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166376,"byte_end":166379,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166384,"byte_end":166438,"line_start":1424,"line_end":1424,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166443,"byte_end":166527,"line_start":1425,"line_end":1425,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166532,"byte_end":166535,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166540,"byte_end":166554,"line_start":1427,"line_end":1427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166559,"byte_end":166562,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166567,"byte_end":166574,"line_start":1429,"line_end":1429,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166579,"byte_end":166620,"line_start":1430,"line_end":1430,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166625,"byte_end":166659,"line_start":1431,"line_end":1431,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166664,"byte_end":166719,"line_start":1432,"line_end":1432,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166724,"byte_end":166727,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166732,"byte_end":166767,"line_start":1434,"line_end":1434,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166772,"byte_end":166822,"line_start":1435,"line_end":1435,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166827,"byte_end":166849,"line_start":1436,"line_end":1436,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166854,"byte_end":166864,"line_start":1437,"line_end":1437,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166869,"byte_end":166886,"line_start":1438,"line_end":1438,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166891,"byte_end":166917,"line_start":1439,"line_end":1439,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166922,"byte_end":166977,"line_start":1440,"line_end":1440,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":166982,"byte_end":167011,"line_start":1441,"line_end":1441,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167016,"byte_end":167079,"line_start":1442,"line_end":1442,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167084,"byte_end":167130,"line_start":1443,"line_end":1443,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167135,"byte_end":167149,"line_start":1444,"line_end":1444,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167154,"byte_end":167223,"line_start":1445,"line_end":1445,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167228,"byte_end":167253,"line_start":1446,"line_end":1446,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167258,"byte_end":167311,"line_start":1447,"line_end":1447,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167316,"byte_end":167345,"line_start":1448,"line_end":1448,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167350,"byte_end":167363,"line_start":1449,"line_end":1449,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167368,"byte_end":167438,"line_start":1450,"line_end":1450,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167443,"byte_end":167502,"line_start":1451,"line_end":1451,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167507,"byte_end":167537,"line_start":1452,"line_end":1452,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167542,"byte_end":167551,"line_start":1453,"line_end":1453,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167556,"byte_end":167561,"line_start":1454,"line_end":1454,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167566,"byte_end":167591,"line_start":1455,"line_end":1455,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167596,"byte_end":167605,"line_start":1456,"line_end":1456,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":167610,"byte_end":167617,"line_start":1457,"line_end":1457,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6451},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":268342,"byte_end":268349,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6457}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6515},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":232519,"byte_end":232526,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":6518}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6584},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":232774,"byte_end":232783,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":6587}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6653},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":233084,"byte_end":233094,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":6656}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6724},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":271150,"byte_end":271160,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":6726}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6762},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":233520,"byte_end":233525,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":6765}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6831},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":233802,"byte_end":233808,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":6834}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6897},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":272531,"byte_end":272537,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6903}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6958},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275433,"byte_end":275440,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":6961}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275266,"byte_end":275336,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275354,"byte_end":275421,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6966},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":276548,"byte_end":276558,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":6970},{"krate":0,"index":6971},{"krate":0,"index":6972}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7023},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":278501,"byte_end":278510,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":7027},{"krate":0,"index":7028},{"krate":0,"index":7029},{"krate":0,"index":7030}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7088},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":281750,"byte_end":281762,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7092},{"krate":0,"index":7093},{"krate":0,"index":7094}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7154},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":284814,"byte_end":284824,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7156},{"krate":0,"index":7157}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7200},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":287002,"byte_end":287012,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":7203},{"krate":0,"index":7204}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7247},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":288417,"byte_end":288426,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":7249},{"krate":0,"index":7250}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7282},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":289873,"byte_end":289880,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":7287},{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294383,"byte_end":294393,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":292526,"byte_end":292602,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":292603,"byte_end":292606,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":292607,"byte_end":292683,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":292684,"byte_end":292754,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":292755,"byte_end":292814,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":292815,"byte_end":292818,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":292819,"byte_end":292897,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":292898,"byte_end":292975,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":292976,"byte_end":293040,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293041,"byte_end":293044,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293045,"byte_end":293117,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293118,"byte_end":293196,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293197,"byte_end":293226,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293227,"byte_end":293230,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293231,"byte_end":293308,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293309,"byte_end":293373,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293374,"byte_end":293426,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293427,"byte_end":293430,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293431,"byte_end":293508,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293509,"byte_end":293581,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293582,"byte_end":293651,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293652,"byte_end":293730,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293731,"byte_end":293734,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293735,"byte_end":293748,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293749,"byte_end":293752,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293753,"byte_end":293760,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293761,"byte_end":293794,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293795,"byte_end":293818,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293819,"byte_end":293860,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293861,"byte_end":293907,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293908,"byte_end":293911,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293912,"byte_end":293971,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293972,"byte_end":293994,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":293995,"byte_end":294029,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294030,"byte_end":294039,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294040,"byte_end":294043,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294044,"byte_end":294067,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294068,"byte_end":294107,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294108,"byte_end":294144,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294145,"byte_end":294188,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294189,"byte_end":294205,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294206,"byte_end":294226,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294227,"byte_end":294236,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294237,"byte_end":294244,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294245,"byte_end":294248,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294249,"byte_end":294314,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294315,"byte_end":294357,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294358,"byte_end":294367,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294368,"byte_end":294375,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7351},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294739,"byte_end":294748,"line_start":73,"line_end":73,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7355},{"krate":0,"index":7356},{"krate":0,"index":7357}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7408},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":296718,"byte_end":296730,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7412},{"krate":0,"index":7413},{"krate":0,"index":7414},{"krate":0,"index":7415},{"krate":0,"index":7416}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7477},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":300402,"byte_end":300414,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":7481},{"krate":0,"index":7482},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2043},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236762,"byte_end":236774,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2058},{"krate":0,"index":2060},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2078},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2087},{"krate":0,"index":2088}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236700,"byte_end":236751,"line_start":143,"line_end":143,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237316,"byte_end":237324,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236792,"byte_end":236866,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236871,"byte_end":236897,"line_start":146,"line_end":146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236902,"byte_end":236905,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236910,"byte_end":236924,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236929,"byte_end":236932,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236937,"byte_end":236944,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236949,"byte_end":236990,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236995,"byte_end":237041,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237046,"byte_end":237049,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237054,"byte_end":237074,"line_start":154,"line_end":154,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237079,"byte_end":237124,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237129,"byte_end":237160,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237165,"byte_end":237168,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237173,"byte_end":237227,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237232,"byte_end":237283,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237288,"byte_end":237296,"line_start":160,"line_end":160,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237301,"byte_end":237308,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238020,"byte_end":238026,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237500,"byte_end":237573,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237578,"byte_end":237609,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237614,"byte_end":237617,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237622,"byte_end":237636,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237641,"byte_end":237644,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237649,"byte_end":237656,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237661,"byte_end":237702,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237707,"byte_end":237753,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237758,"byte_end":237761,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237766,"byte_end":237786,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237791,"byte_end":237832,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237837,"byte_end":237868,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237873,"byte_end":237876,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237881,"byte_end":237934,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237939,"byte_end":237987,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":237992,"byte_end":238000,"line_start":185,"line_end":185,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238005,"byte_end":238012,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238735,"byte_end":238742,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238216,"byte_end":238287,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238292,"byte_end":238323,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238328,"byte_end":238331,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238336,"byte_end":238350,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238355,"byte_end":238358,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238363,"byte_end":238370,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238375,"byte_end":238416,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238421,"byte_end":238467,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238472,"byte_end":238475,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238480,"byte_end":238500,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238505,"byte_end":238546,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238551,"byte_end":238583,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238588,"byte_end":238591,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238596,"byte_end":238649,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238654,"byte_end":238702,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238707,"byte_end":238715,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238720,"byte_end":238727,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240347,"byte_end":240355,"line_start":258,"line_end":258,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":238934,"byte_end":239010,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239015,"byte_end":239055,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239060,"byte_end":239063,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239068,"byte_end":239144,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239149,"byte_end":239225,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239230,"byte_end":239303,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239308,"byte_end":239350,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239355,"byte_end":239358,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239363,"byte_end":239436,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239441,"byte_end":239472,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239477,"byte_end":239480,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239485,"byte_end":239559,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239564,"byte_end":239638,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239643,"byte_end":239659,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239664,"byte_end":239667,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239672,"byte_end":239743,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239748,"byte_end":239774,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239779,"byte_end":239782,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239787,"byte_end":239859,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239864,"byte_end":239913,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239918,"byte_end":239921,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239926,"byte_end":239940,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239945,"byte_end":239948,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239953,"byte_end":239960,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":239965,"byte_end":239996,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240001,"byte_end":240025,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240030,"byte_end":240068,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240073,"byte_end":240076,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240081,"byte_end":240137,"line_start":248,"line_end":248,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240142,"byte_end":240145,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240150,"byte_end":240185,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240190,"byte_end":240229,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240234,"byte_end":240258,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240263,"byte_end":240279,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240284,"byte_end":240300,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240305,"byte_end":240315,"line_start":255,"line_end":255,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240320,"byte_end":240327,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240332,"byte_end":240339,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241507,"byte_end":241514,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240608,"byte_end":240673,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240678,"byte_end":240727,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240732,"byte_end":240735,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240740,"byte_end":240819,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240824,"byte_end":240898,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240903,"byte_end":240979,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":240984,"byte_end":241029,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241034,"byte_end":241037,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241042,"byte_end":241117,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241122,"byte_end":241162,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241167,"byte_end":241170,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241175,"byte_end":241284,"line_start":278,"line_end":278,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241289,"byte_end":241363,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241368,"byte_end":241384,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241389,"byte_end":241392,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241397,"byte_end":241468,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241473,"byte_end":241499,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242066,"byte_end":242076,"line_start":299,"line_end":299,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241763,"byte_end":241837,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241842,"byte_end":241852,"line_start":294,"line_end":294,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241857,"byte_end":241860,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241865,"byte_end":241935,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":241940,"byte_end":242016,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242021,"byte_end":242058,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242565,"byte_end":242576,"line_start":312,"line_end":312,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242274,"byte_end":242353,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242358,"byte_end":242361,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242366,"byte_end":242436,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242441,"byte_end":242515,"line_start":310,"line_end":310,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242520,"byte_end":242557,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243497,"byte_end":243508,"line_start":341,"line_end":341,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242779,"byte_end":242832,"line_start":320,"line_end":320,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242837,"byte_end":242881,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242886,"byte_end":242889,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242894,"byte_end":242943,"line_start":323,"line_end":323,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":242948,"byte_end":243021,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243026,"byte_end":243046,"line_start":325,"line_end":325,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243051,"byte_end":243054,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243059,"byte_end":243073,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243078,"byte_end":243081,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243086,"byte_end":243093,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243098,"byte_end":243157,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243162,"byte_end":243165,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243170,"byte_end":243189,"line_start":332,"line_end":332,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243194,"byte_end":243212,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243217,"byte_end":243289,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243294,"byte_end":243324,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243329,"byte_end":243336,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243341,"byte_end":243415,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243420,"byte_end":243423,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243428,"byte_end":243477,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243482,"byte_end":243489,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244403,"byte_end":244411,"line_start":368,"line_end":368,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243664,"byte_end":243738,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243743,"byte_end":243817,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243822,"byte_end":243834,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243839,"byte_end":243842,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243847,"byte_end":243914,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243919,"byte_end":243991,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":243996,"byte_end":244035,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244040,"byte_end":244043,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244048,"byte_end":244062,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244067,"byte_end":244070,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244075,"byte_end":244082,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244087,"byte_end":244128,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244133,"byte_end":244179,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244184,"byte_end":244187,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244192,"byte_end":244249,"line_start":362,"line_end":362,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244254,"byte_end":244257,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244262,"byte_end":244316,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244321,"byte_end":244370,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244375,"byte_end":244383,"line_start":366,"line_end":366,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244388,"byte_end":244395,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245763,"byte_end":245775,"line_start":408,"line_end":408,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244578,"byte_end":244647,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244652,"byte_end":244708,"line_start":376,"line_end":376,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244713,"byte_end":244716,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244721,"byte_end":244796,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244801,"byte_end":244871,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244876,"byte_end":244914,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244919,"byte_end":244922,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":244927,"byte_end":245005,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245010,"byte_end":245070,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245075,"byte_end":245132,"line_start":384,"line_end":384,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245137,"byte_end":245204,"line_start":385,"line_end":385,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245209,"byte_end":245239,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245244,"byte_end":245247,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245252,"byte_end":245266,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245271,"byte_end":245274,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245279,"byte_end":245286,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245291,"byte_end":245332,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245337,"byte_end":245361,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245366,"byte_end":245412,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245417,"byte_end":245420,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245425,"byte_end":245446,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245451,"byte_end":245454,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245459,"byte_end":245464,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245469,"byte_end":245530,"line_start":398,"line_end":398,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245535,"byte_end":245557,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245562,"byte_end":245626,"line_start":400,"line_end":400,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245631,"byte_end":245642,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245647,"byte_end":245686,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245691,"byte_end":245696,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245701,"byte_end":245704,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245709,"byte_end":245730,"line_start":405,"line_end":405,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245735,"byte_end":245743,"line_start":406,"line_end":406,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":245748,"byte_end":245755,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246788,"byte_end":246802,"line_start":438,"line_end":438,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246039,"byte_end":246113,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246118,"byte_end":246141,"line_start":418,"line_end":418,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246146,"byte_end":246149,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246154,"byte_end":246185,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246190,"byte_end":246267,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246272,"byte_end":246301,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246306,"byte_end":246309,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246314,"byte_end":246328,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246333,"byte_end":246336,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246341,"byte_end":246348,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246353,"byte_end":246394,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246399,"byte_end":246423,"line_start":428,"line_end":428,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246428,"byte_end":246474,"line_start":429,"line_end":429,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246479,"byte_end":246482,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246487,"byte_end":246556,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246561,"byte_end":246631,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246636,"byte_end":246639,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246644,"byte_end":246711,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246716,"byte_end":246755,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246760,"byte_end":246768,"line_start":436,"line_end":436,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":246773,"byte_end":246780,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247835,"byte_end":247849,"line_start":468,"line_end":468,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247079,"byte_end":247153,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247158,"byte_end":247181,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247186,"byte_end":247189,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247194,"byte_end":247225,"line_start":450,"line_end":450,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247230,"byte_end":247307,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247312,"byte_end":247341,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247346,"byte_end":247349,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247354,"byte_end":247368,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247373,"byte_end":247376,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247381,"byte_end":247388,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247393,"byte_end":247434,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247439,"byte_end":247463,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247468,"byte_end":247514,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247519,"byte_end":247522,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247527,"byte_end":247603,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247608,"byte_end":247678,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247683,"byte_end":247686,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247691,"byte_end":247758,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247763,"byte_end":247802,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247807,"byte_end":247815,"line_start":466,"line_end":466,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":247820,"byte_end":247827,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251229,"byte_end":251240,"line_start":567,"line_end":567,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250190,"byte_end":250242,"line_start":537,"line_end":537,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250247,"byte_end":250314,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250319,"byte_end":250322,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250327,"byte_end":250401,"line_start":540,"line_end":540,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250406,"byte_end":250487,"line_start":541,"line_end":541,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250492,"byte_end":250562,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250567,"byte_end":250570,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250575,"byte_end":250643,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250648,"byte_end":250651,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250656,"byte_end":250670,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250675,"byte_end":250678,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250683,"byte_end":250690,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250695,"byte_end":250736,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250741,"byte_end":250772,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250777,"byte_end":250815,"line_start":551,"line_end":551,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250820,"byte_end":250840,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250845,"byte_end":250848,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250853,"byte_end":250890,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250895,"byte_end":250898,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250903,"byte_end":250930,"line_start":556,"line_end":556,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250935,"byte_end":250959,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":250964,"byte_end":251010,"line_start":558,"line_end":558,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251015,"byte_end":251024,"line_start":559,"line_end":559,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251029,"byte_end":251072,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251077,"byte_end":251084,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251089,"byte_end":251092,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251097,"byte_end":251160,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251165,"byte_end":251196,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251201,"byte_end":251209,"line_start":565,"line_end":565,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251214,"byte_end":251221,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252711,"byte_end":252721,"line_start":604,"line_end":604,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251423,"byte_end":251496,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251501,"byte_end":251535,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251540,"byte_end":251543,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251548,"byte_end":251623,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251628,"byte_end":251703,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251708,"byte_end":251781,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251786,"byte_end":251857,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251862,"byte_end":251912,"line_start":581,"line_end":581,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251917,"byte_end":251920,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":251925,"byte_end":251996,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252001,"byte_end":252004,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252009,"byte_end":252085,"line_start":585,"line_end":585,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252090,"byte_end":252160,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252165,"byte_end":252190,"line_start":587,"line_end":587,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252195,"byte_end":252198,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252203,"byte_end":252217,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252222,"byte_end":252229,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252234,"byte_end":252275,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252280,"byte_end":252304,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252309,"byte_end":252366,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252371,"byte_end":252374,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252379,"byte_end":252459,"line_start":595,"line_end":595,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252464,"byte_end":252507,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252512,"byte_end":252545,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252550,"byte_end":252557,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252562,"byte_end":252565,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252570,"byte_end":252618,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252623,"byte_end":252678,"line_start":601,"line_end":601,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252683,"byte_end":252691,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252696,"byte_end":252703,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254348,"byte_end":254362,"line_start":645,"line_end":645,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":252972,"byte_end":253034,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253039,"byte_end":253107,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253112,"byte_end":253146,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253151,"byte_end":253154,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253159,"byte_end":253234,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253239,"byte_end":253314,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253319,"byte_end":253395,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253400,"byte_end":253465,"line_start":620,"line_end":620,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253470,"byte_end":253473,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253478,"byte_end":253549,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253554,"byte_end":253557,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253562,"byte_end":253638,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253643,"byte_end":253717,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253722,"byte_end":253747,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253752,"byte_end":253755,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253760,"byte_end":253774,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253779,"byte_end":253786,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253791,"byte_end":253832,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253837,"byte_end":253894,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253899,"byte_end":253924,"line_start":632,"line_end":632,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253929,"byte_end":253932,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":253937,"byte_end":254007,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254012,"byte_end":254067,"line_start":635,"line_end":635,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254072,"byte_end":254134,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254139,"byte_end":254154,"line_start":637,"line_end":637,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254159,"byte_end":254166,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254171,"byte_end":254174,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254179,"byte_end":254200,"line_start":640,"line_end":640,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254205,"byte_end":254254,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254259,"byte_end":254315,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254320,"byte_end":254328,"line_start":643,"line_end":643,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254333,"byte_end":254340,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256054,"byte_end":256065,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254639,"byte_end":254704,"line_start":654,"line_end":654,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254709,"byte_end":254712,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254717,"byte_end":254790,"line_start":656,"line_end":656,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254795,"byte_end":254868,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254873,"byte_end":254946,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":254951,"byte_end":255021,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255026,"byte_end":255029,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255034,"byte_end":255048,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255053,"byte_end":255056,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255061,"byte_end":255068,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255073,"byte_end":255114,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255119,"byte_end":255150,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255155,"byte_end":255206,"line_start":666,"line_end":666,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255211,"byte_end":255231,"line_start":667,"line_end":667,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255236,"byte_end":255239,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255244,"byte_end":255283,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255288,"byte_end":255327,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255332,"byte_end":255371,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255376,"byte_end":255379,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255384,"byte_end":255411,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255416,"byte_end":255459,"line_start":674,"line_end":674,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255464,"byte_end":255471,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255476,"byte_end":255503,"line_start":676,"line_end":676,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255508,"byte_end":255551,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255556,"byte_end":255600,"line_start":678,"line_end":678,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255605,"byte_end":255612,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255617,"byte_end":255644,"line_start":680,"line_end":680,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255649,"byte_end":255694,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255699,"byte_end":255744,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255749,"byte_end":255793,"line_start":683,"line_end":683,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255798,"byte_end":255805,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255810,"byte_end":255813,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255818,"byte_end":255857,"line_start":686,"line_end":686,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255862,"byte_end":255911,"line_start":687,"line_end":687,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255916,"byte_end":255965,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":255970,"byte_end":256020,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256025,"byte_end":256034,"line_start":690,"line_end":690,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256039,"byte_end":256046,"line_start":691,"line_end":691,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257657,"byte_end":257665,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256370,"byte_end":256440,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256445,"byte_end":256505,"line_start":704,"line_end":704,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256510,"byte_end":256513,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256518,"byte_end":256588,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256593,"byte_end":256669,"line_start":707,"line_end":707,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256674,"byte_end":256750,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256755,"byte_end":256825,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256830,"byte_end":256856,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256861,"byte_end":256864,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256869,"byte_end":256949,"line_start":712,"line_end":712,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":256954,"byte_end":257023,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257028,"byte_end":257049,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257054,"byte_end":257057,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257062,"byte_end":257076,"line_start":716,"line_end":716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257081,"byte_end":257084,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257089,"byte_end":257096,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257101,"byte_end":257142,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257147,"byte_end":257193,"line_start":720,"line_end":720,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257198,"byte_end":257201,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257206,"byte_end":257275,"line_start":722,"line_end":722,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257280,"byte_end":257357,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257362,"byte_end":257395,"line_start":724,"line_end":724,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257400,"byte_end":257403,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257408,"byte_end":257494,"line_start":726,"line_end":726,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257499,"byte_end":257585,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257590,"byte_end":257624,"line_start":728,"line_end":728,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257629,"byte_end":257637,"line_start":729,"line_end":729,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257642,"byte_end":257649,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259191,"byte_end":259201,"line_start":774,"line_end":774,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":257945,"byte_end":258007,"line_start":740,"line_end":740,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258012,"byte_end":258087,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258092,"byte_end":258095,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258100,"byte_end":258171,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258176,"byte_end":258252,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258257,"byte_end":258296,"line_start":745,"line_end":745,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258301,"byte_end":258304,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258309,"byte_end":258395,"line_start":747,"line_end":747,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258400,"byte_end":258403,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258408,"byte_end":258492,"line_start":749,"line_end":749,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258497,"byte_end":258553,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258558,"byte_end":258561,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258566,"byte_end":258580,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258585,"byte_end":258588,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258593,"byte_end":258600,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258605,"byte_end":258646,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258651,"byte_end":258682,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258687,"byte_end":258725,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258730,"byte_end":258750,"line_start":758,"line_end":758,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258755,"byte_end":258758,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258763,"byte_end":258824,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258829,"byte_end":258832,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258837,"byte_end":258864,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258869,"byte_end":258900,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258905,"byte_end":258931,"line_start":764,"line_end":764,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":258936,"byte_end":259006,"line_start":765,"line_end":765,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259011,"byte_end":259020,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259025,"byte_end":259032,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259037,"byte_end":259040,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259045,"byte_end":259084,"line_start":769,"line_end":769,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259089,"byte_end":259092,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259097,"byte_end":259157,"line_start":771,"line_end":771,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259162,"byte_end":259171,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":259176,"byte_end":259183,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265386,"byte_end":265405,"line_start":929,"line_end":929,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265278,"byte_end":265356,"line_start":927,"line_end":927,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":265361,"byte_end":265378,"line_start":928,"line_end":928,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7546},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":303921,"byte_end":303925,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7548}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":303799,"byte_end":303836,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":303861,"byte_end":303909,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304443,"byte_end":304447,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":303977,"byte_end":304041,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304042,"byte_end":304070,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304071,"byte_end":304074,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304075,"byte_end":304148,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304149,"byte_end":304204,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304205,"byte_end":304208,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304209,"byte_end":304216,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304217,"byte_end":304258,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304259,"byte_end":304302,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304303,"byte_end":304306,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304307,"byte_end":304351,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304352,"byte_end":304417,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304418,"byte_end":304427,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304428,"byte_end":304435,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7555},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305096,"byte_end":305102,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7557}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":304972,"byte_end":305011,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305036,"byte_end":305084,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305626,"byte_end":305632,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305124,"byte_end":305184,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305185,"byte_end":305188,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305189,"byte_end":305256,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305257,"byte_end":305329,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305330,"byte_end":305387,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305388,"byte_end":305391,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305392,"byte_end":305399,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305400,"byte_end":305441,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305442,"byte_end":305485,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305486,"byte_end":305489,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305490,"byte_end":305525,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305526,"byte_end":305600,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305601,"byte_end":305610,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305611,"byte_end":305618,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7564},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306572,"byte_end":306582,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":7566}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306270,"byte_end":306330,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306331,"byte_end":306383,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306384,"byte_end":306387,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306388,"byte_end":306451,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306452,"byte_end":306487,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306512,"byte_end":306560,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308870,"byte_end":308881,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307098,"byte_end":307169,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307170,"byte_end":307237,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307238,"byte_end":307241,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307242,"byte_end":307314,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307315,"byte_end":307318,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307319,"byte_end":307393,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307394,"byte_end":307446,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307447,"byte_end":307450,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307451,"byte_end":307523,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307524,"byte_end":307597,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307598,"byte_end":307635,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307636,"byte_end":307639,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307640,"byte_end":307654,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307655,"byte_end":307658,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307659,"byte_end":307675,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307676,"byte_end":307679,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307680,"byte_end":307687,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307688,"byte_end":307729,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307730,"byte_end":307773,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307774,"byte_end":307777,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307778,"byte_end":307846,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307847,"byte_end":307925,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307926,"byte_end":307957,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307958,"byte_end":307979,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307980,"byte_end":307983,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307984,"byte_end":308018,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308019,"byte_end":308074,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308075,"byte_end":308078,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308079,"byte_end":308132,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308133,"byte_end":308186,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308187,"byte_end":308240,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308241,"byte_end":308250,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308251,"byte_end":308258,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308259,"byte_end":308262,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308263,"byte_end":308299,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308300,"byte_end":308303,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308304,"byte_end":308315,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308316,"byte_end":308357,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308358,"byte_end":308401,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308402,"byte_end":308405,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308406,"byte_end":308455,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308456,"byte_end":308477,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308478,"byte_end":308555,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308556,"byte_end":308589,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308590,"byte_end":308593,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308594,"byte_end":308637,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308638,"byte_end":308681,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308682,"byte_end":308725,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308726,"byte_end":308769,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308770,"byte_end":308773,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308774,"byte_end":308803,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308804,"byte_end":308844,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308845,"byte_end":308854,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":308855,"byte_end":308862,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7573},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309223,"byte_end":309228,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":7575}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309107,"byte_end":309145,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309163,"byte_end":309211,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309396,"byte_end":309401,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309266,"byte_end":309314,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309315,"byte_end":309318,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309319,"byte_end":309388,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310449,"byte_end":310453,"line_start":19,"line_end":19,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310142,"byte_end":310183,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310184,"byte_end":310187,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310188,"byte_end":310195,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310196,"byte_end":310237,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310238,"byte_end":310281,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310282,"byte_end":310285,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310286,"byte_end":310330,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310331,"byte_end":310386,"line_start":15,"line_end":15,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310387,"byte_end":310423,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310424,"byte_end":310433,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310434,"byte_end":310441,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7584},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310682,"byte_end":310686,"line_start":27,"line_end":27,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":7586}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7615},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":311836,"byte_end":311843,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":7617}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":311716,"byte_end":311758,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":311776,"byte_end":311824,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":312019,"byte_end":312026,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":311887,"byte_end":311941,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":311942,"byte_end":311945,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":311946,"byte_end":312011,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":312820,"byte_end":312826,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2269}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":312719,"byte_end":312759,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":312760,"byte_end":312808,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313514,"byte_end":313521,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313026,"byte_end":313099,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313100,"byte_end":313103,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313104,"byte_end":313163,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313164,"byte_end":313167,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313168,"byte_end":313182,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313183,"byte_end":313186,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313187,"byte_end":313194,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313195,"byte_end":313228,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313229,"byte_end":313257,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313258,"byte_end":313261,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313262,"byte_end":313291,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313292,"byte_end":313295,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313296,"byte_end":313360,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313361,"byte_end":313414,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313415,"byte_end":313436,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313437,"byte_end":313490,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313491,"byte_end":313498,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313499,"byte_end":313506,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7628},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314192,"byte_end":314198,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":7631},{"krate":0,"index":7632},{"krate":0,"index":7633}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314802,"byte_end":314808,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314326,"byte_end":314394,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314395,"byte_end":314471,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314472,"byte_end":314520,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314521,"byte_end":314524,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314525,"byte_end":314599,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314600,"byte_end":314669,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314670,"byte_end":314697,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314698,"byte_end":314701,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314702,"byte_end":314773,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":314774,"byte_end":314794,"line_start":29,"line_end":29,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315187,"byte_end":315194,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315079,"byte_end":315153,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315158,"byte_end":315175,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315550,"byte_end":315557,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315288,"byte_end":315356,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315361,"byte_end":315392,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315397,"byte_end":315400,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315405,"byte_end":315478,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315483,"byte_end":315538,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315932,"byte_end":315943,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315663,"byte_end":315738,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315743,"byte_end":315774,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315779,"byte_end":315782,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315787,"byte_end":315860,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315865,"byte_end":315920,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":316349,"byte_end":316359,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":316113,"byte_end":316176,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":316181,"byte_end":316184,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":316189,"byte_end":316261,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":316266,"byte_end":316337,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319600,"byte_end":319606,"line_start":49,"line_end":49,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318158,"byte_end":318228,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318229,"byte_end":318232,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318233,"byte_end":318302,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318303,"byte_end":318384,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318385,"byte_end":318416,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318417,"byte_end":318420,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318421,"byte_end":318500,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318501,"byte_end":318580,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318581,"byte_end":318635,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318636,"byte_end":318639,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318640,"byte_end":318720,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318721,"byte_end":318791,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318792,"byte_end":318814,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318815,"byte_end":318818,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318819,"byte_end":318896,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318897,"byte_end":318969,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":318970,"byte_end":319047,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319048,"byte_end":319108,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319109,"byte_end":319112,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319113,"byte_end":319126,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319127,"byte_end":319130,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319131,"byte_end":319138,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319139,"byte_end":319180,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319181,"byte_end":319224,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319225,"byte_end":319228,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319229,"byte_end":319284,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319285,"byte_end":319308,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319309,"byte_end":319348,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319349,"byte_end":319386,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319387,"byte_end":319426,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319427,"byte_end":319443,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319444,"byte_end":319460,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319461,"byte_end":319470,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319471,"byte_end":319478,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319479,"byte_end":319482,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319483,"byte_end":319535,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319536,"byte_end":319574,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319575,"byte_end":319584,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319585,"byte_end":319592,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7674},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":319948,"byte_end":319954,"line_start":63,"line_end":63,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":7678},{"krate":0,"index":7679}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":7265756,"byte_end":7265765,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":7727},{"krate":0,"index":2383},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321548,"byte_end":321581,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321582,"byte_end":321585,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321586,"byte_end":321611,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321612,"byte_end":321615,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321616,"byte_end":321664,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321665,"byte_end":321718,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321719,"byte_end":321767,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321768,"byte_end":321815,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321816,"byte_end":321819,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321820,"byte_end":321894,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\mod.rs","byte_start":321895,"byte_end":321967,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":2391},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":323157,"byte_end":323165,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":323114,"byte_end":323146,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":325921,"byte_end":325934,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":325873,"byte_end":325910,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2396},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","parent":null,"children":[{"krate":0,"index":2397}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328393,"byte_end":328435,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328436,"byte_end":328439,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328440,"byte_end":328506,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":2397},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":329143,"byte_end":329148,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328508,"byte_end":328543,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328544,"byte_end":328547,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328548,"byte_end":328623,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328624,"byte_end":328661,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328662,"byte_end":328665,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328666,"byte_end":328730,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328731,"byte_end":328734,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328735,"byte_end":328806,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328807,"byte_end":328858,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328859,"byte_end":328951,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328952,"byte_end":328955,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":328956,"byte_end":329027,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\never.rs","byte_start":329028,"byte_end":329133,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":2403},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329251,"byte_end":329258,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2406}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2405},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329273,"byte_end":329279,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":2403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329288,"byte_end":329297,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":2403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329489,"byte_end":329495,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2415}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329520,"byte_end":329528,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":2413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":330832,"byte_end":330836,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7746},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331192,"byte_end":331199,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7767},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331933,"byte_end":331946,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7783},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":332288,"byte_end":332297,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7798},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":333246,"byte_end":333253,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7813},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":333964,"byte_end":333972,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7828},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":334692,"byte_end":334703,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7840},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":335521,"byte_end":335533,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7852},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":336614,"byte_end":336628,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2594},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":337387,"byte_end":337393,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35943,"byte_end":35950,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":36080,"byte_end":36087,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":36318,"byte_end":36325,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":37107,"byte_end":37114,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":37345,"byte_end":37352,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40424,"byte_end":40428,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40535,"byte_end":40539,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42268,"byte_end":42272,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42385,"byte_end":42389,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43368,"byte_end":43371,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43540,"byte_end":43543,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43805,"byte_end":43808,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19169,"byte_end":19170,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66493,"byte_end":66503,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66654,"byte_end":66664,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66775,"byte_end":66785,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67517,"byte_end":67527,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67657,"byte_end":67667,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67914,"byte_end":67924,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":68946,"byte_end":68956,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":69203,"byte_end":69213,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72716,"byte_end":72729,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72859,"byte_end":72872,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":73119,"byte_end":73132,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49161,"byte_end":49164,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74483,"byte_end":74487,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":75060,"byte_end":75064,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":75196,"byte_end":75200,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75777,"byte_end":75784,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76335,"byte_end":76342,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76487,"byte_end":76494,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76521,"byte_end":76528,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77256,"byte_end":77265,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77844,"byte_end":77853,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78951,"byte_end":78960,"line_start":78,"line_end":78,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":79161,"byte_end":79170,"line_start":87,"line_end":87,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80464,"byte_end":80476,"line_start":24,"line_end":24,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80658,"byte_end":80670,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81783,"byte_end":81795,"line_start":63,"line_end":63,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81999,"byte_end":82011,"line_start":72,"line_end":72,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":83733,"byte_end":83745,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":84082,"byte_end":84094,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":84281,"byte_end":84293,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84705,"byte_end":84711,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85381,"byte_end":85387,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85529,"byte_end":85535,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86012,"byte_end":86017,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86196,"byte_end":86201,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86233,"byte_end":86238,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86335,"byte_end":86340,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93094,"byte_end":93100,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":95342,"byte_end":95348,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96051,"byte_end":96057,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103643,"byte_end":103652,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":105358,"byte_end":105367,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":106800,"byte_end":106806,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107145,"byte_end":107151,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107536,"byte_end":107542,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107923,"byte_end":107929,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":108170,"byte_end":108176,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":108515,"byte_end":108521,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":108797,"byte_end":108803,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":109155,"byte_end":109161,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":168313,"byte_end":168318,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":168575,"byte_end":168580,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":168785,"byte_end":168790,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":170403,"byte_end":170410,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":170708,"byte_end":170715,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":170891,"byte_end":170898,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":171922,"byte_end":171927,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":172401,"byte_end":172406,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":172656,"byte_end":172661,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":173787,"byte_end":173793,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":174060,"byte_end":174066,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":174841,"byte_end":174847,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":175524,"byte_end":175529,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":175718,"byte_end":175723,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":176472,"byte_end":176477,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":177225,"byte_end":177234,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":177453,"byte_end":177462,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":177580,"byte_end":177589,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":179053,"byte_end":179059,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":179532,"byte_end":179538,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5333}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":179916,"byte_end":179922,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":180271,"byte_end":180277,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":182494,"byte_end":182503,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":182800,"byte_end":182809,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5394}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":183088,"byte_end":183097,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":183374,"byte_end":183383,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":185528,"byte_end":185535,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":5444},{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5447}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":185704,"byte_end":185711,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":185903,"byte_end":185910,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":187424,"byte_end":187428,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":187784,"byte_end":187788,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":188106,"byte_end":188110,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":188357,"byte_end":188361,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":189962,"byte_end":189969,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":190262,"byte_end":190269,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":190545,"byte_end":190552,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":190803,"byte_end":190810,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":191923,"byte_end":191927,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5671},{"krate":0,"index":5672}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192424,"byte_end":192428,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192526,"byte_end":192530,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":193755,"byte_end":193767,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":196257,"byte_end":196269,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":196389,"byte_end":196401,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":197309,"byte_end":197312,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":197527,"byte_end":197530,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":5793},{"krate":0,"index":5794},{"krate":0,"index":5795},{"krate":0,"index":5796}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":197699,"byte_end":197702,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":197876,"byte_end":197879,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":199026,"byte_end":199030,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":199081,"byte_end":199085,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":199236,"byte_end":199240,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":199379,"byte_end":199383,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":200057,"byte_end":200071,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":200222,"byte_end":200236,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":200380,"byte_end":200394,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":201649,"byte_end":201657,"line_start":27,"line_end":27,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":5936},{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202834,"byte_end":202842,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202984,"byte_end":202992,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":204172,"byte_end":204176,"line_start":113,"line_end":113,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":204447,"byte_end":204451,"line_start":125,"line_end":125,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":204562,"byte_end":204566,"line_start":131,"line_end":131,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":205476,"byte_end":205480,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6023},{"krate":0,"index":6024}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":205704,"byte_end":205708,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":205826,"byte_end":205830,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":207533,"byte_end":207542,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":207994,"byte_end":208003,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6092},{"krate":0,"index":6093}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":208410,"byte_end":208419,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":208679,"byte_end":208688,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":211035,"byte_end":211039,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":6134},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6137}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":211245,"byte_end":211249,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":212243,"byte_end":212247,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":213270,"byte_end":213279,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":213727,"byte_end":213736,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205},{"krate":0,"index":6206}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":214136,"byte_end":214145,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":215699,"byte_end":215708,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":217104,"byte_end":217113,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":217440,"byte_end":217449,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":6260},{"krate":0,"index":6261},{"krate":0,"index":6262},{"krate":0,"index":6263},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219623,"byte_end":219632,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":220664,"byte_end":220673,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":221615,"byte_end":221619,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":221909,"byte_end":221913,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":6321},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6324}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":222210,"byte_end":222214,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":222452,"byte_end":222456,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224373,"byte_end":224376,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":226019,"byte_end":226022,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":226213,"byte_end":226216,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":228941,"byte_end":228945,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":229431,"byte_end":229435,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":229599,"byte_end":229603,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":6447},{"krate":0,"index":6448},{"krate":0,"index":6449},{"krate":0,"index":6450}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":230055,"byte_end":230059,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":231286,"byte_end":231290,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124053,"byte_end":124054,"line_start":206,"line_end":206,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":268498,"byte_end":268505,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":268798,"byte_end":268805,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6510},{"krate":0,"index":6511}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":269098,"byte_end":269105,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":270283,"byte_end":270290,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":271220,"byte_end":271230,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":6755},{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":6758}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":271423,"byte_end":271433,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":271554,"byte_end":271564,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":272686,"byte_end":272692,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":272984,"byte_end":272990,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":6954},{"krate":0,"index":6955},{"krate":0,"index":6956},{"krate":0,"index":6957}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":273280,"byte_end":273286,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":274599,"byte_end":274605,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275521,"byte_end":275528,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275582,"byte_end":275589,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275752,"byte_end":275759,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275901,"byte_end":275908,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":276707,"byte_end":276717,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":277013,"byte_end":277023,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":277313,"byte_end":277323,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":278734,"byte_end":278743,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":279139,"byte_end":279148,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":7084},{"krate":0,"index":7085},{"krate":0,"index":7086},{"krate":0,"index":7087}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":279447,"byte_end":279456,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":279725,"byte_end":279734,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":281912,"byte_end":281924,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":282224,"byte_end":282236,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":7145},{"krate":0,"index":7146},{"krate":0,"index":7147},{"krate":0,"index":7148}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":282433,"byte_end":282445,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":282735,"byte_end":282747,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":284966,"byte_end":284976,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":7189},{"krate":0,"index":7190},{"krate":0,"index":7191},{"krate":0,"index":7192}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":285241,"byte_end":285251,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":285497,"byte_end":285507,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":287116,"byte_end":287126,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":287299,"byte_end":287309,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":287497,"byte_end":287507,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":288528,"byte_end":288537,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":288789,"byte_end":288798,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":290061,"byte_end":290068,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":290427,"byte_end":290434,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":290771,"byte_end":290778,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":291044,"byte_end":291051,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294883,"byte_end":294892,"line_start":81,"line_end":81,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":295193,"byte_end":295202,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":1963}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":296971,"byte_end":296983,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":297439,"byte_end":297451,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":7473},{"krate":0,"index":7474},{"krate":0,"index":7475},{"krate":0,"index":7476}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":297872,"byte_end":297884,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":299418,"byte_end":299430,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":300670,"byte_end":300682,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":301134,"byte_end":301146,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":7542},{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7545}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":301553,"byte_end":301565,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":303172,"byte_end":303184,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236694,"byte_end":236695,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":303965,"byte_end":303969,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304575,"byte_end":304579,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305720,"byte_end":305726,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305753,"byte_end":305759,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":306066,"byte_end":306072,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306643,"byte_end":306653,"line_start":16,"line_end":16,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306697,"byte_end":306707,"line_start":18,"line_end":18,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307021,"byte_end":307031,"line_start":30,"line_end":30,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309490,"byte_end":309495,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309527,"byte_end":309532,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309617,"byte_end":309622,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309871,"byte_end":309876,"line_start":42,"line_end":42,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310756,"byte_end":310760,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310889,"byte_end":310893,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":311498,"byte_end":311502,"line_start":62,"line_end":62,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":312112,"byte_end":312119,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":312151,"byte_end":312158,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":312243,"byte_end":312250,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":312495,"byte_end":312502,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":312863,"byte_end":312869,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":312900,"byte_end":312906,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313648,"byte_end":313654,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315056,"byte_end":315062,"line_start":41,"line_end":41,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":316485,"byte_end":316491,"line_start":76,"line_end":76,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":316709,"byte_end":316715,"line_start":85,"line_end":85,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":320073,"byte_end":320079,"line_start":70,"line_end":70,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":320345,"byte_end":320351,"line_start":82,"line_end":82,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":320631,"byte_end":320637,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":323029,"byte_end":323031,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":323086,"byte_end":323088,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329361,"byte_end":329362,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329596,"byte_end":329597,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2420}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329866,"byte_end":329867,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":330882,"byte_end":330886,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":330980,"byte_end":330984,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331243,"byte_end":331250,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331473,"byte_end":331480,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331671,"byte_end":331678,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331983,"byte_end":331996,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2463},{"krate":0,"index":2464}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":332413,"byte_end":332422,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":332704,"byte_end":332713,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":332973,"byte_end":332982,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":333302,"byte_end":333309,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2487},{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":333528,"byte_end":333535,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":333713,"byte_end":333720,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":334021,"byte_end":334029,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":334252,"byte_end":334260,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":334442,"byte_end":334450,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":334760,"byte_end":334771,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2530},{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":335008,"byte_end":335019,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":335234,"byte_end":335245,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":335590,"byte_end":335602,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":335840,"byte_end":335852,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":336068,"byte_end":336080,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":336677,"byte_end":336691,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2577},{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":336912,"byte_end":336926,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":337125,"byte_end":337139,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":337443,"byte_end":337449,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":337542,"byte_end":337548,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\unfold_state.rs","byte_start":338148,"byte_end":338159,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11585,"byte_end":11591,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11667,"byte_end":11673,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":688}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11907,"byte_end":11911,"line_start":325,"line_end":325,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2368}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\lib.rs","byte_start":11922,"byte_end":11927,"line_start":327,"line_end":327,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2396}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":35943,"byte_end":35950,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":36080,"byte_end":36087,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2618},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":36318,"byte_end":36325,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2618},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":37107,"byte_end":37114,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2618},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\flatten.rs","byte_start":37345,"byte_end":37352,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2618},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40424,"byte_end":40428,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":40535,"byte_end":40539,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42268,"byte_end":42272,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2666},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\fuse.rs","byte_start":42385,"byte_end":42389,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2666},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43368,"byte_end":43371,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43540,"byte_end":43543,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2701},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\map.rs","byte_start":43805,"byte_end":43808,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2701},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19169,"byte_end":19170,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":123},"to":{"krate":0,"index":124}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\future\\mod.rs","byte_start":19301,"byte_end":19307,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":9666},"to":{"krate":0,"index":124}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66493,"byte_end":66503,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66654,"byte_end":66664,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3254},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\into_future.rs","byte_start":66775,"byte_end":66785,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3254},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67517,"byte_end":67527,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67657,"byte_end":67667,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3289},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":67914,"byte_end":67924,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3289},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":68946,"byte_end":68956,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3289},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten.rs","byte_start":69203,"byte_end":69213,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3289},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72716,"byte_end":72729,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72859,"byte_end":72872,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3336},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\try_flatten_err.rs","byte_start":73119,"byte_end":73132,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3336},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49161,"byte_end":49164,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":264},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_future\\mod.rs","byte_start":49247,"byte_end":49256,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":32},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":74483,"byte_end":74487,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4199},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":75060,"byte_end":75064,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4199},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\lazy.rs","byte_start":75196,"byte_end":75200,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4199},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":75777,"byte_end":75784,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4205},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76335,"byte_end":76342,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4205},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76487,"byte_end":76494,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4205},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\pending.rs","byte_start":76521,"byte_end":76528,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4205},"to":{"krate":1,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77256,"byte_end":77265,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4211},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":77844,"byte_end":77853,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":78951,"byte_end":78960,"line_start":78,"line_end":78,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4211},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\maybe_done.rs","byte_start":79161,"byte_end":79170,"line_start":87,"line_end":87,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4211},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80464,"byte_end":80476,"line_start":24,"line_end":24,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4224},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":80658,"byte_end":80670,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81783,"byte_end":81795,"line_start":63,"line_end":63,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4224},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_maybe_done.rs","byte_start":81999,"byte_end":82011,"line_start":72,"line_end":72,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4224},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":83733,"byte_end":83745,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4242},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":84082,"byte_end":84094,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4242},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\option.rs","byte_start":84281,"byte_end":84293,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4242},"to":{"krate":1,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":84705,"byte_end":84711,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85381,"byte_end":85387,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\poll_fn.rs","byte_start":85529,"byte_end":85535,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86012,"byte_end":86017,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86196,"byte_end":86201,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4276},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86233,"byte_end":86238,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4276},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\ready.rs","byte_start":86335,"byte_end":86340,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4276},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":93094,"byte_end":93100,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4630},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":95342,"byte_end":95348,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4630},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\select.rs","byte_start":96051,"byte_end":96057,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4630},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":103643,"byte_end":103652,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4960},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\try_select.rs","byte_start":105358,"byte_end":105367,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4960},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":106800,"byte_end":106806,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107145,"byte_end":107151,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107536,"byte_end":107542,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":107923,"byte_end":107929,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":108170,"byte_end":108176,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4968},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":108515,"byte_end":108521,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4968},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":108797,"byte_end":108803,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4968},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\future\\either.rs","byte_start":109155,"byte_end":109161,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4968},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":168313,"byte_end":168318,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":168575,"byte_end":168580,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4992},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\chain.rs","byte_start":168785,"byte_end":168790,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4992},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":170403,"byte_end":170410,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":170708,"byte_end":170715,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5041},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\collect.rs","byte_start":170891,"byte_end":170898,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5041},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":171922,"byte_end":171927,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":172401,"byte_end":172406,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5092},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\unzip.rs","byte_start":172656,"byte_end":172661,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5092},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":173787,"byte_end":173793,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":174060,"byte_end":174066,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5150},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\concat.rs","byte_start":174841,"byte_end":174847,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5150},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":175524,"byte_end":175529,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":175718,"byte_end":175723,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5190},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\cycle.rs","byte_start":176472,"byte_end":176477,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5190},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":177225,"byte_end":177234,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":177453,"byte_end":177462,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5230},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\enumerate.rs","byte_start":177580,"byte_end":177589,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5230},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":179053,"byte_end":179059,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5269},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":179532,"byte_end":179538,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":179916,"byte_end":179922,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5269},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter.rs","byte_start":180271,"byte_end":180277,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5269},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":182494,"byte_end":182503,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5334},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":182800,"byte_end":182809,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":183088,"byte_end":183097,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5334},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\filter_map.rs","byte_start":183374,"byte_end":183383,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5334},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":185528,"byte_end":185535,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":185704,"byte_end":185711,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5402},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\flatten.rs","byte_start":185903,"byte_end":185910,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5402},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":187424,"byte_end":187428,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5503},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":187784,"byte_end":187788,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":188106,"byte_end":188110,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5503},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fold.rs","byte_start":188357,"byte_end":188361,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5503},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":189962,"byte_end":189969,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5572},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":190262,"byte_end":190269,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":190545,"byte_end":190552,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5572},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\for_each.rs","byte_start":190803,"byte_end":190810,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5572},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":191923,"byte_end":191927,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":5634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192424,"byte_end":192428,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5634},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\fuse.rs","byte_start":192526,"byte_end":192530,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5634},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":193755,"byte_end":193767,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":196257,"byte_end":196269,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5673},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\into_future.rs","byte_start":196389,"byte_end":196401,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5673},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":197309,"byte_end":197312,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5748},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":197527,"byte_end":197530,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":197699,"byte_end":197702,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5748},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\map.rs","byte_start":197876,"byte_end":197879,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5748},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":199026,"byte_end":199030,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5880},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":199081,"byte_end":199085,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":199236,"byte_end":199240,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5880},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\next.rs","byte_start":199379,"byte_end":199383,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5880},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":200057,"byte_end":200071,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":200222,"byte_end":200236,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5888},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\select_next_some.rs","byte_start":200380,"byte_end":200394,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5888},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":201649,"byte_end":201657,"line_start":27,"line_end":27,"column_start":18,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202834,"byte_end":202842,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5901},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":202984,"byte_end":202992,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5901},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":204172,"byte_end":204176,"line_start":113,"line_end":113,"column_start":25,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5940},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":204447,"byte_end":204451,"line_start":125,"line_end":125,"column_start":34,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5940},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\peek.rs","byte_start":204562,"byte_end":204566,"line_start":131,"line_end":131,"column_start":25,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5940},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":205476,"byte_end":205480,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":5986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":205704,"byte_end":205708,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":5986},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip.rs","byte_start":205826,"byte_end":205830,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":5986},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":207533,"byte_end":207542,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6025},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":207994,"byte_end":208003,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":208410,"byte_end":208419,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6025},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\skip_while.rs","byte_start":208679,"byte_end":208688,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6025},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":211035,"byte_end":211039,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":211245,"byte_end":211249,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6099},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take.rs","byte_start":212243,"byte_end":212247,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6099},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":213270,"byte_end":213279,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6138},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":213727,"byte_end":213736,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":6138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":214136,"byte_end":214145,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6138},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_while.rs","byte_start":215699,"byte_end":215708,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6138},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":217104,"byte_end":217113,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6207},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":217440,"byte_end":217449,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":219623,"byte_end":219632,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6207},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\take_until.rs","byte_start":220664,"byte_end":220673,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6207},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":221615,"byte_end":221619,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6264},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":221909,"byte_end":221913,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":222210,"byte_end":222214,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6264},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\then.rs","byte_start":222452,"byte_end":222456,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6264},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":224373,"byte_end":224376,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":226019,"byte_end":226022,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6332},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\zip.rs","byte_start":226213,"byte_end":226216,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6332},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":228941,"byte_end":228945,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6382},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":229431,"byte_end":229435,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":229599,"byte_end":229603,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":230055,"byte_end":230059,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6382},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\scan.rs","byte_start":231286,"byte_end":231290,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6382},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124053,"byte_end":124054,"line_start":206,"line_end":206,"column_start":31,"column_end":32},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1485},"to":{"krate":0,"index":1486}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\stream\\mod.rs","byte_start":124197,"byte_end":124203,"line_start":210,"line_end":210,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":68},"to":{"krate":0,"index":1486}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":268498,"byte_end":268505,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6451},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":268798,"byte_end":268805,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":269098,"byte_end":269105,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6451},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\and_then.rs","byte_start":270283,"byte_end":270290,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6451},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":271220,"byte_end":271230,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":271423,"byte_end":271433,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6724},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\into_stream.rs","byte_start":271554,"byte_end":271564,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6724},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":272686,"byte_end":272692,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6897},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":272984,"byte_end":272990,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":273280,"byte_end":273286,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6897},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\or_else.rs","byte_start":274599,"byte_end":274605,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6897},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275521,"byte_end":275528,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6958},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275582,"byte_end":275589,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275752,"byte_end":275759,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6958},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_next.rs","byte_start":275901,"byte_end":275908,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6958},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":276707,"byte_end":276717,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6966},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":277013,"byte_end":277023,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_for_each.rs","byte_start":277313,"byte_end":277323,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6966},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":278734,"byte_end":278743,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7023},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":279139,"byte_end":279148,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":279447,"byte_end":279456,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7023},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter.rs","byte_start":279725,"byte_end":279734,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7023},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":281912,"byte_end":281924,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":7088},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":282224,"byte_end":282236,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":7088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":282433,"byte_end":282445,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7088},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":282735,"byte_end":282747,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":7088},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":284966,"byte_end":284976,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":7154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":285241,"byte_end":285251,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":7154},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_flatten.rs","byte_start":285497,"byte_end":285507,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":7154},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":287116,"byte_end":287126,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":7200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":287299,"byte_end":287309,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":7200},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_collect.rs","byte_start":287497,"byte_end":287507,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":7200},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":288528,"byte_end":288537,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_concat.rs","byte_start":288789,"byte_end":288798,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7247},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":290061,"byte_end":290068,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7282},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":290427,"byte_end":290434,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":7282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":290771,"byte_end":290778,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7282},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_fold.rs","byte_start":291044,"byte_end":291051,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7282},"to":{"krate":1,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":294883,"byte_end":294892,"line_start":81,"line_end":81,"column_start":32,"column_end":41},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":7351},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_unfold.rs","byte_start":295193,"byte_end":295202,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":7351},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":296971,"byte_end":296983,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":7408},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":297439,"byte_end":297451,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":7408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":297872,"byte_end":297884,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":7408},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":299418,"byte_end":299430,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":7408},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":300670,"byte_end":300682,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7477},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":301134,"byte_end":301146,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":301553,"byte_end":301565,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":7477},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\try_take_while.rs","byte_start":303172,"byte_end":303184,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":7477},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236694,"byte_end":236695,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2042},"to":{"krate":0,"index":2043}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\try_stream\\mod.rs","byte_start":236776,"byte_end":236785,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":97},"to":{"krate":0,"index":2043}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":303965,"byte_end":303969,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":7546},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\iter.rs","byte_start":304575,"byte_end":304579,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7546},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305720,"byte_end":305726,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":7555},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":305753,"byte_end":305759,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":7555},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat.rs","byte_start":306066,"byte_end":306072,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7555},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306643,"byte_end":306653,"line_start":16,"line_end":16,"column_start":36,"column_end":46},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7564},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":306697,"byte_end":306707,"line_start":18,"line_end":18,"column_start":37,"column_end":47},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":7564},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\repeat_with.rs","byte_start":307021,"byte_end":307031,"line_start":30,"line_end":30,"column_start":42,"column_end":52},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":7564},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309490,"byte_end":309495,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":7573},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309527,"byte_end":309532,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":7573},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309617,"byte_end":309622,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":7573},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\empty.rs","byte_start":309871,"byte_end":309876,"line_start":42,"line_end":42,"column_start":19,"column_end":24},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7573},"to":{"krate":1,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310756,"byte_end":310760,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":7584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":310889,"byte_end":310893,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":7584},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\once.rs","byte_start":311498,"byte_end":311502,"line_start":62,"line_end":62,"column_start":35,"column_end":39},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":7584},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":312112,"byte_end":312119,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":7615},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":312151,"byte_end":312158,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":7615},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":312243,"byte_end":312250,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":7615},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\pending.rs","byte_start":312495,"byte_end":312502,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":7615},"to":{"krate":1,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":312863,"byte_end":312869,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2267},"to":{"krate":1,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":312900,"byte_end":312906,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2267},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\poll_fn.rs","byte_start":313648,"byte_end":313654,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2267},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":315056,"byte_end":315062,"line_start":41,"line_end":41,"column_start":16,"column_end":22},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":7628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":316485,"byte_end":316491,"line_start":76,"line_end":76,"column_start":32,"column_end":38},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":7628},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\select.rs","byte_start":316709,"byte_end":316715,"line_start":85,"line_end":85,"column_start":27,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":7628},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":320073,"byte_end":320079,"line_start":70,"line_end":70,"column_start":32,"column_end":38},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":7674},"to":{"krate":1,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":320345,"byte_end":320351,"line_start":82,"line_end":82,"column_start":39,"column_end":45},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":7674},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\stream\\unfold.rs","byte_start":320631,"byte_end":320637,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":7674},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":323029,"byte_end":323031,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2388},"to":{"krate":0,"index":2391}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":323086,"byte_end":323088,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2390},"to":{"krate":0,"index":2392}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":323167,"byte_end":323172,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":15,"index":10},"to":{"krate":0,"index":2391}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\task\\spawn.rs","byte_start":325936,"byte_end":325946,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":15,"index":13},"to":{"krate":0,"index":2392}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329361,"byte_end":329362,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2408},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329500,"byte_end":329507,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":2403},"to":{"krate":0,"index":2413}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329596,"byte_end":329597,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2417},"to":{"krate":0,"index":2413}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329782,"byte_end":329788,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2413},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":329866,"byte_end":329867,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2425},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":330882,"byte_end":330886,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2430},"to":{"krate":1,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":330980,"byte_end":330984,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331243,"byte_end":331250,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":7746},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331473,"byte_end":331480,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":7746},"to":{"krate":0,"index":2413}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331671,"byte_end":331678,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":7746},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":331983,"byte_end":331996,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":332413,"byte_end":332422,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":7783},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":332704,"byte_end":332713,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":7783},"to":{"krate":0,"index":2413}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":332973,"byte_end":332982,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":7783},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":333302,"byte_end":333309,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":7798},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":333528,"byte_end":333535,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":7798},"to":{"krate":0,"index":2413}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":333713,"byte_end":333720,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":7798},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":334021,"byte_end":334029,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":7813},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":334252,"byte_end":334260,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":7813},"to":{"krate":0,"index":2413}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":334442,"byte_end":334450,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":7813},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":334760,"byte_end":334771,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":7828},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":335008,"byte_end":335019,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":7828},"to":{"krate":0,"index":2413}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":335234,"byte_end":335245,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":7828},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":335590,"byte_end":335602,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":7840},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":335840,"byte_end":335852,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":7840},"to":{"krate":0,"index":2413}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":336068,"byte_end":336080,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":7840},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":336677,"byte_end":336691,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":7852},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":336912,"byte_end":336926,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":7852},"to":{"krate":0,"index":2413}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":337125,"byte_end":337139,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":7852},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":337443,"byte_end":337449,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2594},"to":{"krate":1,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\fns.rs","byte_start":337542,"byte_end":337548,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2594},"to":{"krate":0,"index":2403}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.12\\src\\unfold_state.rs","byte_start":338148,"byte_end":338159,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":7889},"to":{"krate":4294967295,"index":4294967295}}]}