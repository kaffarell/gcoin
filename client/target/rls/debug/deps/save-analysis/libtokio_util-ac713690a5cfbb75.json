{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3","program":"C:\\Users\\gabri\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=ac713690a5cfbb75","-C","extra-filename=-ac713690a5cfbb75","--out-dir","c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libbytes-cb0dd1c132e94697.rmeta","--extern","futures_core=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libfutures_core-a40f239f97221124.rmeta","--extern","futures_sink=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libfutures_sink-ed51c7ac5b57747d.rmeta","--extern","log=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\liblog-4e5b8c84c13a9519.rmeta","--extern","pin_project_lite=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libpin_project_lite-012c5347fd28e0f8.rmeta","--extern","tokio=c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libtokio-df513f49eed7a2f1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\gabri\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\gabri\\Desktop\\gcoin\\client\\target\\rls\\debug\\deps\\libtokio_util-ac713690a5cfbb75.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[6708955287976106546,16650029790510036942]},"crate_root":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src","external_crates":[{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7607668859873757532,1781785219377684392]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[13611023294341355437,10043691270023661894]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[101447838822452173,8618322888261503379]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13475896778791491548,12248248351844131012]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4016777027723060150,6575819384461205726]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2651865965395105447,1277636433429132291]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6625204696738865430,3777009149181587391]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2466389407038385562,16922006968362962921]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7691805749014262489,8411562063720114408]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10977525908131958733,15669095950081001892]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14600121526287085947,8078689161172856885]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[15875267039736385556,9614836444850963760]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","num":13,"id":{"name":"futures_core","disambiguator":[1671919372578227713,2896883413225368489]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","num":14,"id":{"name":"tokio","disambiguator":[11608784888611811203,15944317991962230215]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","num":15,"id":{"name":"mio","disambiguator":[17243944357694378341,6265275078517739596]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","num":16,"id":{"name":"log","disambiguator":[5529339310903800427,17954587109032602403]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","num":17,"id":{"name":"cfg_if","disambiguator":[15246054710812832144,12522391214617896906]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","num":18,"id":{"name":"ntapi","disambiguator":[1283422577191309211,12728241893729889217]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","num":19,"id":{"name":"winapi","disambiguator":[5050424859186781691,14062163605860858543]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","num":20,"id":{"name":"miow","disambiguator":[13887693994831000590,13273167335643837072]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","num":21,"id":{"name":"socket2","disambiguator":[1973751857736218854,17514031143153025133]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[6153343985636253266,15041629645710339115]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","num":23,"id":{"name":"bytes","disambiguator":[9780114067736916964,9036698811042131691]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","num":24,"id":{"name":"memchr","disambiguator":[6265665653953799004,9085480063319214157]}},{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","num":25,"id":{"name":"futures_sink","disambiguator":[4842142731676998583,2203247429240510391]}}],"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":0,"byte_end":5436,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261316,"byte_end":11261326,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261365,"byte_end":11261372,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261411,"byte_end":11261418,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261580,"byte_end":11261586,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261588,"byte_end":11261599,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261647,"byte_end":11261657,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261706,"byte_end":11261717,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261779,"byte_end":11261799,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261801,"byte_end":11261826,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261875,"byte_end":11261885,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261887,"byte_end":11261902,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\mod.rs","byte_start":6572,"byte_end":6589,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\mod.rs","byte_start":6591,"byte_end":6616,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\mod.rs","byte_start":6699,"byte_end":6712,"line_start":9,"line_end":9,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\mod.rs","byte_start":6755,"byte_end":6772,"line_start":12,"line_end":12,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":11}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":0,"byte_end":5436,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":9},{"krate":0,"index":300},{"krate":0,"index":11},{"krate":0,"index":228},{"krate":0,"index":275}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":416,"byte_end":453,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":454,"byte_end":457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":458,"byte_end":515,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":516,"byte_end":580,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":581,"byte_end":656,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":657,"byte_end":660,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":661,"byte_end":697,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\cfg.rs","byte_start":5512,"byte_end":5537,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251044,"byte_end":11251097,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251098,"byte_end":11251101,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251102,"byte_end":11251177,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251178,"byte_end":11251243,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251244,"byte_end":11251247,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251248,"byte_end":11251328,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251329,"byte_end":11251404,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251405,"byte_end":11251453,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251454,"byte_end":11251457,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251458,"byte_end":11251481,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251482,"byte_end":11251485,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251486,"byte_end":11251565,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251566,"byte_end":11251645,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251646,"byte_end":11251717,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251718,"byte_end":11251788,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251789,"byte_end":11251867,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251868,"byte_end":11251944,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251945,"byte_end":11251978,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251979,"byte_end":11251982,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11251983,"byte_end":11252063,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252064,"byte_end":11252144,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252145,"byte_end":11252195,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252196,"byte_end":11252199,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252200,"byte_end":11252251,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252252,"byte_end":11252301,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252302,"byte_end":11252353,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252354,"byte_end":11252357,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252358,"byte_end":11252423,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252424,"byte_end":11252427,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252428,"byte_end":11252505,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252506,"byte_end":11252547,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252548,"byte_end":11252551,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252552,"byte_end":11252632,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252633,"byte_end":11252712,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252713,"byte_end":11252791,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252792,"byte_end":11252871,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252872,"byte_end":11252886,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252887,"byte_end":11252890,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252891,"byte_end":11252970,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11252971,"byte_end":11253050,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253051,"byte_end":11253068,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253069,"byte_end":11253072,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253073,"byte_end":11253150,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253151,"byte_end":11253230,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253231,"byte_end":11253308,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253309,"byte_end":11253379,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253380,"byte_end":11253429,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253430,"byte_end":11253433,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253434,"byte_end":11253447,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253448,"byte_end":11253480,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253481,"byte_end":11253548,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253549,"byte_end":11253663,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253664,"byte_end":11253701,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253702,"byte_end":11253763,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253764,"byte_end":11253813,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253814,"byte_end":11253817,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253818,"byte_end":11253859,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253860,"byte_end":11253870,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253871,"byte_end":11253955,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11253956,"byte_end":11254012,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254013,"byte_end":11254016,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254017,"byte_end":11254038,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254039,"byte_end":11254106,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254107,"byte_end":11254135,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254136,"byte_end":11254149,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254150,"byte_end":11254168,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254169,"byte_end":11254178,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254179,"byte_end":11254182,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254183,"byte_end":11254242,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254243,"byte_end":11254267,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254268,"byte_end":11254277,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254278,"byte_end":11254283,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254284,"byte_end":11254292,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254293,"byte_end":11254300,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254301,"byte_end":11254375,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254376,"byte_end":11254379,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254380,"byte_end":11254402,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254403,"byte_end":11254406,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254407,"byte_end":11254484,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254485,"byte_end":11254561,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254562,"byte_end":11254641,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254642,"byte_end":11254696,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254697,"byte_end":11254700,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254701,"byte_end":11254745,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254746,"byte_end":11254753,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254754,"byte_end":11254789,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254790,"byte_end":11254821,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254822,"byte_end":11254825,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254826,"byte_end":11254855,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254856,"byte_end":11254859,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254860,"byte_end":11254899,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254900,"byte_end":11254903,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254904,"byte_end":11254942,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254943,"byte_end":11254970,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11254971,"byte_end":11255007,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255008,"byte_end":11255011,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255012,"byte_end":11255030,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255031,"byte_end":11255053,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255054,"byte_end":11255084,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255085,"byte_end":11255139,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255140,"byte_end":11255170,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255171,"byte_end":11255228,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255229,"byte_end":11255261,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255262,"byte_end":11255275,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255276,"byte_end":11255279,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255280,"byte_end":11255314,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255315,"byte_end":11255359,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255360,"byte_end":11255412,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255413,"byte_end":11255480,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255481,"byte_end":11255484,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255485,"byte_end":11255559,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255560,"byte_end":11255626,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255627,"byte_end":11255656,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255657,"byte_end":11255704,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255705,"byte_end":11255757,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255758,"byte_end":11255829,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255830,"byte_end":11255849,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255850,"byte_end":11255863,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255864,"byte_end":11255867,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255868,"byte_end":11255907,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255908,"byte_end":11255963,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255964,"byte_end":11255982,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11255983,"byte_end":11256059,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256060,"byte_end":11256126,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256127,"byte_end":11256179,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256180,"byte_end":11256183,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256184,"byte_end":11256264,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256265,"byte_end":11256290,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256291,"byte_end":11256323,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256324,"byte_end":11256337,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256338,"byte_end":11256341,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256342,"byte_end":11256414,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256415,"byte_end":11256441,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256442,"byte_end":11256493,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256494,"byte_end":11256530,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256531,"byte_end":11256534,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256535,"byte_end":11256613,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256614,"byte_end":11256657,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256658,"byte_end":11256705,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256706,"byte_end":11256742,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256743,"byte_end":11256787,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256788,"byte_end":11256844,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256845,"byte_end":11256893,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256894,"byte_end":11256916,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256917,"byte_end":11256935,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256936,"byte_end":11256949,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256950,"byte_end":11256959,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256960,"byte_end":11256965,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256966,"byte_end":11256973,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256974,"byte_end":11256977,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11256978,"byte_end":11257001,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257002,"byte_end":11257005,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257006,"byte_end":11257084,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257085,"byte_end":11257158,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257159,"byte_end":11257235,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257236,"byte_end":11257316,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257317,"byte_end":11257333,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257334,"byte_end":11257337,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257338,"byte_end":11257418,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257419,"byte_end":11257498,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257499,"byte_end":11257579,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257580,"byte_end":11257652,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257653,"byte_end":11257656,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257657,"byte_end":11257734,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257735,"byte_end":11257813,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257814,"byte_end":11257887,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257888,"byte_end":11257954,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257955,"byte_end":11257958,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257959,"byte_end":11257972,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11257973,"byte_end":11258006,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258007,"byte_end":11258041,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258042,"byte_end":11258079,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258080,"byte_end":11258147,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258148,"byte_end":11258183,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258184,"byte_end":11258245,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258246,"byte_end":11258292,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258293,"byte_end":11258354,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258355,"byte_end":11258358,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258359,"byte_end":11258387,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258388,"byte_end":11258391,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258392,"byte_end":11258433,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258434,"byte_end":11258444,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258445,"byte_end":11258469,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258470,"byte_end":11258544,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258545,"byte_end":11258587,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258588,"byte_end":11258602,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258603,"byte_end":11258660,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258661,"byte_end":11258710,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258711,"byte_end":11258725,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258726,"byte_end":11258763,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258764,"byte_end":11258815,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258816,"byte_end":11258862,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258863,"byte_end":11258893,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258894,"byte_end":11258908,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258909,"byte_end":11258918,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258919,"byte_end":11258924,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258925,"byte_end":11258932,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258933,"byte_end":11258940,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11258941,"byte_end":11259016,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259017,"byte_end":11259090,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259091,"byte_end":11259133,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259134,"byte_end":11259137,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259138,"byte_end":11259160,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259161,"byte_end":11259164,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259165,"byte_end":11259242,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259243,"byte_end":11259319,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259320,"byte_end":11259396,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259397,"byte_end":11259420,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259421,"byte_end":11259424,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259425,"byte_end":11259470,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259471,"byte_end":11259478,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259479,"byte_end":11259514,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259515,"byte_end":11259539,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259540,"byte_end":11259543,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259544,"byte_end":11259573,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259574,"byte_end":11259577,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259578,"byte_end":11259617,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259618,"byte_end":11259621,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259622,"byte_end":11259668,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259669,"byte_end":11259705,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259706,"byte_end":11259709,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259710,"byte_end":11259801,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259802,"byte_end":11259876,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259877,"byte_end":11259899,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259900,"byte_end":11259933,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259934,"byte_end":11259981,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11259982,"byte_end":11260034,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260035,"byte_end":11260110,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260111,"byte_end":11260130,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260131,"byte_end":11260144,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260145,"byte_end":11260148,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260149,"byte_end":11260201,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260202,"byte_end":11260279,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260280,"byte_end":11260344,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260345,"byte_end":11260348,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260349,"byte_end":11260392,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260393,"byte_end":11260433,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260434,"byte_end":11260437,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260438,"byte_end":11260495,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260496,"byte_end":11260542,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260543,"byte_end":11260594,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260595,"byte_end":11260613,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260614,"byte_end":11260623,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260624,"byte_end":11260629,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260630,"byte_end":11260637,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260638,"byte_end":11260641,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260642,"byte_end":11260681,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260682,"byte_end":11260723,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260724,"byte_end":11260760,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260761,"byte_end":11260793,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260794,"byte_end":11260890,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260891,"byte_end":11260942,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260943,"byte_end":11260996,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11260997,"byte_end":11261040,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261041,"byte_end":11261085,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261086,"byte_end":11261134,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261135,"byte_end":11261183,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261184,"byte_end":11261230,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261231,"byte_end":11261270,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263188,"byte_end":11263198,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262031,"byte_end":11262116,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262117,"byte_end":11262120,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262121,"byte_end":11262159,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262160,"byte_end":11262198,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262199,"byte_end":11262202,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262203,"byte_end":11262216,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262217,"byte_end":11262220,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262221,"byte_end":11262302,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262303,"byte_end":11262306,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262307,"byte_end":11262346,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262347,"byte_end":11262380,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262381,"byte_end":11262410,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262411,"byte_end":11262414,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262415,"byte_end":11262422,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262423,"byte_end":11262441,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262442,"byte_end":11262472,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262473,"byte_end":11262497,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262498,"byte_end":11262505,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262506,"byte_end":11262535,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262536,"byte_end":11262588,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262589,"byte_end":11262592,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262593,"byte_end":11262611,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262612,"byte_end":11262629,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262630,"byte_end":11262710,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262711,"byte_end":11262745,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262746,"byte_end":11262799,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262800,"byte_end":11262811,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262812,"byte_end":11262819,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262820,"byte_end":11262825,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262826,"byte_end":11262873,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262874,"byte_end":11262927,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262928,"byte_end":11262986,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11262987,"byte_end":11263066,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263067,"byte_end":11263079,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263080,"byte_end":11263087,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263088,"byte_end":11263095,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263096,"byte_end":11263099,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263300,"byte_end":11263303,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263227,"byte_end":11263288,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264615,"byte_end":11264622,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264018,"byte_end":11264053,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264054,"byte_end":11264057,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264058,"byte_end":11264127,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264128,"byte_end":11264207,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264208,"byte_end":11264280,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264281,"byte_end":11264305,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264306,"byte_end":11264309,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264310,"byte_end":11264378,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264379,"byte_end":11264456,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264457,"byte_end":11264518,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264519,"byte_end":11264522,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264523,"byte_end":11264559,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264560,"byte_end":11264604,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264670,"byte_end":11264674,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264629,"byte_end":11264660,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265440,"byte_end":11265445,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264681,"byte_end":11264733,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264738,"byte_end":11264741,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264746,"byte_end":11264815,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264820,"byte_end":11264890,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264895,"byte_end":11264941,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264946,"byte_end":11264949,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11264954,"byte_end":11265030,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265035,"byte_end":11265110,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265115,"byte_end":11265190,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265195,"byte_end":11265235,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265240,"byte_end":11265243,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265248,"byte_end":11265322,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265327,"byte_end":11265373,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265378,"byte_end":11265381,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265386,"byte_end":11265430,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268381,"byte_end":11268387,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265469,"byte_end":11265534,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265539,"byte_end":11265542,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265547,"byte_end":11265621,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265626,"byte_end":11265698,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265703,"byte_end":11265776,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265781,"byte_end":11265824,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265829,"byte_end":11265832,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265837,"byte_end":11265910,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265915,"byte_end":11265978,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11265983,"byte_end":11266058,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266063,"byte_end":11266138,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266143,"byte_end":11266166,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266171,"byte_end":11266174,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266179,"byte_end":11266251,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266256,"byte_end":11266330,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266335,"byte_end":11266405,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266410,"byte_end":11266413,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266418,"byte_end":11266486,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266491,"byte_end":11266562,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266567,"byte_end":11266647,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266652,"byte_end":11266664,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266669,"byte_end":11266672,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266677,"byte_end":11266747,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266752,"byte_end":11266827,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266832,"byte_end":11266869,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266874,"byte_end":11266877,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266882,"byte_end":11266918,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266923,"byte_end":11266967,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266972,"byte_end":11266975,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11266980,"byte_end":11267003,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267008,"byte_end":11267011,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267016,"byte_end":11267090,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267095,"byte_end":11267169,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267174,"byte_end":11267227,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267232,"byte_end":11267235,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267240,"byte_end":11267311,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267316,"byte_end":11267386,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267391,"byte_end":11267407,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267412,"byte_end":11267415,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267420,"byte_end":11267433,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267438,"byte_end":11267456,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267461,"byte_end":11267466,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267471,"byte_end":11267497,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267502,"byte_end":11267539,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267544,"byte_end":11267549,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267554,"byte_end":11267575,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267580,"byte_end":11267585,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267590,"byte_end":11267620,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267625,"byte_end":11267639,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267644,"byte_end":11267675,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267680,"byte_end":11267713,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267718,"byte_end":11267721,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267726,"byte_end":11267819,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267824,"byte_end":11267842,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267847,"byte_end":11267850,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267855,"byte_end":11267927,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267932,"byte_end":11267992,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11267997,"byte_end":11268049,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268054,"byte_end":11268116,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268121,"byte_end":11268188,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268193,"byte_end":11268196,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268201,"byte_end":11268229,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268234,"byte_end":11268243,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268248,"byte_end":11268253,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268258,"byte_end":11268265,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268270,"byte_end":11268273,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268278,"byte_end":11268347,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268352,"byte_end":11268373,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11269246,"byte_end":11269256,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268468,"byte_end":11268540,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268545,"byte_end":11268594,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268599,"byte_end":11268602,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268607,"byte_end":11268675,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268680,"byte_end":11268747,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268752,"byte_end":11268820,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268825,"byte_end":11268873,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268878,"byte_end":11268881,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268886,"byte_end":11268954,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11268959,"byte_end":11269034,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11269039,"byte_end":11269114,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11269119,"byte_end":11269191,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11269196,"byte_end":11269238,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270864,"byte_end":11270870,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11269674,"byte_end":11269754,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11269759,"byte_end":11269835,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11269840,"byte_end":11269843,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11269848,"byte_end":11269923,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11269928,"byte_end":11269998,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270003,"byte_end":11270074,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270079,"byte_end":11270151,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270156,"byte_end":11270214,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270219,"byte_end":11270222,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270227,"byte_end":11270296,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270301,"byte_end":11270376,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270381,"byte_end":11270457,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270462,"byte_end":11270484,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270489,"byte_end":11270492,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270497,"byte_end":11270570,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270575,"byte_end":11270648,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270653,"byte_end":11270729,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270734,"byte_end":11270737,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270742,"byte_end":11270778,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270783,"byte_end":11270815,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\decoder.rs","byte_start":11270820,"byte_end":11270856,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271204,"byte_end":11271211,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271049,"byte_end":11271121,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271122,"byte_end":11271142,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271143,"byte_end":11271146,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271147,"byte_end":11271193,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271476,"byte_end":11271481,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271224,"byte_end":11271256,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271261,"byte_end":11271264,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271269,"byte_end":11271346,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271351,"byte_end":11271407,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271412,"byte_end":11271415,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271420,"byte_end":11271466,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271832,"byte_end":11271838,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271505,"byte_end":11271550,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271555,"byte_end":11271558,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271563,"byte_end":11271637,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271642,"byte_end":11271722,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271727,"byte_end":11271765,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271770,"byte_end":11271773,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\encoder.rs","byte_start":11271778,"byte_end":11271824,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279019,"byte_end":11279025,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":958}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280508,"byte_end":11280511,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279167,"byte_end":11279247,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279252,"byte_end":11279333,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279338,"byte_end":11279341,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279346,"byte_end":11279421,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279426,"byte_end":11279496,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279501,"byte_end":11279570,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279575,"byte_end":11279647,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279652,"byte_end":11279710,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279715,"byte_end":11279718,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279723,"byte_end":11279794,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279799,"byte_end":11279876,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279881,"byte_end":11279957,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279962,"byte_end":11279984,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279989,"byte_end":11279992,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279997,"byte_end":11280070,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280075,"byte_end":11280148,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280153,"byte_end":11280229,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280234,"byte_end":11280237,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280242,"byte_end":11280278,"line_start":55,"line_end":55,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280283,"byte_end":11280315,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280320,"byte_end":11280357,"line_start":57,"line_end":57,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280362,"byte_end":11280400,"line_start":58,"line_end":58,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280405,"byte_end":11280496,"line_start":59,"line_end":59,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282119,"byte_end":11282132,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280724,"byte_end":11280804,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280809,"byte_end":11280890,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280895,"byte_end":11280944,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280949,"byte_end":11280952,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11280957,"byte_end":11281032,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281037,"byte_end":11281107,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281112,"byte_end":11281181,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281186,"byte_end":11281258,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281263,"byte_end":11281321,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281326,"byte_end":11281329,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281334,"byte_end":11281405,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281410,"byte_end":11281487,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281492,"byte_end":11281568,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281573,"byte_end":11281595,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281600,"byte_end":11281603,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281608,"byte_end":11281681,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281686,"byte_end":11281759,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281764,"byte_end":11281840,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281845,"byte_end":11281848,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281853,"byte_end":11281889,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281894,"byte_end":11281926,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281931,"byte_end":11281968,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11281973,"byte_end":11282011,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282016,"byte_end":11282107,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284235,"byte_end":11284245,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282658,"byte_end":11282738,"line_start":113,"line_end":113,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282743,"byte_end":11282824,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282829,"byte_end":11282832,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282837,"byte_end":11282912,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282917,"byte_end":11282987,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282992,"byte_end":11283063,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283068,"byte_end":11283140,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283145,"byte_end":11283203,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283208,"byte_end":11283211,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283216,"byte_end":11283287,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283292,"byte_end":11283369,"line_start":123,"line_end":123,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283374,"byte_end":11283450,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283455,"byte_end":11283477,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283482,"byte_end":11283485,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283490,"byte_end":11283569,"line_start":127,"line_end":127,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283574,"byte_end":11283651,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283656,"byte_end":11283659,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283664,"byte_end":11283737,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283742,"byte_end":11283815,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283820,"byte_end":11283896,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283901,"byte_end":11283904,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283909,"byte_end":11283945,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283950,"byte_end":11283982,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11283987,"byte_end":11284025,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284030,"byte_end":11284068,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284073,"byte_end":11284127,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284132,"byte_end":11284223,"line_start":139,"line_end":139,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284880,"byte_end":11284887,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284597,"byte_end":11284660,"line_start":153,"line_end":153,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284665,"byte_end":11284678,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284683,"byte_end":11284686,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284691,"byte_end":11284766,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284771,"byte_end":11284841,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284846,"byte_end":11284868,"line_start":158,"line_end":158,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285231,"byte_end":11285238,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11284940,"byte_end":11285011,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285016,"byte_end":11285029,"line_start":164,"line_end":164,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285034,"byte_end":11285037,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285042,"byte_end":11285117,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285122,"byte_end":11285192,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285197,"byte_end":11285219,"line_start":168,"line_end":168,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285601,"byte_end":11285612,"line_start":179,"line_end":179,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285303,"byte_end":11285381,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285386,"byte_end":11285399,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285404,"byte_end":11285407,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285412,"byte_end":11285487,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285492,"byte_end":11285562,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285567,"byte_end":11285589,"line_start":178,"line_end":178,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285959,"byte_end":11285964,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285708,"byte_end":11285766,"line_start":183,"line_end":183,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285771,"byte_end":11285784,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285789,"byte_end":11285792,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285797,"byte_end":11285871,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11285876,"byte_end":11285947,"line_start":187,"line_end":187,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286276,"byte_end":11286285,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286017,"byte_end":11286083,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286088,"byte_end":11286101,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286106,"byte_end":11286109,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286114,"byte_end":11286188,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286193,"byte_end":11286264,"line_start":196,"line_end":196,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286405,"byte_end":11286416,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286350,"byte_end":11286393,"line_start":201,"line_end":201,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286551,"byte_end":11286566,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286488,"byte_end":11286539,"line_start":206,"line_end":206,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286706,"byte_end":11286718,"line_start":212,"line_end":212,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286650,"byte_end":11286694,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286855,"byte_end":11286871,"line_start":217,"line_end":217,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286791,"byte_end":11286843,"line_start":216,"line_end":216,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287221,"byte_end":11287231,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11286956,"byte_end":11287019,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287024,"byte_end":11287027,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287032,"byte_end":11287107,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287112,"byte_end":11287182,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287187,"byte_end":11287209,"line_start":225,"line_end":225,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287603,"byte_end":11287613,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287281,"byte_end":11287355,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287360,"byte_end":11287401,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287406,"byte_end":11287409,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287414,"byte_end":11287489,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287494,"byte_end":11287564,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287569,"byte_end":11287591,"line_start":235,"line_end":235,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289587,"byte_end":11289598,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289272,"byte_end":11289343,"line_start":299,"line_end":299,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289344,"byte_end":11289416,"line_start":300,"line_end":300,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289417,"byte_end":11289477,"line_start":301,"line_end":301,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289478,"byte_end":11289481,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289482,"byte_end":11289518,"line_start":303,"line_end":303,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289536,"byte_end":11289575,"line_start":305,"line_end":305,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289684,"byte_end":11289686,"line_start":308,"line_end":308,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289611,"byte_end":11289675,"line_start":307,"line_end":307,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289718,"byte_end":11289723,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289696,"byte_end":11289709,"line_start":310,"line_end":310,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289788,"byte_end":11289796,"line_start":314,"line_end":314,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289733,"byte_end":11289779,"line_start":313,"line_end":313,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289883,"byte_end":11289892,"line_start":317,"line_end":317,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289813,"byte_end":11289874,"line_start":316,"line_end":316,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11290125,"byte_end":11290128,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11290073,"byte_end":11290113,"line_start":325,"line_end":325,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11290857,"byte_end":11290867,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":917}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291118,"byte_end":11291121,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291050,"byte_end":11291106,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291469,"byte_end":11291482,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291353,"byte_end":11291435,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291440,"byte_end":11291457,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292196,"byte_end":11292203,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291909,"byte_end":11291972,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291977,"byte_end":11291994,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291999,"byte_end":11292002,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292007,"byte_end":11292082,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292087,"byte_end":11292157,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292162,"byte_end":11292184,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292551,"byte_end":11292558,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292256,"byte_end":11292327,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292332,"byte_end":11292349,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292354,"byte_end":11292357,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292362,"byte_end":11292437,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292442,"byte_end":11292512,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292517,"byte_end":11292539,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292925,"byte_end":11292936,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292623,"byte_end":11292701,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292706,"byte_end":11292723,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292728,"byte_end":11292731,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292736,"byte_end":11292811,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292816,"byte_end":11292886,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11292891,"byte_end":11292913,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293301,"byte_end":11293311,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293032,"byte_end":11293099,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293104,"byte_end":11293107,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293112,"byte_end":11293187,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293192,"byte_end":11293262,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293267,"byte_end":11293289,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293423,"byte_end":11293430,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293361,"byte_end":11293411,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293553,"byte_end":11293564,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293483,"byte_end":11293541,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293684,"byte_end":11293695,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293629,"byte_end":11293672,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293825,"byte_end":11293840,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293762,"byte_end":11293813,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11295941,"byte_end":11295952,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":876}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296159,"byte_end":11296162,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296090,"byte_end":11296147,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296720,"byte_end":11296727,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296432,"byte_end":11296495,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296500,"byte_end":11296518,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296523,"byte_end":11296526,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296531,"byte_end":11296606,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296611,"byte_end":11296681,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296686,"byte_end":11296708,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297076,"byte_end":11297083,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296780,"byte_end":11296851,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296856,"byte_end":11296874,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296879,"byte_end":11296882,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296887,"byte_end":11296962,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296967,"byte_end":11297037,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297042,"byte_end":11297064,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297451,"byte_end":11297462,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297148,"byte_end":11297226,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297231,"byte_end":11297249,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297254,"byte_end":11297257,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297262,"byte_end":11297337,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297342,"byte_end":11297412,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297417,"byte_end":11297439,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297828,"byte_end":11297838,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297558,"byte_end":11297626,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297631,"byte_end":11297634,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297639,"byte_end":11297714,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297719,"byte_end":11297789,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297794,"byte_end":11297816,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297950,"byte_end":11297957,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11297888,"byte_end":11297938,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11298080,"byte_end":11298091,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11298010,"byte_end":11298068,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11298212,"byte_end":11298224,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11298156,"byte_end":11298200,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11298355,"byte_end":11298371,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11298291,"byte_end":11298343,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":727},{"krate":0,"index":737},{"krate":0,"index":735},{"krate":0,"index":734},{"krate":0,"index":598},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":753},{"krate":0,"index":751},{"krate":0,"index":750},{"krate":0,"index":600},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11299898,"byte_end":11299950,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11299951,"byte_end":11299954,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11299955,"byte_end":11300025,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300026,"byte_end":11300084,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300085,"byte_end":11300157,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300158,"byte_end":11300228,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300229,"byte_end":11300296,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300297,"byte_end":11300300,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300301,"byte_end":11300322,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300323,"byte_end":11300326,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300327,"byte_end":11300402,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300403,"byte_end":11300474,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300475,"byte_end":11300546,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300547,"byte_end":11300617,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300618,"byte_end":11300658,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300659,"byte_end":11300662,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300663,"byte_end":11300670,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300671,"byte_end":11300714,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300715,"byte_end":11300773,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300774,"byte_end":11300777,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300778,"byte_end":11300833,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300834,"byte_end":11300876,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300877,"byte_end":11300882,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300883,"byte_end":11300935,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300936,"byte_end":11300941,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300942,"byte_end":11300964,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300965,"byte_end":11300972,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300973,"byte_end":11300976,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11300977,"byte_end":11301049,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301050,"byte_end":11301121,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301122,"byte_end":11301141,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301142,"byte_end":11301145,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301146,"byte_end":11301157,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301158,"byte_end":11301207,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301208,"byte_end":11301257,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301258,"byte_end":11301307,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301308,"byte_end":11301315,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301316,"byte_end":11301319,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301320,"byte_end":11301358,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301359,"byte_end":11301362,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301363,"byte_end":11301370,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301371,"byte_end":11301414,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301415,"byte_end":11301473,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301474,"byte_end":11301477,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301478,"byte_end":11301503,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301504,"byte_end":11301525,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301526,"byte_end":11301529,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301530,"byte_end":11301606,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301607,"byte_end":11301616,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301617,"byte_end":11301659,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301660,"byte_end":11301665,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301666,"byte_end":11301739,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301740,"byte_end":11301787,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301788,"byte_end":11301791,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301792,"byte_end":11301829,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301830,"byte_end":11301844,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301845,"byte_end":11301850,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301851,"byte_end":11301858,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301859,"byte_end":11301862,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301863,"byte_end":11301905,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301906,"byte_end":11301909,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301910,"byte_end":11301921,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301922,"byte_end":11301961,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11301962,"byte_end":11302001,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302002,"byte_end":11302041,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302042,"byte_end":11302049,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302050,"byte_end":11302053,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302054,"byte_end":11302068,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302069,"byte_end":11302072,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302073,"byte_end":11302148,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302149,"byte_end":11302222,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302223,"byte_end":11302289,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302290,"byte_end":11302359,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302360,"byte_end":11302425,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302426,"byte_end":11302429,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302430,"byte_end":11302446,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302447,"byte_end":11302450,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302451,"byte_end":11302527,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302528,"byte_end":11302569,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302570,"byte_end":11302573,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302574,"byte_end":11302581,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302582,"byte_end":11302613,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302614,"byte_end":11302664,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302665,"byte_end":11302706,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302707,"byte_end":11302742,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302743,"byte_end":11302791,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302792,"byte_end":11302823,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302824,"byte_end":11302872,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302873,"byte_end":11302922,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302923,"byte_end":11302945,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302946,"byte_end":11302953,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302954,"byte_end":11302976,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302977,"byte_end":11302984,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302985,"byte_end":11302988,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11302989,"byte_end":11303037,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303038,"byte_end":11303041,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303042,"byte_end":11303053,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303054,"byte_end":11303106,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303107,"byte_end":11303172,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303173,"byte_end":11303238,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303239,"byte_end":11303304,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303305,"byte_end":11303312,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303313,"byte_end":11303316,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303317,"byte_end":11303393,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303394,"byte_end":11303468,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303469,"byte_end":11303541,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303542,"byte_end":11303618,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303619,"byte_end":11303661,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303662,"byte_end":11303665,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303666,"byte_end":11303682,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303683,"byte_end":11303686,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303687,"byte_end":11303762,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303763,"byte_end":11303804,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303805,"byte_end":11303808,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303809,"byte_end":11303816,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303817,"byte_end":11303848,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303849,"byte_end":11303899,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303900,"byte_end":11303941,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303942,"byte_end":11303977,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11303978,"byte_end":11304026,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304027,"byte_end":11304058,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304059,"byte_end":11304107,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304108,"byte_end":11304167,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304168,"byte_end":11304190,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304191,"byte_end":11304198,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304199,"byte_end":11304221,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304222,"byte_end":11304229,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304230,"byte_end":11304233,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304234,"byte_end":11304282,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304283,"byte_end":11304286,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304287,"byte_end":11304298,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304299,"byte_end":11304348,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304349,"byte_end":11304403,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304404,"byte_end":11304458,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304459,"byte_end":11304513,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304514,"byte_end":11304521,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304522,"byte_end":11304525,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304526,"byte_end":11304599,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304600,"byte_end":11304667,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304668,"byte_end":11304671,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304672,"byte_end":11304688,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304689,"byte_end":11304692,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304693,"byte_end":11304769,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304770,"byte_end":11304842,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304843,"byte_end":11304882,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304883,"byte_end":11304886,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304887,"byte_end":11304894,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304895,"byte_end":11304926,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304927,"byte_end":11304977,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11304978,"byte_end":11305019,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305020,"byte_end":11305055,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305056,"byte_end":11305104,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305105,"byte_end":11305136,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305137,"byte_end":11305184,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305185,"byte_end":11305205,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305206,"byte_end":11305228,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305229,"byte_end":11305236,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305237,"byte_end":11305259,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305260,"byte_end":11305267,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305268,"byte_end":11305271,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305272,"byte_end":11305320,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305321,"byte_end":11305324,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305325,"byte_end":11305336,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305337,"byte_end":11305389,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305390,"byte_end":11305455,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305456,"byte_end":11305521,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305522,"byte_end":11305587,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305588,"byte_end":11305595,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305596,"byte_end":11305599,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305600,"byte_end":11305672,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305673,"byte_end":11305748,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305749,"byte_end":11305821,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305822,"byte_end":11305898,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305899,"byte_end":11305972,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305973,"byte_end":11305976,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305977,"byte_end":11305993,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305994,"byte_end":11305997,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11305998,"byte_end":11306072,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306073,"byte_end":11306140,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306141,"byte_end":11306144,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306145,"byte_end":11306152,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306153,"byte_end":11306184,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306185,"byte_end":11306235,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306236,"byte_end":11306277,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306278,"byte_end":11306313,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306314,"byte_end":11306362,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306363,"byte_end":11306394,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306395,"byte_end":11306443,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306444,"byte_end":11306464,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306465,"byte_end":11306487,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306488,"byte_end":11306495,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306496,"byte_end":11306518,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306519,"byte_end":11306526,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306527,"byte_end":11306530,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306531,"byte_end":11306579,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306580,"byte_end":11306583,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306584,"byte_end":11306595,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306596,"byte_end":11306622,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306623,"byte_end":11306668,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306669,"byte_end":11306714,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306715,"byte_end":11306760,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306761,"byte_end":11306764,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306765,"byte_end":11306793,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306794,"byte_end":11306839,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306840,"byte_end":11306885,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306886,"byte_end":11306931,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306932,"byte_end":11306939,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306940,"byte_end":11306943,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11306944,"byte_end":11307016,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307017,"byte_end":11307093,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307094,"byte_end":11307164,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307165,"byte_end":11307234,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307235,"byte_end":11307272,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307273,"byte_end":11307276,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307277,"byte_end":11307351,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307352,"byte_end":11307406,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307407,"byte_end":11307410,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307411,"byte_end":11307427,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307428,"byte_end":11307431,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307432,"byte_end":11307505,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307506,"byte_end":11307582,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307583,"byte_end":11307657,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307658,"byte_end":11307671,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307672,"byte_end":11307675,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307676,"byte_end":11307683,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307684,"byte_end":11307715,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307716,"byte_end":11307766,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307767,"byte_end":11307808,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307809,"byte_end":11307844,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307845,"byte_end":11307894,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307895,"byte_end":11307926,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307927,"byte_end":11307975,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11307976,"byte_end":11308020,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308021,"byte_end":11308043,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308044,"byte_end":11308051,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308052,"byte_end":11308074,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308075,"byte_end":11308082,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308083,"byte_end":11308086,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308087,"byte_end":11308135,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308136,"byte_end":11308139,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308140,"byte_end":11308151,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308152,"byte_end":11308178,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308179,"byte_end":11308229,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308230,"byte_end":11308280,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308281,"byte_end":11308331,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308332,"byte_end":11308335,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308336,"byte_end":11308356,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308357,"byte_end":11308387,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308388,"byte_end":11308418,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308419,"byte_end":11308449,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308450,"byte_end":11308457,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308458,"byte_end":11308461,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308462,"byte_end":11308535,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308536,"byte_end":11308611,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308612,"byte_end":11308684,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308685,"byte_end":11308723,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308724,"byte_end":11308727,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308728,"byte_end":11308802,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308803,"byte_end":11308879,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308880,"byte_end":11308953,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308954,"byte_end":11308982,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308983,"byte_end":11308986,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11308987,"byte_end":11309003,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309004,"byte_end":11309007,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309008,"byte_end":11309081,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309082,"byte_end":11309158,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309159,"byte_end":11309233,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309234,"byte_end":11309306,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309307,"byte_end":11309318,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309319,"byte_end":11309322,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309323,"byte_end":11309330,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309331,"byte_end":11309362,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309363,"byte_end":11309413,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309414,"byte_end":11309455,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309456,"byte_end":11309491,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309492,"byte_end":11309541,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309542,"byte_end":11309573,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309574,"byte_end":11309639,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309640,"byte_end":11309660,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309661,"byte_end":11309683,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309684,"byte_end":11309691,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309692,"byte_end":11309699,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309700,"byte_end":11309703,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309704,"byte_end":11309752,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309753,"byte_end":11309756,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309757,"byte_end":11309768,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309769,"byte_end":11309795,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309796,"byte_end":11309846,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309847,"byte_end":11309897,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309898,"byte_end":11309948,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309949,"byte_end":11309952,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309953,"byte_end":11309973,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11309974,"byte_end":11310004,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310005,"byte_end":11310035,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310036,"byte_end":11310066,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310067,"byte_end":11310074,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310075,"byte_end":11310078,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310079,"byte_end":11310152,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310153,"byte_end":11310227,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310228,"byte_end":11310302,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310303,"byte_end":11310376,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310377,"byte_end":11310453,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310454,"byte_end":11310487,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310488,"byte_end":11310491,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310492,"byte_end":11310508,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310509,"byte_end":11310512,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310513,"byte_end":11310587,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310588,"byte_end":11310655,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310656,"byte_end":11310659,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310660,"byte_end":11310667,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310668,"byte_end":11310699,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310700,"byte_end":11310750,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310751,"byte_end":11310792,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310793,"byte_end":11310828,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310829,"byte_end":11310877,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310878,"byte_end":11310909,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310910,"byte_end":11310957,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11310958,"byte_end":11311004,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311005,"byte_end":11311027,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311028,"byte_end":11311035,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311036,"byte_end":11311058,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311059,"byte_end":11311066,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311067,"byte_end":11311070,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311071,"byte_end":11311119,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311120,"byte_end":11311123,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311124,"byte_end":11311135,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311136,"byte_end":11311192,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311193,"byte_end":11311254,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311255,"byte_end":11311316,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311317,"byte_end":11311378,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311379,"byte_end":11311386,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311387,"byte_end":11311390,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311391,"byte_end":11311465,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311466,"byte_end":11311486,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311487,"byte_end":11311490,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311491,"byte_end":11311505,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311506,"byte_end":11311509,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311510,"byte_end":11311585,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311586,"byte_end":11311658,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311659,"byte_end":11311727,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311728,"byte_end":11311804,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311805,"byte_end":11311846,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311847,"byte_end":11311850,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311851,"byte_end":11311921,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311922,"byte_end":11311940,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311941,"byte_end":11311944,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311945,"byte_end":11311952,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311953,"byte_end":11311985,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11311986,"byte_end":11312036,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312037,"byte_end":11312081,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312082,"byte_end":11312095,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312096,"byte_end":11312131,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312132,"byte_end":11312163,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312164,"byte_end":11312187,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312188,"byte_end":11312195,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312196,"byte_end":11312218,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312219,"byte_end":11312226,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312227,"byte_end":11312230,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312231,"byte_end":11312281,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312282,"byte_end":11312285,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312286,"byte_end":11312297,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312298,"byte_end":11312331,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312332,"byte_end":11312365,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312366,"byte_end":11312399,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312400,"byte_end":11312407,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312408,"byte_end":11312411,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312412,"byte_end":11312481,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312482,"byte_end":11312519,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312520,"byte_end":11312559,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312560,"byte_end":11312605,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312606,"byte_end":11312653,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312654,"byte_end":11312684,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312685,"byte_end":11312718,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11313280,"byte_end":11313287,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11312962,"byte_end":11313017,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11313018,"byte_end":11313021,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11313022,"byte_end":11313097,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11313098,"byte_end":11313178,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11313179,"byte_end":11313238,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11313958,"byte_end":11313983,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":599}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11313873,"byte_end":11313946,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314328,"byte_end":11314348,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314004,"byte_end":11314078,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314079,"byte_end":11314082,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314083,"byte_end":11314162,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314163,"byte_end":11314206,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314207,"byte_end":11314210,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314211,"byte_end":11314264,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314265,"byte_end":11314268,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314269,"byte_end":11314299,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314692,"byte_end":11314695,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314601,"byte_end":11314680,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314922,"byte_end":11314929,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314819,"byte_end":11314894,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314899,"byte_end":11314910,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315151,"byte_end":11315167,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314979,"byte_end":11315020,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315025,"byte_end":11315028,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315033,"byte_end":11315106,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315111,"byte_end":11315139,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315588,"byte_end":11315608,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315232,"byte_end":11315266,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315271,"byte_end":11315274,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315279,"byte_end":11315349,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315354,"byte_end":11315429,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315434,"byte_end":11315506,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11315511,"byte_end":11315576,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320884,"byte_end":11320887,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320342,"byte_end":11320417,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320422,"byte_end":11320433,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320438,"byte_end":11320441,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320446,"byte_end":11320460,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320465,"byte_end":11320468,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320473,"byte_end":11320480,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320485,"byte_end":11320516,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320521,"byte_end":11320569,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320574,"byte_end":11320577,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320582,"byte_end":11320623,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320628,"byte_end":11320663,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320668,"byte_end":11320699,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320704,"byte_end":11320735,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320740,"byte_end":11320769,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320774,"byte_end":11320794,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320799,"byte_end":11320821,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320826,"byte_end":11320833,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320838,"byte_end":11320860,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320865,"byte_end":11320872,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322072,"byte_end":11322082,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321551,"byte_end":11321600,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321605,"byte_end":11321608,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321613,"byte_end":11321645,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321650,"byte_end":11321653,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321658,"byte_end":11321726,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321731,"byte_end":11321734,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321739,"byte_end":11321753,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321758,"byte_end":11321761,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321766,"byte_end":11321773,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321778,"byte_end":11321809,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321814,"byte_end":11321862,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321867,"byte_end":11321870,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321875,"byte_end":11321916,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321921,"byte_end":11321956,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321961,"byte_end":11321982,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11321987,"byte_end":11322009,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322014,"byte_end":11322021,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322026,"byte_end":11322048,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322053,"byte_end":11322060,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322714,"byte_end":11322727,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322181,"byte_end":11322233,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322238,"byte_end":11322241,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322246,"byte_end":11322284,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322289,"byte_end":11322292,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322297,"byte_end":11322365,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322370,"byte_end":11322373,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322378,"byte_end":11322392,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322397,"byte_end":11322400,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322405,"byte_end":11322412,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322417,"byte_end":11322448,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322453,"byte_end":11322501,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322506,"byte_end":11322509,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322514,"byte_end":11322555,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322560,"byte_end":11322595,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322600,"byte_end":11322624,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322629,"byte_end":11322651,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322656,"byte_end":11322663,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322668,"byte_end":11322690,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322695,"byte_end":11322702,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323360,"byte_end":11323373,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322827,"byte_end":11322879,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322884,"byte_end":11322887,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322892,"byte_end":11322930,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322935,"byte_end":11322938,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11322943,"byte_end":11323011,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323016,"byte_end":11323019,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323024,"byte_end":11323038,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323043,"byte_end":11323046,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323051,"byte_end":11323058,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323063,"byte_end":11323094,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323099,"byte_end":11323147,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323152,"byte_end":11323155,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323160,"byte_end":11323201,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323206,"byte_end":11323241,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323246,"byte_end":11323270,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323275,"byte_end":11323297,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323302,"byte_end":11323309,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323314,"byte_end":11323336,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323341,"byte_end":11323348,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324454,"byte_end":11324470,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323542,"byte_end":11323571,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323576,"byte_end":11323579,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323584,"byte_end":11323656,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323661,"byte_end":11323686,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323691,"byte_end":11323694,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323699,"byte_end":11323771,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323776,"byte_end":11323845,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323850,"byte_end":11323923,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323928,"byte_end":11323940,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323945,"byte_end":11323948,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11323953,"byte_end":11324028,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324033,"byte_end":11324094,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324099,"byte_end":11324102,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324107,"byte_end":11324121,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324126,"byte_end":11324129,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324134,"byte_end":11324141,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324146,"byte_end":11324177,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324182,"byte_end":11324230,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324235,"byte_end":11324238,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324243,"byte_end":11324284,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324289,"byte_end":11324324,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324329,"byte_end":11324364,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324369,"byte_end":11324391,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324396,"byte_end":11324403,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324408,"byte_end":11324430,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324435,"byte_end":11324442,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325131,"byte_end":11325150,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324567,"byte_end":11324630,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324635,"byte_end":11324638,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324643,"byte_end":11324694,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324699,"byte_end":11324702,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324707,"byte_end":11324775,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324780,"byte_end":11324783,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324788,"byte_end":11324802,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324807,"byte_end":11324810,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324815,"byte_end":11324822,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324827,"byte_end":11324858,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324863,"byte_end":11324911,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324916,"byte_end":11324919,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324924,"byte_end":11324965,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11324970,"byte_end":11325005,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325010,"byte_end":11325041,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325046,"byte_end":11325068,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325073,"byte_end":11325080,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325085,"byte_end":11325107,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325112,"byte_end":11325119,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325809,"byte_end":11325828,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325319,"byte_end":11325385,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325390,"byte_end":11325393,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325398,"byte_end":11325453,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325458,"byte_end":11325461,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325466,"byte_end":11325480,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325485,"byte_end":11325488,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325493,"byte_end":11325500,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325505,"byte_end":11325536,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325541,"byte_end":11325589,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325594,"byte_end":11325597,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325602,"byte_end":11325643,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325648,"byte_end":11325683,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325688,"byte_end":11325719,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325724,"byte_end":11325746,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325751,"byte_end":11325758,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325763,"byte_end":11325785,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325790,"byte_end":11325797,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326382,"byte_end":11326399,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11325931,"byte_end":11326004,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326009,"byte_end":11326027,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326032,"byte_end":11326035,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326040,"byte_end":11326054,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326059,"byte_end":11326062,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326067,"byte_end":11326074,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326079,"byte_end":11326110,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326115,"byte_end":11326163,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326168,"byte_end":11326171,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326176,"byte_end":11326217,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326222,"byte_end":11326257,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326262,"byte_end":11326292,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326297,"byte_end":11326319,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326324,"byte_end":11326331,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326336,"byte_end":11326358,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326363,"byte_end":11326370,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327049,"byte_end":11327057,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326500,"byte_end":11326563,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326568,"byte_end":11326571,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326576,"byte_end":11326637,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326642,"byte_end":11326645,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326650,"byte_end":11326704,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326709,"byte_end":11326712,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326717,"byte_end":11326731,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326736,"byte_end":11326739,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326744,"byte_end":11326751,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326756,"byte_end":11326787,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326792,"byte_end":11326840,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326845,"byte_end":11326848,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326853,"byte_end":11326894,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326899,"byte_end":11326934,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326939,"byte_end":11326959,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326964,"byte_end":11326986,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11326991,"byte_end":11326998,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327003,"byte_end":11327025,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327030,"byte_end":11327037,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327577,"byte_end":11327586,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327155,"byte_end":11327218,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327223,"byte_end":11327226,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327231,"byte_end":11327245,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327250,"byte_end":11327253,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327258,"byte_end":11327265,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327270,"byte_end":11327318,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327323,"byte_end":11327344,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327349,"byte_end":11327384,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327389,"byte_end":11327420,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327425,"byte_end":11327456,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327461,"byte_end":11327490,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327495,"byte_end":11327515,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327520,"byte_end":11327541,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327546,"byte_end":11327553,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327558,"byte_end":11327565,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328242,"byte_end":11328250,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327738,"byte_end":11327791,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327796,"byte_end":11327799,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327804,"byte_end":11327818,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327823,"byte_end":11327826,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327831,"byte_end":11327838,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327843,"byte_end":11327874,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327879,"byte_end":11327927,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327932,"byte_end":11327935,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327940,"byte_end":11327981,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11327986,"byte_end":11328021,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328026,"byte_end":11328057,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328062,"byte_end":11328093,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328098,"byte_end":11328127,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328132,"byte_end":11328152,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328157,"byte_end":11328179,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328184,"byte_end":11328191,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328196,"byte_end":11328218,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328223,"byte_end":11328230,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328823,"byte_end":11328832,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328414,"byte_end":11328468,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328473,"byte_end":11328476,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328481,"byte_end":11328495,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328500,"byte_end":11328503,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328508,"byte_end":11328515,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328520,"byte_end":11328552,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328557,"byte_end":11328607,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328612,"byte_end":11328656,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328661,"byte_end":11328696,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328701,"byte_end":11328732,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328737,"byte_end":11328760,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328765,"byte_end":11328772,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328777,"byte_end":11328799,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328804,"byte_end":11328811,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329441,"byte_end":11329451,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11328993,"byte_end":11329042,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329047,"byte_end":11329050,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329055,"byte_end":11329069,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329074,"byte_end":11329077,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329082,"byte_end":11329089,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329094,"byte_end":11329139,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329144,"byte_end":11329194,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329199,"byte_end":11329255,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329260,"byte_end":11329273,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329278,"byte_end":11329313,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329318,"byte_end":11329349,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329354,"byte_end":11329378,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329383,"byte_end":11329390,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329395,"byte_end":11329417,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329422,"byte_end":11329429,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11330830,"byte_end":11330840,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11330587,"byte_end":11330674,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11330675,"byte_end":11330678,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11330679,"byte_end":11330717,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11330718,"byte_end":11330756,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331940,"byte_end":11331943,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331521,"byte_end":11331581,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331586,"byte_end":11331589,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331594,"byte_end":11331604,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331609,"byte_end":11331612,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331617,"byte_end":11331689,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331694,"byte_end":11331767,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331772,"byte_end":11331839,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331844,"byte_end":11331847,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331852,"byte_end":11331928,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333074,"byte_end":11333093,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332101,"byte_end":11332161,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332166,"byte_end":11332169,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332174,"byte_end":11332237,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332242,"byte_end":11332320,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332325,"byte_end":11332392,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332397,"byte_end":11332469,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332474,"byte_end":11332544,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332549,"byte_end":11332572,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332577,"byte_end":11332580,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332585,"byte_end":11332595,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332600,"byte_end":11332603,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332608,"byte_end":11332683,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332688,"byte_end":11332761,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332766,"byte_end":11332842,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332847,"byte_end":11332920,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11332925,"byte_end":11332995,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333000,"byte_end":11333003,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333008,"byte_end":11333062,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333659,"byte_end":11333669,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333221,"byte_end":11333271,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333276,"byte_end":11333279,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333284,"byte_end":11333291,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333296,"byte_end":11333315,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333320,"byte_end":11333358,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333363,"byte_end":11333366,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333371,"byte_end":11333405,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333410,"byte_end":11333457,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333462,"byte_end":11333469,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333474,"byte_end":11333481,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333486,"byte_end":11333524,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333529,"byte_end":11333532,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333537,"byte_end":11333590,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333595,"byte_end":11333635,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11333640,"byte_end":11333647,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11338029,"byte_end":11338050,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11337983,"byte_end":11338024,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11338085,"byte_end":11338087,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11338056,"byte_end":11338080,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11337961,"byte_end":11337976,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":780}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11337879,"byte_end":11337934,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":149},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":227}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\mod.rs","byte_start":6487,"byte_end":6517,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8414,"byte_end":8431,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7196,"byte_end":7273,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7274,"byte_end":7284,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7285,"byte_end":7288,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7289,"byte_end":7354,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7355,"byte_end":7429,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7430,"byte_end":7433,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7434,"byte_end":7517,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7518,"byte_end":7521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7522,"byte_end":7536,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7537,"byte_end":7540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7541,"byte_end":7554,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7555,"byte_end":7577,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7578,"byte_end":7618,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7619,"byte_end":7622,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7623,"byte_end":7641,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7642,"byte_end":7663,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7664,"byte_end":7709,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7710,"byte_end":7751,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7752,"byte_end":7755,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7756,"byte_end":7807,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7808,"byte_end":7871,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7872,"byte_end":7893,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7894,"byte_end":7943,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7944,"byte_end":7990,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":7991,"byte_end":8012,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8013,"byte_end":8030,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8031,"byte_end":8112,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8113,"byte_end":8135,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8136,"byte_end":8153,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8154,"byte_end":8167,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8168,"byte_end":8179,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8180,"byte_end":8183,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8184,"byte_end":8217,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8218,"byte_end":8293,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8294,"byte_end":8321,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8322,"byte_end":8333,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8334,"byte_end":8337,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8338,"byte_end":8388,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8389,"byte_end":8394,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8395,"byte_end":8402,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8851,"byte_end":8876,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8698,"byte_end":8772,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8773,"byte_end":8790,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8791,"byte_end":8839,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":11384,"byte_end":11387,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":11309,"byte_end":11372,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13440,"byte_end":13451,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12177,"byte_end":12248,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12253,"byte_end":12286,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12291,"byte_end":12294,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12299,"byte_end":12370,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12375,"byte_end":12407,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12412,"byte_end":12415,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12420,"byte_end":12434,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12439,"byte_end":12442,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12447,"byte_end":12460,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12465,"byte_end":12487,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12492,"byte_end":12532,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12537,"byte_end":12540,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12545,"byte_end":12563,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12568,"byte_end":12589,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12594,"byte_end":12639,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12644,"byte_end":12690,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12695,"byte_end":12698,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12703,"byte_end":12754,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12759,"byte_end":12822,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12827,"byte_end":12848,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12853,"byte_end":12901,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12906,"byte_end":12952,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12957,"byte_end":12978,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":12983,"byte_end":13000,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13005,"byte_end":13086,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13091,"byte_end":13113,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13118,"byte_end":13135,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13140,"byte_end":13153,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13158,"byte_end":13169,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13174,"byte_end":13177,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13182,"byte_end":13215,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13220,"byte_end":13295,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13300,"byte_end":13327,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13332,"byte_end":13343,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13348,"byte_end":13351,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13356,"byte_end":13406,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13411,"byte_end":13416,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":13421,"byte_end":13428,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":16026,"byte_end":16032,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":15837,"byte_end":15909,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":15914,"byte_end":15934,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":15939,"byte_end":15942,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":15947,"byte_end":16014,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":16160,"byte_end":16172,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":16084,"byte_end":16148,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":16323,"byte_end":16332,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":16237,"byte_end":16311,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":69681,"byte_end":69694,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":69550,"byte_end":69623,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":69624,"byte_end":69627,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":69628,"byte_end":69669,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":69880,"byte_end":69883,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":69835,"byte_end":69868,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70129,"byte_end":70134,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70092,"byte_end":70117,"line_start":29,"line_end":29,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70240,"byte_end":70251,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70186,"byte_end":70228,"line_start":34,"line_end":34,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70366,"byte_end":70376,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70321,"byte_end":70354,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":71110,"byte_end":71122,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70437,"byte_end":70485,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70490,"byte_end":70493,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70498,"byte_end":70539,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70544,"byte_end":70547,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70552,"byte_end":70614,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70619,"byte_end":70679,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70684,"byte_end":70744,"line_start":50,"line_end":50,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70749,"byte_end":70752,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70757,"byte_end":70832,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70837,"byte_end":70905,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70910,"byte_end":70986,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":70991,"byte_end":71059,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":71064,"byte_end":71098,"line_start":56,"line_end":56,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":72480,"byte_end":72497,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":197}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":72280,"byte_end":72337,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":72338,"byte_end":72341,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":72342,"byte_end":72409,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":72410,"byte_end":72468,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":72675,"byte_end":72678,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":72592,"byte_end":72663,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73259,"byte_end":73262,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73044,"byte_end":73096,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73101,"byte_end":73104,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73109,"byte_end":73181,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73186,"byte_end":73247,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73705,"byte_end":73712,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73464,"byte_end":73516,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73521,"byte_end":73524,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73529,"byte_end":73602,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73607,"byte_end":73677,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":73682,"byte_end":73693,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":75552,"byte_end":75559,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":75488,"byte_end":75540,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":75845,"byte_end":75849,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":75790,"byte_end":75833,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":856},{"krate":0,"index":869},{"krate":0,"index":865},{"krate":0,"index":244},{"krate":0,"index":250},{"krate":0,"index":254},{"krate":0,"index":259},{"krate":0,"index":264},{"krate":0,"index":270}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":76962,"byte_end":76997,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78944,"byte_end":78948,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78957,"byte_end":78962,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78925,"byte_end":78931,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":862}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77174,"byte_end":77280,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77281,"byte_end":77284,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77285,"byte_end":77375,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77376,"byte_end":77379,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77380,"byte_end":77415,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77416,"byte_end":77419,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77420,"byte_end":77433,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77434,"byte_end":77437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77438,"byte_end":77475,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77476,"byte_end":77479,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77480,"byte_end":77499,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77500,"byte_end":77542,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77543,"byte_end":77593,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77594,"byte_end":77645,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77646,"byte_end":77664,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77665,"byte_end":77686,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77687,"byte_end":77729,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77730,"byte_end":77763,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77764,"byte_end":77780,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77781,"byte_end":77875,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77876,"byte_end":77886,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77887,"byte_end":77890,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77891,"byte_end":77938,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77939,"byte_end":77944,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77945,"byte_end":77952,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":77953,"byte_end":77956,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78157,"byte_end":78160,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78161,"byte_end":78247,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78248,"byte_end":78258,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78259,"byte_end":78262,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78263,"byte_end":78270,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78271,"byte_end":78306,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78307,"byte_end":78349,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78350,"byte_end":78400,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78401,"byte_end":78452,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78453,"byte_end":78456,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78457,"byte_end":78475,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78476,"byte_end":78497,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78498,"byte_end":78540,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78541,"byte_end":78588,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78589,"byte_end":78605,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78606,"byte_end":78655,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78656,"byte_end":78666,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78667,"byte_end":78670,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78671,"byte_end":78704,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78705,"byte_end":78745,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78746,"byte_end":78778,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78779,"byte_end":78784,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78785,"byte_end":78792,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":78793,"byte_end":78815,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263210,"byte_end":11263220,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263371,"byte_end":11263381,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263708,"byte_end":11263718,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11272901,"byte_end":11272910,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273110,"byte_end":11273120,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273271,"byte_end":11273280,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273603,"byte_end":11273613,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273859,"byte_end":11273867,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273964,"byte_end":11273972,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11274083,"byte_end":11274091,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11274191,"byte_end":11274199,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11274309,"byte_end":11274319,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11276265,"byte_end":11276275,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279111,"byte_end":11279117,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282639,"byte_end":11282645,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287960,"byte_end":11287966,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11288282,"byte_end":11288288,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289003,"byte_end":11289009,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11290049,"byte_end":11290060,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11290987,"byte_end":11290997,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291886,"byte_end":11291896,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293993,"byte_end":11294003,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11294316,"byte_end":11294326,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11295052,"byte_end":11295062,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296041,"byte_end":11296052,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296408,"byte_end":11296419,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11298528,"byte_end":11298539,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11299303,"byte_end":11299314,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11299555,"byte_end":11299566,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314574,"byte_end":11314594,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11317947,"byte_end":11317967,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11318854,"byte_end":11318874,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320215,"byte_end":11320235,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320328,"byte_end":11320335,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329934,"byte_end":11329941,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11330067,"byte_end":11330092,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11330250,"byte_end":11330275,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11330410,"byte_end":11330435,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331504,"byte_end":11331514,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11334056,"byte_end":11334066,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11337477,"byte_end":11337487,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11337810,"byte_end":11337820,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11338125,"byte_end":11338140,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11338422,"byte_end":11338437,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11338554,"byte_end":11338569,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8634,"byte_end":8651,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8676,"byte_end":8693,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":9427,"byte_end":9452,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":9526,"byte_end":9543,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":9768,"byte_end":9785,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":10191,"byte_end":10208,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":11178,"byte_end":11195,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":11285,"byte_end":11302,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":17168,"byte_end":17193,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":17365,"byte_end":17390,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":18825,"byte_end":18850,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":20038,"byte_end":20052,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":20386,"byte_end":20403,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":21003,"byte_end":21020,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":21878,"byte_end":21891,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":23076,"byte_end":23098,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40617,"byte_end":40625,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40875,"byte_end":40883,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40988,"byte_end":40996,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41305,"byte_end":41315,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":69815,"byte_end":69828,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":71534,"byte_end":71547,"line_start":69,"line_end":69,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":71761,"byte_end":71774,"line_start":77,"line_end":77,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":71892,"byte_end":71905,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":72565,"byte_end":72582,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":75956,"byte_end":75973,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76263,"byte_end":76280,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76498,"byte_end":76515,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76611,"byte_end":76628,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76653,"byte_end":76670,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76814,"byte_end":76831,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":79568,"byte_end":79574,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":79817,"byte_end":79823,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":80096,"byte_end":80102,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":80430,"byte_end":80436,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":80790,"byte_end":80796,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":81348,"byte_end":81354,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":758,"byte_end":763,"line_start":30,"line_end":30,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":300}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\mod.rs","byte_start":11261728,"byte_end":11261744,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":576}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":907,"byte_end":911,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\lib.rs","byte_start":922,"byte_end":928,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":228}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263210,"byte_end":11263220,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263371,"byte_end":11263381,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":326}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\bytes_codec.rs","byte_start":11263708,"byte_end":11263718,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":337}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11272901,"byte_end":11272910,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273110,"byte_end":11273120,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":368},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273271,"byte_end":11273280,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273603,"byte_end":11273613,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":368},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273859,"byte_end":11273867,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":1810}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11273964,"byte_end":11273972,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":1813}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11274083,"byte_end":11274091,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":1810}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11274191,"byte_end":11274199,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":1813}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11274309,"byte_end":11274319,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1005},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_impl.rs","byte_start":11276265,"byte_end":11276275,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1005},"to":{"krate":25,"index":9}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11279111,"byte_end":11279117,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11282639,"byte_end":11282645,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11287960,"byte_end":11287966,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":955},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11288282,"byte_end":11288288,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":955},"to":{"krate":25,"index":9}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11289003,"byte_end":11289009,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed.rs","byte_start":11290049,"byte_end":11290060,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11290987,"byte_end":11290997,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11291886,"byte_end":11291896,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11293993,"byte_end":11294003,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":914},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11294316,"byte_end":11294326,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":914},"to":{"krate":25,"index":9}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_read.rs","byte_start":11295052,"byte_end":11295062,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296041,"byte_end":11296052,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11296408,"byte_end":11296419,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11298528,"byte_end":11298539,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":873},"to":{"krate":25,"index":9}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11299303,"byte_end":11299314,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":873},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\framed_write.rs","byte_start":11299555,"byte_end":11299566,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11314574,"byte_end":11314594,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11317947,"byte_end":11317967,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":739},"to":{"krate":0,"index":326}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11318854,"byte_end":11318874,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":739},"to":{"krate":0,"index":337}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320215,"byte_end":11320235,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":739},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11320328,"byte_end":11320335,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11329934,"byte_end":11329941,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":727},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11330067,"byte_end":11330092,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11330250,"byte_end":11330275,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\length_delimited.rs","byte_start":11330410,"byte_end":11330435,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11331504,"byte_end":11331514,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11334056,"byte_end":11334066,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":755},"to":{"krate":0,"index":326}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11337477,"byte_end":11337487,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":755},"to":{"krate":0,"index":337}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11337810,"byte_end":11337820,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":755},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11338125,"byte_end":11338140,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":7037}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11338422,"byte_end":11338437,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\codec\\lines_codec.rs","byte_start":11338554,"byte_end":11338569,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":777},"to":{"krate":1,"index":1751}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8634,"byte_end":8651,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":8676,"byte_end":8693,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":9427,"byte_end":9452,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":9526,"byte_end":9543,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":9768,"byte_end":9785,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":10191,"byte_end":10208,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":11178,"byte_end":11195,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":2131}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":11285,"byte_end":11302,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":17168,"byte_end":17193,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":17365,"byte_end":17390,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":18825,"byte_end":18850,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":20038,"byte_end":20052,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":20386,"byte_end":20403,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":21003,"byte_end":21020,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":21878,"byte_end":21891,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\cancellation_token.rs","byte_start":23076,"byte_end":23098,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40617,"byte_end":40625,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40875,"byte_end":40883,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":2343}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40988,"byte_end":40996,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":2356}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41305,"byte_end":41315,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":69815,"byte_end":69828,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":71534,"byte_end":71547,"line_start":69,"line_end":69,"column_start":17,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":164},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":71761,"byte_end":71774,"line_start":77,"line_end":77,"column_start":16,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":1832}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\poll_semaphore.rs","byte_start":71892,"byte_end":71905,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":72565,"byte_end":72582,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":75956,"byte_end":75973,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76263,"byte_end":76280,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2143}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76498,"byte_end":76515,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76611,"byte_end":76628,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2184}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76653,"byte_end":76670,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2367}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\sync\\reusable_box.rs","byte_start":76814,"byte_end":76831,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":7032}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":79568,"byte_end":79574,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":9666}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":79817,"byte_end":79823,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":856},"to":{"krate":14,"index":141}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":80096,"byte_end":80102,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":856},"to":{"krate":14,"index":113}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":80430,"byte_end":80436,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":856},"to":{"krate":14,"index":166}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":80790,"byte_end":80796,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":856},"to":{"krate":14,"index":192}},{"span":{"file_name":"C:\\Users\\gabri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.3\\src\\either.rs","byte_start":81348,"byte_end":81354,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":856},"to":{"krate":13,"index":68}}]}